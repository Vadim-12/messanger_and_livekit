import {
  require_jsx_runtime,
  require_prop_types
} from "./chunk-DMKXATPJ.js";
import {
  require_react_dom
} from "./chunk-5LW6CXX4.js";
import {
  require_react
} from "./chunk-YN3MIK7E.js";
import {
  ConnectionQuality,
  ConnectionState,
  LocalParticipant,
  LocalTrack,
  ParticipantEvent,
  RemoteTrack,
  Room,
  RoomEvent,
  Track
} from "./chunk-GSPTZZSA.js";
import {
  __commonJS,
  __toESM
} from "./chunk-4EOJPDL2.js";

// node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/PopoverPortal.js
var require_PopoverPortal = __commonJS({
  "node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/PopoverPortal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PopoverPortal = void 0;
    var react_1 = require_react();
    var react_dom_1 = require_react_dom();
    var PopoverPortal = function(_a) {
      var container = _a.container, element = _a.element, children = _a.children;
      react_1.useLayoutEffect(function() {
        container.appendChild(element);
        return function() {
          container.removeChild(element);
        };
      }, [container, element]);
      return react_dom_1.createPortal(children, element);
    };
    exports.PopoverPortal = PopoverPortal;
  }
});

// node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/util.js
var require_util = __commonJS({
  "node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getNudgedPopoverRect = exports.getNewPopoverRect = exports.popoverRectForPosition = exports.createContainer = exports.targetPositionHasChanged = exports.popoverStatesAreEqual = exports.rectsAreEqual = exports.arrayUnique = exports.Constants = void 0;
    exports.Constants = {
      POPOVER_CONTAINER_CLASS_NAME: "react-tiny-popover-container",
      DEFAULT_ALIGN: "center",
      OBSERVER_THRESHOLDS: Array(1e3).fill(null).map(function(_, i) {
        return i / 1e3;
      }).reverse(),
      DEFAULT_POSITIONS: ["top", "left", "right", "bottom"],
      EMPTY_CLIENT_RECT: {
        top: 0,
        left: 0,
        bottom: 0,
        height: 0,
        right: 0,
        width: 0
      }
    };
    var arrayUnique = function(array) {
      return array.filter(function(value, index, self) {
        return self.indexOf(value) === index;
      });
    };
    exports.arrayUnique = arrayUnique;
    var rectsAreEqual = function(rectA, rectB) {
      return rectA === rectB || (rectA === null || rectA === void 0 ? void 0 : rectA.bottom) === (rectB === null || rectB === void 0 ? void 0 : rectB.bottom) && (rectA === null || rectA === void 0 ? void 0 : rectA.height) === (rectB === null || rectB === void 0 ? void 0 : rectB.height) && (rectA === null || rectA === void 0 ? void 0 : rectA.left) === (rectB === null || rectB === void 0 ? void 0 : rectB.left) && (rectA === null || rectA === void 0 ? void 0 : rectA.right) === (rectB === null || rectB === void 0 ? void 0 : rectB.right) && (rectA === null || rectA === void 0 ? void 0 : rectA.top) === (rectB === null || rectB === void 0 ? void 0 : rectB.top) && (rectA === null || rectA === void 0 ? void 0 : rectA.width) === (rectB === null || rectB === void 0 ? void 0 : rectB.width);
    };
    exports.rectsAreEqual = rectsAreEqual;
    var popoverStatesAreEqual = function(stateA, stateB) {
      return stateA === stateB || (stateA === null || stateA === void 0 ? void 0 : stateA.align) === (stateB === null || stateB === void 0 ? void 0 : stateB.align) && (stateA === null || stateA === void 0 ? void 0 : stateA.nudgedLeft) === (stateB === null || stateB === void 0 ? void 0 : stateB.nudgedLeft) && (stateA === null || stateA === void 0 ? void 0 : stateA.nudgedTop) === (stateB === null || stateB === void 0 ? void 0 : stateB.nudgedTop) && stateA.padding === stateB.padding && exports.rectsAreEqual(stateA === null || stateA === void 0 ? void 0 : stateA.popoverRect, stateB === null || stateB === void 0 ? void 0 : stateB.popoverRect) && exports.rectsAreEqual(stateA === null || stateA === void 0 ? void 0 : stateA.childRect, stateB === null || stateB === void 0 ? void 0 : stateB.childRect) && (stateA === null || stateA === void 0 ? void 0 : stateA.position) === (stateB === null || stateB === void 0 ? void 0 : stateB.position);
    };
    exports.popoverStatesAreEqual = popoverStatesAreEqual;
    var targetPositionHasChanged = function(oldRect, newRect) {
      return oldRect === void 0 || oldRect.left !== newRect.left || oldRect.top !== newRect.top || oldRect.width !== newRect.width || oldRect.height !== newRect.height;
    };
    exports.targetPositionHasChanged = targetPositionHasChanged;
    var createContainer = function(containerStyle, containerClassName) {
      var container = window.document.createElement("div");
      if (containerClassName)
        container.className = containerClassName;
      Object.assign(container.style, containerStyle);
      return container;
    };
    exports.createContainer = createContainer;
    var popoverRectForPosition = function(position, childRect, popoverRect, padding, align) {
      var targetMidX = childRect.left + childRect.width / 2;
      var targetMidY = childRect.top + childRect.height / 2;
      var width = popoverRect.width, height = popoverRect.height;
      var top;
      var left;
      switch (position) {
        case "left":
          top = targetMidY - height / 2;
          left = childRect.left - padding - width;
          if (align === "start") {
            top = childRect.top;
          }
          if (align === "end") {
            top = childRect.bottom - height;
          }
          break;
        case "bottom":
          top = childRect.bottom + padding;
          left = targetMidX - width / 2;
          if (align === "start") {
            left = childRect.left;
          }
          if (align === "end") {
            left = childRect.right - width;
          }
          break;
        case "right":
          top = targetMidY - height / 2;
          left = childRect.right + padding;
          if (align === "start") {
            top = childRect.top;
          }
          if (align === "end") {
            top = childRect.bottom - height;
          }
          break;
        default:
          top = childRect.top - height - padding;
          left = targetMidX - width / 2;
          if (align === "start") {
            left = childRect.left;
          }
          if (align === "end") {
            left = childRect.right - width;
          }
          break;
      }
      return { top, left, width, height, right: left + width, bottom: top + height };
    };
    exports.popoverRectForPosition = popoverRectForPosition;
    var getNewPopoverRect = function(_a, boundaryInset) {
      var position = _a.position, align = _a.align, childRect = _a.childRect, popoverRect = _a.popoverRect, parentRect = _a.parentRect, padding = _a.padding, reposition = _a.reposition;
      var rect = exports.popoverRectForPosition(position, childRect, popoverRect, padding, align);
      var boundaryViolation = reposition && (position === "top" && rect.top < parentRect.top + boundaryInset || position === "left" && rect.left < parentRect.left + boundaryInset || position === "right" && rect.right > parentRect.right - boundaryInset || position === "bottom" && rect.bottom > parentRect.bottom - boundaryInset);
      return {
        rect,
        boundaryViolation
      };
    };
    exports.getNewPopoverRect = getNewPopoverRect;
    var getNudgedPopoverRect = function(popoverRect, parentRect, boundaryInset) {
      var topBoundary = parentRect.top + boundaryInset;
      var leftBoundary = parentRect.left + boundaryInset;
      var rightBoundary = parentRect.right - boundaryInset;
      var bottomBoundary = parentRect.bottom - boundaryInset;
      var top = popoverRect.top < topBoundary ? topBoundary : popoverRect.top;
      top = top + popoverRect.height > bottomBoundary ? bottomBoundary - popoverRect.height : top;
      var left = popoverRect.left < leftBoundary ? leftBoundary : popoverRect.left;
      left = left + popoverRect.width > rightBoundary ? rightBoundary - popoverRect.width : left;
      return {
        top,
        left,
        width: popoverRect.width,
        height: popoverRect.height,
        right: left + popoverRect.width,
        bottom: top + popoverRect.height
      };
    };
    exports.getNudgedPopoverRect = getNudgedPopoverRect;
  }
});

// node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/useElementRef.js
var require_useElementRef = __commonJS({
  "node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/useElementRef.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useElementRef = void 0;
    var react_1 = require_react();
    var util_1 = require_util();
    var useElementRef = function(containerClassName, containerStyle) {
      var element = react_1.useMemo(function() {
        return util_1.createContainer(containerStyle, containerClassName);
      }, [containerClassName, containerStyle]);
      return react_1.useRef(element);
    };
    exports.useElementRef = useElementRef;
  }
});

// node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/usePopover.js
var require_usePopover = __commonJS({
  "node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/usePopover.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.usePopover = void 0;
    var react_1 = require_react();
    var util_1 = require_util();
    var useElementRef_1 = require_useElementRef();
    var usePopover = function(_a) {
      var childRef = _a.childRef, positions = _a.positions, containerClassName = _a.containerClassName, containerParent = _a.containerParent, contentLocation = _a.contentLocation, align = _a.align, padding = _a.padding, reposition = _a.reposition, boundaryInset = _a.boundaryInset, onPositionPopover = _a.onPositionPopover;
      var popoverRef = useElementRef_1.useElementRef(containerClassName, {
        position: "fixed",
        overflow: "visible",
        top: "0px",
        left: "0px"
      });
      var positionPopover = react_1.useCallback(function(positionIndex, childRect, popoverRect, parentRect) {
        var _a2;
        if (positionIndex === void 0) {
          positionIndex = 0;
        }
        if (childRect === void 0) {
          childRect = (_a2 = childRef === null || childRef === void 0 ? void 0 : childRef.current) === null || _a2 === void 0 ? void 0 : _a2.getBoundingClientRect();
        }
        if (popoverRect === void 0) {
          popoverRect = popoverRef.current.getBoundingClientRect();
        }
        if (parentRect === void 0) {
          parentRect = containerParent === null || containerParent === void 0 ? void 0 : containerParent.getBoundingClientRect();
        }
        if (!childRect || !parentRect) {
          return;
        }
        if (contentLocation) {
          var _b = typeof contentLocation === "function" ? contentLocation({
            childRect,
            popoverRect,
            parentRect,
            padding,
            nudgedTop: 0,
            nudgedLeft: 0,
            boundaryInset
          }) : contentLocation, inputTop = _b.top, inputLeft = _b.left;
          var left_1 = parentRect.left + inputLeft;
          var top_1 = parentRect.top + inputTop;
          popoverRef.current.style.transform = "translate(" + left_1 + "px, " + top_1 + "px)";
          onPositionPopover({
            childRect,
            popoverRect,
            parentRect,
            padding,
            nudgedTop: 0,
            nudgedLeft: 0,
            boundaryInset
          });
          return;
        }
        var isExhausted = positionIndex === positions.length;
        var position = isExhausted ? positions[0] : positions[positionIndex];
        var _c = util_1.getNewPopoverRect({
          childRect,
          popoverRect,
          parentRect,
          position,
          align,
          padding,
          reposition
        }, boundaryInset), rect = _c.rect, boundaryViolation = _c.boundaryViolation;
        if (boundaryViolation && reposition && !isExhausted) {
          positionPopover(positionIndex + 1, childRect, popoverRect, parentRect);
          return;
        }
        var top = rect.top, left = rect.left, width = rect.width, height = rect.height;
        var shouldNudge = reposition && !isExhausted;
        var _d = util_1.getNudgedPopoverRect(rect, parentRect, boundaryInset), nudgedLeft = _d.left, nudgedTop = _d.top;
        var finalTop = top;
        var finalLeft = left;
        if (shouldNudge) {
          finalTop = nudgedTop;
          finalLeft = nudgedLeft;
        }
        popoverRef.current.style.transform = "translate(" + finalLeft + "px, " + finalTop + "px)";
        onPositionPopover({
          childRect,
          popoverRect: {
            top: finalTop,
            left: finalLeft,
            width,
            height,
            right: finalLeft + width,
            bottom: finalTop + height
          },
          parentRect,
          position,
          align,
          padding,
          nudgedTop: nudgedTop - top,
          nudgedLeft: nudgedLeft - left,
          boundaryInset
        });
      }, [
        childRef,
        popoverRef,
        positions,
        align,
        padding,
        reposition,
        boundaryInset,
        containerParent,
        contentLocation,
        onPositionPopover
      ]);
      return [positionPopover, popoverRef];
    };
    exports.usePopover = usePopover;
  }
});

// node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/useMemoizedArray.js
var require_useMemoizedArray = __commonJS({
  "node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/useMemoizedArray.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useMemoizedArray = void 0;
    var react_1 = require_react();
    var useMemoizedArray = function(externalArray) {
      var prevArrayRef = react_1.useRef(externalArray);
      var array = react_1.useMemo(function() {
        if (prevArrayRef.current === externalArray)
          return prevArrayRef.current;
        if (prevArrayRef.current.length !== externalArray.length) {
          prevArrayRef.current = externalArray;
          return externalArray;
        }
        for (var i = 0; i < externalArray.length; i += 1) {
          if (externalArray[i] !== prevArrayRef.current[i]) {
            prevArrayRef.current = externalArray;
            return externalArray;
          }
        }
        return prevArrayRef.current;
      }, [externalArray]);
      return array;
    };
    exports.useMemoizedArray = useMemoizedArray;
  }
});

// node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/useArrowContainer.js
var require_useArrowContainer = __commonJS({
  "node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/useArrowContainer.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p2 in s)
            if (Object.prototype.hasOwnProperty.call(s, p2))
              t[p2] = s[p2];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useArrowContainer = void 0;
    var react_1 = require_react();
    var useArrowContainer = function(_a) {
      var childRect = _a.childRect, popoverRect = _a.popoverRect, position = _a.position, arrowSize = _a.arrowSize, arrowColor = _a.arrowColor;
      var arrowContainerStyle = react_1.useMemo(function() {
        return {
          padding: arrowSize
        };
      }, [arrowSize]);
      var arrowStyle = react_1.useMemo(function() {
        return __assign({ position: "absolute" }, function() {
          var arrowWidth = arrowSize * 2;
          var top = childRect.top - popoverRect.top + childRect.height / 2 - arrowWidth / 2;
          var left = childRect.left - popoverRect.left + childRect.width / 2 - arrowWidth / 2;
          var lowerBound = arrowSize;
          var leftUpperBound = popoverRect.width - arrowSize;
          var topUpperBound = popoverRect.height - arrowSize;
          left = left < lowerBound ? lowerBound : left;
          left = left + arrowWidth > leftUpperBound ? leftUpperBound - arrowWidth : left;
          top = top < lowerBound ? lowerBound : top;
          top = top + arrowWidth > topUpperBound ? topUpperBound - arrowWidth : top;
          top = Number.isNaN(top) ? 0 : top;
          left = Number.isNaN(left) ? 0 : left;
          switch (position) {
            case "right":
              return {
                borderTop: arrowSize + "px solid transparent",
                borderBottom: arrowSize + "px solid transparent",
                borderRight: arrowSize + "px solid " + arrowColor,
                left: 0,
                top
              };
            case "left":
              return {
                borderTop: arrowSize + "px solid transparent",
                borderBottom: arrowSize + "px solid transparent",
                borderLeft: arrowSize + "px solid " + arrowColor,
                right: 0,
                top
              };
            case "bottom":
              return {
                borderLeft: arrowSize + "px solid transparent",
                borderRight: arrowSize + "px solid transparent",
                borderBottom: arrowSize + "px solid " + arrowColor,
                top: 0,
                left
              };
            case "top":
              return {
                borderLeft: arrowSize + "px solid transparent",
                borderRight: arrowSize + "px solid transparent",
                borderTop: arrowSize + "px solid " + arrowColor,
                bottom: 0,
                left
              };
            default:
              return {
                display: "hidden"
              };
          }
        }());
      }, [
        arrowColor,
        arrowSize,
        childRect.height,
        childRect.left,
        childRect.top,
        childRect.width,
        popoverRect.height,
        popoverRect.left,
        popoverRect.top,
        popoverRect.width,
        position
      ]);
      return {
        arrowContainerStyle,
        arrowStyle
      };
    };
    exports.useArrowContainer = useArrowContainer;
  }
});

// node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/ArrowContainer.js
var require_ArrowContainer = __commonJS({
  "node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/ArrowContainer.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p2 in s)
            if (Object.prototype.hasOwnProperty.call(s, p2))
              t[p2] = s[p2];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ArrowContainer = void 0;
    var jsx_runtime_1 = require_jsx_runtime();
    var react_1 = require_react();
    var useArrowContainer_1 = require_useArrowContainer();
    var ArrowContainer = function(_a) {
      var childRect = _a.childRect, popoverRect = _a.popoverRect, position = _a.position, arrowColor = _a.arrowColor, arrowSize = _a.arrowSize, arrowClassName = _a.arrowClassName, externalArrowStyle = _a.arrowStyle, className = _a.className, children = _a.children, externalArrowContainerStyle = _a.style;
      var _b = useArrowContainer_1.useArrowContainer({
        childRect,
        popoverRect,
        position,
        arrowColor,
        arrowSize
      }), arrowContainerStyle = _b.arrowContainerStyle, arrowStyle = _b.arrowStyle;
      var mergedContainerStyle = react_1.useMemo(function() {
        return __assign(__assign({}, arrowContainerStyle), externalArrowContainerStyle);
      }, [arrowContainerStyle, externalArrowContainerStyle]);
      var mergedArrowStyle = react_1.useMemo(function() {
        return __assign(__assign({}, arrowStyle), externalArrowStyle);
      }, [arrowStyle, externalArrowStyle]);
      return jsx_runtime_1.jsxs("div", __assign({ className, style: mergedContainerStyle }, { children: [jsx_runtime_1.jsx("div", { style: mergedArrowStyle, className: arrowClassName }, void 0), children] }), void 0);
    };
    exports.ArrowContainer = ArrowContainer;
  }
});

// node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/Popover.js
var require_Popover = __commonJS({
  "node_modules/@livekit/react-components/node_modules/react-tiny-popover/dist/Popover.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p2 in s)
            if (Object.prototype.hasOwnProperty.call(s, p2))
              t[p2] = s[p2];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Popover = exports.usePopover = exports.ArrowContainer = exports.useArrowContainer = void 0;
    var jsx_runtime_1 = require_jsx_runtime();
    var react_1 = require_react();
    var PopoverPortal_1 = require_PopoverPortal();
    var util_1 = require_util();
    var usePopover_1 = require_usePopover();
    Object.defineProperty(exports, "usePopover", { enumerable: true, get: function() {
      return usePopover_1.usePopover;
    } });
    var useMemoizedArray_1 = require_useMemoizedArray();
    var useArrowContainer_1 = require_useArrowContainer();
    Object.defineProperty(exports, "useArrowContainer", { enumerable: true, get: function() {
      return useArrowContainer_1.useArrowContainer;
    } });
    var ArrowContainer_1 = require_ArrowContainer();
    Object.defineProperty(exports, "ArrowContainer", { enumerable: true, get: function() {
      return ArrowContainer_1.ArrowContainer;
    } });
    exports.Popover = react_1.forwardRef(function(_a, externalRef) {
      var isOpen = _a.isOpen, children = _a.children, content = _a.content, _b = _a.positions, externalPositions = _b === void 0 ? util_1.Constants.DEFAULT_POSITIONS : _b, _c = _a.align, align = _c === void 0 ? util_1.Constants.DEFAULT_ALIGN : _c, _d = _a.padding, padding = _d === void 0 ? 0 : _d, _e = _a.reposition, reposition = _e === void 0 ? true : _e, _f = _a.containerParent, containerParent = _f === void 0 ? window.document.body : _f, _g = _a.containerClassName, containerClassName = _g === void 0 ? "react-tiny-popover-container" : _g, containerStyle = _a.containerStyle, contentLocation = _a.contentLocation, _h = _a.boundaryInset, boundaryInset = _h === void 0 ? 0 : _h, onClickOutside = _a.onClickOutside;
      var positions = useMemoizedArray_1.useMemoizedArray(externalPositions);
      var prevIsOpen = react_1.useRef(false);
      var prevPositions = react_1.useRef();
      var prevContentLocation = react_1.useRef();
      var prevReposition = react_1.useRef(reposition);
      var childRef = react_1.useRef();
      var _j = react_1.useState({
        align,
        nudgedLeft: 0,
        nudgedTop: 0,
        position: positions[0],
        padding,
        childRect: util_1.Constants.EMPTY_CLIENT_RECT,
        popoverRect: util_1.Constants.EMPTY_CLIENT_RECT,
        parentRect: util_1.Constants.EMPTY_CLIENT_RECT,
        boundaryInset
      }), popoverState = _j[0], setPopoverState = _j[1];
      var onPositionPopover = react_1.useCallback(function(popoverState2) {
        return setPopoverState(popoverState2);
      }, []);
      var _k = usePopover_1.usePopover({
        childRef,
        containerClassName,
        containerParent,
        contentLocation,
        positions,
        align,
        padding,
        boundaryInset,
        reposition,
        onPositionPopover
      }), positionPopover = _k[0], popoverRef = _k[1];
      react_1.useLayoutEffect(function() {
        var shouldUpdate = true;
        var updatePopover = function() {
          var _a2, _b2;
          if (isOpen && shouldUpdate) {
            var childRect = (_a2 = childRef === null || childRef === void 0 ? void 0 : childRef.current) === null || _a2 === void 0 ? void 0 : _a2.getBoundingClientRect();
            var popoverRect = (_b2 = popoverRef === null || popoverRef === void 0 ? void 0 : popoverRef.current) === null || _b2 === void 0 ? void 0 : _b2.getBoundingClientRect();
            if (childRect != null && popoverRect != null && (!util_1.rectsAreEqual(childRect, {
              top: popoverState.childRect.top,
              left: popoverState.childRect.left,
              width: popoverState.childRect.width,
              height: popoverState.childRect.height,
              bottom: popoverState.childRect.top + popoverState.childRect.height,
              right: popoverState.childRect.left + popoverState.childRect.width
            }) || popoverRect.width !== popoverState.popoverRect.width || popoverRect.height !== popoverState.popoverRect.height || popoverState.padding !== padding || popoverState.align !== align || positions !== prevPositions.current || contentLocation !== prevContentLocation.current || reposition !== prevReposition.current)) {
              positionPopover();
            }
            if (positions !== prevPositions.current) {
              prevPositions.current = positions;
            }
            if (contentLocation !== prevContentLocation.current) {
              prevContentLocation.current = contentLocation;
            }
            if (reposition !== prevReposition.current) {
              prevReposition.current = reposition;
            }
            if (shouldUpdate) {
              window.requestAnimationFrame(updatePopover);
            }
          }
          prevIsOpen.current = isOpen;
        };
        window.requestAnimationFrame(updatePopover);
        return function() {
          shouldUpdate = false;
        };
      }, [
        align,
        contentLocation,
        isOpen,
        padding,
        popoverRef,
        popoverState.align,
        popoverState.childRect.height,
        popoverState.childRect.left,
        popoverState.childRect.top,
        popoverState.childRect.width,
        popoverState.padding,
        popoverState.popoverRect.height,
        popoverState.popoverRect.width,
        positionPopover,
        positions,
        reposition
      ]);
      react_1.useEffect(function() {
        var popoverElement = popoverRef.current;
        Object.assign(popoverElement.style, containerStyle);
        return function() {
          Object.keys(containerStyle !== null && containerStyle !== void 0 ? containerStyle : {}).forEach(function(key) {
            return delete popoverElement.style[key];
          });
        };
      }, [containerStyle, isOpen, popoverRef]);
      var handleOnClickOutside = react_1.useCallback(function(e) {
        var _a2, _b2;
        if (isOpen && !((_a2 = popoverRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(e.target)) && !((_b2 = childRef.current) === null || _b2 === void 0 ? void 0 : _b2.contains(e.target))) {
          onClickOutside === null || onClickOutside === void 0 ? void 0 : onClickOutside(e);
        }
      }, [isOpen, onClickOutside, popoverRef]);
      var handleWindowResize = react_1.useCallback(function() {
        if (childRef.current) {
          window.requestAnimationFrame(function() {
            return positionPopover();
          });
        }
      }, [positionPopover]);
      react_1.useEffect(function() {
        window.addEventListener("click", handleOnClickOutside);
        window.addEventListener("resize", handleWindowResize);
        return function() {
          window.removeEventListener("click", handleOnClickOutside);
          window.removeEventListener("resize", handleWindowResize);
        };
      }, [handleOnClickOutside, handleWindowResize]);
      var handleRef = react_1.useCallback(function(node) {
        childRef.current = node;
        if (externalRef != null) {
          if (typeof externalRef === "object") {
            externalRef.current = node;
          } else if (typeof externalRef === "function") {
            externalRef(node);
          }
        }
      }, [externalRef]);
      var renderChild = function() {
        return react_1.cloneElement(children, {
          ref: handleRef
        });
      };
      var renderPopover = function() {
        if (!isOpen)
          return null;
        return jsx_runtime_1.jsx(PopoverPortal_1.PopoverPortal, __assign({ element: popoverRef.current, container: containerParent }, { children: typeof content === "function" ? content(popoverState) : content }), void 0);
      };
      return jsx_runtime_1.jsxs(jsx_runtime_1.Fragment, { children: [renderChild(), renderPopover()] }, void 0);
    });
  }
});

// node_modules/react-aspect-ratio/dist/es/react-15.6.js
var require_react_15_6 = __commonJS({
  "node_modules/react-aspect-ratio/dist/es/react-15.6.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _react = require_react();
    var _jsxRuntime = require_jsx_runtime();
    var _excluded2 = ["className", "children", "ratio", "style"];
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    var CUSTOM_PROPERTY_NAME = "--aspect-ratio";
    var DEFAULT_CLASS_NAME = "react-aspect-ratio-placeholder";
    var AspectRatio2 = class extends _react.Component {
      constructor() {
        super(...arguments);
        this.node = null;
        this.setNode = (node) => {
          this.node = node;
        };
      }
      componentDidUpdate() {
        if (this.node) {
          var {
            node
          } = this;
          var customPropertyValue = node.style.getPropertyValue(CUSTOM_PROPERTY_NAME);
          if (!customPropertyValue) {
            node.style.setProperty(CUSTOM_PROPERTY_NAME, "(" + this.props.ratio + ")");
          }
        }
      }
      render() {
        var _this$props = this.props, {
          className,
          children,
          ratio,
          style
        } = _this$props, restProps = _objectWithoutPropertiesLoose2(_this$props, _excluded2);
        var newStyle = _extends2({}, style, {
          // https://github.com/roderickhsiao/react-aspect-ratio/commit/53ec15858ae186c41e70b8c14cc5a5b6e97cb6e3
          [CUSTOM_PROPERTY_NAME]: "(" + ratio + ")"
        });
        return (0, _jsxRuntime.jsx)("div", _extends2({
          className,
          ref: this.setNode,
          style: newStyle
        }, restProps, {
          children
        }));
      }
    };
    AspectRatio2.defaultProps = {
      className: DEFAULT_CLASS_NAME,
      ratio: 1
    };
    var _default2 = AspectRatio2;
    exports.default = _default2;
  }
});

// node_modules/react-aspect-ratio/dist/es/react-latest.js
var require_react_latest = __commonJS({
  "node_modules/react-aspect-ratio/dist/es/react-latest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _jsxRuntime = require_jsx_runtime();
    var _excluded2 = ["className", "children", "ratio", "style"];
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    var CUSTOM_PROPERTY_NAME = "--aspect-ratio";
    var DEFAULT_CLASS_NAME = "react-aspect-ratio-placeholder";
    function AspectRatio2(props) {
      var {
        className = DEFAULT_CLASS_NAME,
        children,
        ratio = 1,
        style
      } = props, restProps = _objectWithoutPropertiesLoose2(props, _excluded2);
      var newStyle = _extends2({}, style, {
        // https://github.com/roderickhsiao/react-aspect-ratio/commit/53ec15858ae186c41e70b8c14cc5a5b6e97cb6e3
        [CUSTOM_PROPERTY_NAME]: "(" + ratio + ")"
      });
      return (0, _jsxRuntime.jsx)("div", _extends2({
        className,
        style: newStyle
      }, restProps, {
        children
      }));
    }
    var _default2 = AspectRatio2;
    exports.default = _default2;
  }
});

// node_modules/react-aspect-ratio/dist/es/index.js
var require_es = __commonJS({
  "node_modules/react-aspect-ratio/dist/es/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.default = exports.AspectRatio = void 0;
    var _react = _interopRequireDefault(require_react_15_6());
    var _reactLatest = _interopRequireDefault(require_react_latest());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default2 = _react.default;
    exports.default = _default2;
    var AspectRatio2 = _reactLatest.default;
    exports.AspectRatio = AspectRatio2;
  }
});

// node_modules/react-responsive/dist/react-responsive.js
var require_react_responsive = __commonJS({
  "node_modules/react-responsive/dist/react-responsive.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory(require_react());
      else if (typeof define === "function" && define.amd)
        define(["react"], factory);
      else if (typeof exports === "object")
        exports["MediaQuery"] = factory(require_react());
      else
        root["MediaQuery"] = factory(root["React"]);
    })(exports, (__WEBPACK_EXTERNAL_MODULE_react__) => {
      return (
        /******/
        (() => {
          var __webpack_modules__ = {
            /***/
            "./node_modules/css-mediaquery/index.js": (
              /*!**********************************************!*\
                !*** ./node_modules/css-mediaquery/index.js ***!
                \**********************************************/
              /***/
              (__unused_webpack_module, exports2) => {
                "use strict";
                exports2.match = matchQuery;
                exports2.parse = parseQuery;
                var RE_MEDIA_QUERY = /(?:(only|not)?\s*([^\s\(\)]+)(?:\s*and)?\s*)?(.+)?/i, RE_MQ_EXPRESSION = /\(\s*([^\s\:\)]+)\s*(?:\:\s*([^\s\)]+))?\s*\)/, RE_MQ_FEATURE = /^(?:(min|max)-)?(.+)/, RE_LENGTH_UNIT = /(em|rem|px|cm|mm|in|pt|pc)?$/, RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;
                function matchQuery(mediaQuery, values) {
                  return parseQuery(mediaQuery).some(function(query) {
                    var inverse = query.inverse;
                    var typeMatch = query.type === "all" || values.type === query.type;
                    if (typeMatch && inverse || !(typeMatch || inverse)) {
                      return false;
                    }
                    var expressionsMatch = query.expressions.every(function(expression) {
                      var feature = expression.feature, modifier = expression.modifier, expValue = expression.value, value = values[feature];
                      if (!value) {
                        return false;
                      }
                      switch (feature) {
                        case "orientation":
                        case "scan":
                          return value.toLowerCase() === expValue.toLowerCase();
                        case "width":
                        case "height":
                        case "device-width":
                        case "device-height":
                          expValue = toPx(expValue);
                          value = toPx(value);
                          break;
                        case "resolution":
                          expValue = toDpi(expValue);
                          value = toDpi(value);
                          break;
                        case "aspect-ratio":
                        case "device-aspect-ratio":
                        case /* Deprecated */
                        "device-pixel-ratio":
                          expValue = toDecimal(expValue);
                          value = toDecimal(value);
                          break;
                        case "grid":
                        case "color":
                        case "color-index":
                        case "monochrome":
                          expValue = parseInt(expValue, 10) || 1;
                          value = parseInt(value, 10) || 0;
                          break;
                      }
                      switch (modifier) {
                        case "min":
                          return value >= expValue;
                        case "max":
                          return value <= expValue;
                        default:
                          return value === expValue;
                      }
                    });
                    return expressionsMatch && !inverse || !expressionsMatch && inverse;
                  });
                }
                function parseQuery(mediaQuery) {
                  return mediaQuery.split(",").map(function(query) {
                    query = query.trim();
                    var captures = query.match(RE_MEDIA_QUERY), modifier = captures[1], type = captures[2], expressions = captures[3] || "", parsed = {};
                    parsed.inverse = !!modifier && modifier.toLowerCase() === "not";
                    parsed.type = type ? type.toLowerCase() : "all";
                    expressions = expressions.match(/\([^\)]+\)/g) || [];
                    parsed.expressions = expressions.map(function(expression) {
                      var captures2 = expression.match(RE_MQ_EXPRESSION), feature = captures2[1].toLowerCase().match(RE_MQ_FEATURE);
                      return {
                        modifier: feature[1],
                        feature: feature[2],
                        value: captures2[2]
                      };
                    });
                    return parsed;
                  });
                }
                function toDecimal(ratio) {
                  var decimal = Number(ratio), numbers;
                  if (!decimal) {
                    numbers = ratio.match(/^(\d+)\s*\/\s*(\d+)$/);
                    decimal = numbers[1] / numbers[2];
                  }
                  return decimal;
                }
                function toDpi(resolution) {
                  var value = parseFloat(resolution), units = String(resolution).match(RE_RESOLUTION_UNIT)[1];
                  switch (units) {
                    case "dpcm":
                      return value / 2.54;
                    case "dppx":
                      return value * 96;
                    default:
                      return value;
                  }
                }
                function toPx(length) {
                  var value = parseFloat(length), units = String(length).match(RE_LENGTH_UNIT)[1];
                  switch (units) {
                    case "em":
                      return value * 16;
                    case "rem":
                      return value * 16;
                    case "cm":
                      return value * 96 / 2.54;
                    case "mm":
                      return value * 96 / 2.54 / 10;
                    case "in":
                      return value * 96;
                    case "pt":
                      return value * 72;
                    case "pc":
                      return value * 72 / 12;
                    default:
                      return value;
                  }
                }
              }
            ),
            /***/
            "./node_modules/hyphenate-style-name/index.js": (
              /*!****************************************************!*\
                !*** ./node_modules/hyphenate-style-name/index.js ***!
                \****************************************************/
              /***/
              (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
                "use strict";
                __webpack_require__2.r(__webpack_exports__2);
                __webpack_require__2.d(__webpack_exports__2, {
                  /* harmony export */
                  "default": () => __WEBPACK_DEFAULT_EXPORT__
                  /* harmony export */
                });
                var uppercasePattern = /[A-Z]/g;
                var msPattern = /^ms-/;
                var cache = {};
                function toHyphenLower(match) {
                  return "-" + match.toLowerCase();
                }
                function hyphenateStyleName(name) {
                  if (cache.hasOwnProperty(name)) {
                    return cache[name];
                  }
                  var hName = name.replace(uppercasePattern, toHyphenLower);
                  return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
                }
                const __WEBPACK_DEFAULT_EXPORT__ = hyphenateStyleName;
              }
            ),
            /***/
            "./node_modules/matchmediaquery/index.js": (
              /*!***********************************************!*\
                !*** ./node_modules/matchmediaquery/index.js ***!
                \***********************************************/
              /***/
              (module2, __unused_webpack_exports, __webpack_require__2) => {
                "use strict";
                var staticMatch = __webpack_require__2(
                  /*! css-mediaquery */
                  "./node_modules/css-mediaquery/index.js"
                ).match;
                var dynamicMatch = typeof window !== "undefined" ? window.matchMedia : null;
                function Mql(query, values, forceStatic) {
                  var self = this;
                  if (dynamicMatch && !forceStatic) {
                    var mql = dynamicMatch.call(window, query);
                    this.matches = mql.matches;
                    this.media = mql.media;
                    mql.addListener(update);
                  } else {
                    this.matches = staticMatch(query, values);
                    this.media = query;
                  }
                  this.addListener = addListener;
                  this.removeListener = removeListener;
                  this.dispose = dispose;
                  function addListener(listener3) {
                    if (mql) {
                      mql.addListener(listener3);
                    }
                  }
                  function removeListener(listener3) {
                    if (mql) {
                      mql.removeListener(listener3);
                    }
                  }
                  function update(evt) {
                    self.matches = evt.matches;
                    self.media = evt.media;
                  }
                  function dispose() {
                    if (mql) {
                      mql.removeListener(update);
                    }
                  }
                }
                function matchMedia(query, values, forceStatic) {
                  return new Mql(query, values, forceStatic);
                }
                module2.exports = matchMedia;
              }
            ),
            /***/
            "./node_modules/object-assign/index.js": (
              /*!*********************************************!*\
                !*** ./node_modules/object-assign/index.js ***!
                \*********************************************/
              /***/
              (module2) => {
                "use strict";
                var getOwnPropertySymbols = Object.getOwnPropertySymbols;
                var hasOwnProperty = Object.prototype.hasOwnProperty;
                var propIsEnumerable = Object.prototype.propertyIsEnumerable;
                function toObject(val) {
                  if (val === null || val === void 0) {
                    throw new TypeError("Object.assign cannot be called with null or undefined");
                  }
                  return Object(val);
                }
                function shouldUseNative() {
                  try {
                    if (!Object.assign) {
                      return false;
                    }
                    var test1 = new String("abc");
                    test1[5] = "de";
                    if (Object.getOwnPropertyNames(test1)[0] === "5") {
                      return false;
                    }
                    var test2 = {};
                    for (var i = 0; i < 10; i++) {
                      test2["_" + String.fromCharCode(i)] = i;
                    }
                    var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
                      return test2[n];
                    });
                    if (order2.join("") !== "0123456789") {
                      return false;
                    }
                    var test3 = {};
                    "abcdefghijklmnopqrst".split("").forEach(function(letter) {
                      test3[letter] = letter;
                    });
                    if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
                      return false;
                    }
                    return true;
                  } catch (err) {
                    return false;
                  }
                }
                module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
                  var from;
                  var to = toObject(target);
                  var symbols;
                  for (var s = 1; s < arguments.length; s++) {
                    from = Object(arguments[s]);
                    for (var key in from) {
                      if (hasOwnProperty.call(from, key)) {
                        to[key] = from[key];
                      }
                    }
                    if (getOwnPropertySymbols) {
                      symbols = getOwnPropertySymbols(from);
                      for (var i = 0; i < symbols.length; i++) {
                        if (propIsEnumerable.call(from, symbols[i])) {
                          to[symbols[i]] = from[symbols[i]];
                        }
                      }
                    }
                  }
                  return to;
                };
              }
            ),
            /***/
            "./node_modules/prop-types/checkPropTypes.js": (
              /*!***************************************************!*\
                !*** ./node_modules/prop-types/checkPropTypes.js ***!
                \***************************************************/
              /***/
              (module2, __unused_webpack_exports, __webpack_require__2) => {
                "use strict";
                var printWarning = function() {
                };
                if (true) {
                  var ReactPropTypesSecret = __webpack_require__2(
                    /*! ./lib/ReactPropTypesSecret */
                    "./node_modules/prop-types/lib/ReactPropTypesSecret.js"
                  );
                  var loggedTypeFailures = {};
                  var has = __webpack_require__2(
                    /*! ./lib/has */
                    "./node_modules/prop-types/lib/has.js"
                  );
                  printWarning = function(text2) {
                    var message = "Warning: " + text2;
                    if (typeof console !== "undefined") {
                      console.error(message);
                    }
                    try {
                      throw new Error(message);
                    } catch (x) {
                    }
                  };
                }
                function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
                  if (true) {
                    for (var typeSpecName in typeSpecs) {
                      if (has(typeSpecs, typeSpecName)) {
                        var error;
                        try {
                          if (typeof typeSpecs[typeSpecName] !== "function") {
                            var err = Error(
                              (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                            );
                            err.name = "Invariant Violation";
                            throw err;
                          }
                          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
                        } catch (ex) {
                          error = ex;
                        }
                        if (error && !(error instanceof Error)) {
                          printWarning(
                            (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
                          );
                        }
                        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                          loggedTypeFailures[error.message] = true;
                          var stack = getStack ? getStack() : "";
                          printWarning(
                            "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
                          );
                        }
                      }
                    }
                  }
                }
                checkPropTypes.resetWarningCache = function() {
                  if (true) {
                    loggedTypeFailures = {};
                  }
                };
                module2.exports = checkPropTypes;
              }
            ),
            /***/
            "./node_modules/prop-types/factoryWithTypeCheckers.js": (
              /*!************************************************************!*\
                !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
                \************************************************************/
              /***/
              (module2, __unused_webpack_exports, __webpack_require__2) => {
                "use strict";
                var ReactIs = __webpack_require__2(
                  /*! react-is */
                  "./node_modules/react-is/index.js"
                );
                var assign = __webpack_require__2(
                  /*! object-assign */
                  "./node_modules/object-assign/index.js"
                );
                var ReactPropTypesSecret = __webpack_require__2(
                  /*! ./lib/ReactPropTypesSecret */
                  "./node_modules/prop-types/lib/ReactPropTypesSecret.js"
                );
                var has = __webpack_require__2(
                  /*! ./lib/has */
                  "./node_modules/prop-types/lib/has.js"
                );
                var checkPropTypes = __webpack_require__2(
                  /*! ./checkPropTypes */
                  "./node_modules/prop-types/checkPropTypes.js"
                );
                var printWarning = function() {
                };
                if (true) {
                  printWarning = function(text2) {
                    var message = "Warning: " + text2;
                    if (typeof console !== "undefined") {
                      console.error(message);
                    }
                    try {
                      throw new Error(message);
                    } catch (x) {
                    }
                  };
                }
                function emptyFunctionThatReturnsNull() {
                  return null;
                }
                module2.exports = function(isValidElement, throwOnDirectAccess) {
                  var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
                  var FAUX_ITERATOR_SYMBOL = "@@iterator";
                  function getIteratorFn(maybeIterable) {
                    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
                    if (typeof iteratorFn === "function") {
                      return iteratorFn;
                    }
                  }
                  var ANONYMOUS = "<<anonymous>>";
                  var ReactPropTypes = {
                    array: createPrimitiveTypeChecker("array"),
                    bigint: createPrimitiveTypeChecker("bigint"),
                    bool: createPrimitiveTypeChecker("boolean"),
                    func: createPrimitiveTypeChecker("function"),
                    number: createPrimitiveTypeChecker("number"),
                    object: createPrimitiveTypeChecker("object"),
                    string: createPrimitiveTypeChecker("string"),
                    symbol: createPrimitiveTypeChecker("symbol"),
                    any: createAnyTypeChecker(),
                    arrayOf: createArrayOfTypeChecker,
                    element: createElementTypeChecker(),
                    elementType: createElementTypeTypeChecker(),
                    instanceOf: createInstanceTypeChecker,
                    node: createNodeChecker(),
                    objectOf: createObjectOfTypeChecker,
                    oneOf: createEnumTypeChecker,
                    oneOfType: createUnionTypeChecker,
                    shape: createShapeTypeChecker,
                    exact: createStrictShapeTypeChecker
                  };
                  function is(x, y) {
                    if (x === y) {
                      return x !== 0 || 1 / x === 1 / y;
                    } else {
                      return x !== x && y !== y;
                    }
                  }
                  function PropTypeError(message, data) {
                    this.message = message;
                    this.data = data && typeof data === "object" ? data : {};
                    this.stack = "";
                  }
                  PropTypeError.prototype = Error.prototype;
                  function createChainableTypeChecker(validate) {
                    if (true) {
                      var manualPropTypeCallCache = {};
                      var manualPropTypeWarningCount = 0;
                    }
                    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
                      componentName = componentName || ANONYMOUS;
                      propFullName = propFullName || propName;
                      if (secret !== ReactPropTypesSecret) {
                        if (throwOnDirectAccess) {
                          var err = new Error(
                            "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
                          );
                          err.name = "Invariant Violation";
                          throw err;
                        } else if (typeof console !== "undefined") {
                          var cacheKey = componentName + ":" + propName;
                          if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                          manualPropTypeWarningCount < 3) {
                            printWarning(
                              "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                            );
                            manualPropTypeCallCache[cacheKey] = true;
                            manualPropTypeWarningCount++;
                          }
                        }
                      }
                      if (props[propName] == null) {
                        if (isRequired) {
                          if (props[propName] === null) {
                            return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
                          }
                          return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
                        }
                        return null;
                      } else {
                        return validate(props, propName, componentName, location, propFullName);
                      }
                    }
                    var chainedCheckType = checkType.bind(null, false);
                    chainedCheckType.isRequired = checkType.bind(null, true);
                    return chainedCheckType;
                  }
                  function createPrimitiveTypeChecker(expectedType) {
                    function validate(props, propName, componentName, location, propFullName, secret) {
                      var propValue = props[propName];
                      var propType = getPropType(propValue);
                      if (propType !== expectedType) {
                        var preciseType = getPreciseType(propValue);
                        return new PropTypeError(
                          "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
                          { expectedType }
                        );
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createAnyTypeChecker() {
                    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
                  }
                  function createArrayOfTypeChecker(typeChecker) {
                    function validate(props, propName, componentName, location, propFullName) {
                      if (typeof typeChecker !== "function") {
                        return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
                      }
                      var propValue = props[propName];
                      if (!Array.isArray(propValue)) {
                        var propType = getPropType(propValue);
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
                      }
                      for (var i = 0; i < propValue.length; i++) {
                        var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
                        if (error instanceof Error) {
                          return error;
                        }
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createElementTypeChecker() {
                    function validate(props, propName, componentName, location, propFullName) {
                      var propValue = props[propName];
                      if (!isValidElement(propValue)) {
                        var propType = getPropType(propValue);
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createElementTypeTypeChecker() {
                    function validate(props, propName, componentName, location, propFullName) {
                      var propValue = props[propName];
                      if (!ReactIs.isValidElementType(propValue)) {
                        var propType = getPropType(propValue);
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createInstanceTypeChecker(expectedClass) {
                    function validate(props, propName, componentName, location, propFullName) {
                      if (!(props[propName] instanceof expectedClass)) {
                        var expectedClassName = expectedClass.name || ANONYMOUS;
                        var actualClassName = getClassName(props[propName]);
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createEnumTypeChecker(expectedValues) {
                    if (!Array.isArray(expectedValues)) {
                      if (true) {
                        if (arguments.length > 1) {
                          printWarning(
                            "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
                          );
                        } else {
                          printWarning("Invalid argument supplied to oneOf, expected an array.");
                        }
                      }
                      return emptyFunctionThatReturnsNull;
                    }
                    function validate(props, propName, componentName, location, propFullName) {
                      var propValue = props[propName];
                      for (var i = 0; i < expectedValues.length; i++) {
                        if (is(propValue, expectedValues[i])) {
                          return null;
                        }
                      }
                      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                        var type = getPreciseType(value);
                        if (type === "symbol") {
                          return String(value);
                        }
                        return value;
                      });
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createObjectOfTypeChecker(typeChecker) {
                    function validate(props, propName, componentName, location, propFullName) {
                      if (typeof typeChecker !== "function") {
                        return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
                      }
                      var propValue = props[propName];
                      var propType = getPropType(propValue);
                      if (propType !== "object") {
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
                      }
                      for (var key in propValue) {
                        if (has(propValue, key)) {
                          var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                          if (error instanceof Error) {
                            return error;
                          }
                        }
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createUnionTypeChecker(arrayOfTypeCheckers) {
                    if (!Array.isArray(arrayOfTypeCheckers)) {
                      true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : 0;
                      return emptyFunctionThatReturnsNull;
                    }
                    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                      var checker = arrayOfTypeCheckers[i];
                      if (typeof checker !== "function") {
                        printWarning(
                          "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
                        );
                        return emptyFunctionThatReturnsNull;
                      }
                    }
                    function validate(props, propName, componentName, location, propFullName) {
                      var expectedTypes = [];
                      for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
                        var checker2 = arrayOfTypeCheckers[i2];
                        var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                        if (checkerResult == null) {
                          return null;
                        }
                        if (checkerResult.data && has(checkerResult.data, "expectedType")) {
                          expectedTypes.push(checkerResult.data.expectedType);
                        }
                      }
                      var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createNodeChecker() {
                    function validate(props, propName, componentName, location, propFullName) {
                      if (!isNode(props[propName])) {
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function invalidValidatorError(componentName, location, propFullName, key, type) {
                    return new PropTypeError(
                      (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
                    );
                  }
                  function createShapeTypeChecker(shapeTypes) {
                    function validate(props, propName, componentName, location, propFullName) {
                      var propValue = props[propName];
                      var propType = getPropType(propValue);
                      if (propType !== "object") {
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
                      }
                      for (var key in shapeTypes) {
                        var checker = shapeTypes[key];
                        if (typeof checker !== "function") {
                          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                        }
                        var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                        if (error) {
                          return error;
                        }
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function createStrictShapeTypeChecker(shapeTypes) {
                    function validate(props, propName, componentName, location, propFullName) {
                      var propValue = props[propName];
                      var propType = getPropType(propValue);
                      if (propType !== "object") {
                        return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
                      }
                      var allKeys = assign({}, props[propName], shapeTypes);
                      for (var key in allKeys) {
                        var checker = shapeTypes[key];
                        if (has(shapeTypes, key) && typeof checker !== "function") {
                          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                        }
                        if (!checker) {
                          return new PropTypeError(
                            "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
                          );
                        }
                        var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                        if (error) {
                          return error;
                        }
                      }
                      return null;
                    }
                    return createChainableTypeChecker(validate);
                  }
                  function isNode(propValue) {
                    switch (typeof propValue) {
                      case "number":
                      case "string":
                      case "undefined":
                        return true;
                      case "boolean":
                        return !propValue;
                      case "object":
                        if (Array.isArray(propValue)) {
                          return propValue.every(isNode);
                        }
                        if (propValue === null || isValidElement(propValue)) {
                          return true;
                        }
                        var iteratorFn = getIteratorFn(propValue);
                        if (iteratorFn) {
                          var iterator = iteratorFn.call(propValue);
                          var step;
                          if (iteratorFn !== propValue.entries) {
                            while (!(step = iterator.next()).done) {
                              if (!isNode(step.value)) {
                                return false;
                              }
                            }
                          } else {
                            while (!(step = iterator.next()).done) {
                              var entry = step.value;
                              if (entry) {
                                if (!isNode(entry[1])) {
                                  return false;
                                }
                              }
                            }
                          }
                        } else {
                          return false;
                        }
                        return true;
                      default:
                        return false;
                    }
                  }
                  function isSymbol(propType, propValue) {
                    if (propType === "symbol") {
                      return true;
                    }
                    if (!propValue) {
                      return false;
                    }
                    if (propValue["@@toStringTag"] === "Symbol") {
                      return true;
                    }
                    if (typeof Symbol === "function" && propValue instanceof Symbol) {
                      return true;
                    }
                    return false;
                  }
                  function getPropType(propValue) {
                    var propType = typeof propValue;
                    if (Array.isArray(propValue)) {
                      return "array";
                    }
                    if (propValue instanceof RegExp) {
                      return "object";
                    }
                    if (isSymbol(propType, propValue)) {
                      return "symbol";
                    }
                    return propType;
                  }
                  function getPreciseType(propValue) {
                    if (typeof propValue === "undefined" || propValue === null) {
                      return "" + propValue;
                    }
                    var propType = getPropType(propValue);
                    if (propType === "object") {
                      if (propValue instanceof Date) {
                        return "date";
                      } else if (propValue instanceof RegExp) {
                        return "regexp";
                      }
                    }
                    return propType;
                  }
                  function getPostfixForTypeWarning(value) {
                    var type = getPreciseType(value);
                    switch (type) {
                      case "array":
                      case "object":
                        return "an " + type;
                      case "boolean":
                      case "date":
                      case "regexp":
                        return "a " + type;
                      default:
                        return type;
                    }
                  }
                  function getClassName(propValue) {
                    if (!propValue.constructor || !propValue.constructor.name) {
                      return ANONYMOUS;
                    }
                    return propValue.constructor.name;
                  }
                  ReactPropTypes.checkPropTypes = checkPropTypes;
                  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
                  ReactPropTypes.PropTypes = ReactPropTypes;
                  return ReactPropTypes;
                };
              }
            ),
            /***/
            "./node_modules/prop-types/index.js": (
              /*!******************************************!*\
                !*** ./node_modules/prop-types/index.js ***!
                \******************************************/
              /***/
              (module2, __unused_webpack_exports, __webpack_require__2) => {
                if (true) {
                  var ReactIs = __webpack_require__2(
                    /*! react-is */
                    "./node_modules/react-is/index.js"
                  );
                  var throwOnDirectAccess = true;
                  module2.exports = __webpack_require__2(
                    /*! ./factoryWithTypeCheckers */
                    "./node_modules/prop-types/factoryWithTypeCheckers.js"
                  )(ReactIs.isElement, throwOnDirectAccess);
                } else {
                }
              }
            ),
            /***/
            "./node_modules/prop-types/lib/ReactPropTypesSecret.js": (
              /*!*************************************************************!*\
                !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
                \*************************************************************/
              /***/
              (module2) => {
                "use strict";
                var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
                module2.exports = ReactPropTypesSecret;
              }
            ),
            /***/
            "./node_modules/prop-types/lib/has.js": (
              /*!********************************************!*\
                !*** ./node_modules/prop-types/lib/has.js ***!
                \********************************************/
              /***/
              (module2) => {
                module2.exports = Function.call.bind(Object.prototype.hasOwnProperty);
              }
            ),
            /***/
            "./node_modules/react-is/cjs/react-is.development.js": (
              /*!***********************************************************!*\
                !*** ./node_modules/react-is/cjs/react-is.development.js ***!
                \***********************************************************/
              /***/
              (__unused_webpack_module, exports2) => {
                "use strict";
                if (true) {
                  (function() {
                    "use strict";
                    var hasSymbol = typeof Symbol === "function" && Symbol.for;
                    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
                    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
                    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
                    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
                    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
                    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
                    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
                    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
                    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
                    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
                    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
                    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
                    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
                    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
                    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
                    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
                    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
                    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
                    function isValidElementType(type) {
                      return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
                      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
                    }
                    function typeOf(object) {
                      if (typeof object === "object" && object !== null) {
                        var $$typeof = object.$$typeof;
                        switch ($$typeof) {
                          case REACT_ELEMENT_TYPE:
                            var type = object.type;
                            switch (type) {
                              case REACT_ASYNC_MODE_TYPE:
                              case REACT_CONCURRENT_MODE_TYPE:
                              case REACT_FRAGMENT_TYPE:
                              case REACT_PROFILER_TYPE:
                              case REACT_STRICT_MODE_TYPE:
                              case REACT_SUSPENSE_TYPE:
                                return type;
                              default:
                                var $$typeofType = type && type.$$typeof;
                                switch ($$typeofType) {
                                  case REACT_CONTEXT_TYPE:
                                  case REACT_FORWARD_REF_TYPE:
                                  case REACT_LAZY_TYPE:
                                  case REACT_MEMO_TYPE:
                                  case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                  default:
                                    return $$typeof;
                                }
                            }
                          case REACT_PORTAL_TYPE:
                            return $$typeof;
                        }
                      }
                      return void 0;
                    }
                    var AsyncMode = REACT_ASYNC_MODE_TYPE;
                    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
                    var ContextConsumer = REACT_CONTEXT_TYPE;
                    var ContextProvider = REACT_PROVIDER_TYPE;
                    var Element = REACT_ELEMENT_TYPE;
                    var ForwardRef = REACT_FORWARD_REF_TYPE;
                    var Fragment = REACT_FRAGMENT_TYPE;
                    var Lazy = REACT_LAZY_TYPE;
                    var Memo = REACT_MEMO_TYPE;
                    var Portal = REACT_PORTAL_TYPE;
                    var Profiler = REACT_PROFILER_TYPE;
                    var StrictMode = REACT_STRICT_MODE_TYPE;
                    var Suspense = REACT_SUSPENSE_TYPE;
                    var hasWarnedAboutDeprecatedIsAsyncMode = false;
                    function isAsyncMode(object) {
                      {
                        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                          hasWarnedAboutDeprecatedIsAsyncMode = true;
                          console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
                        }
                      }
                      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
                    }
                    function isConcurrentMode(object) {
                      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
                    }
                    function isContextConsumer(object) {
                      return typeOf(object) === REACT_CONTEXT_TYPE;
                    }
                    function isContextProvider(object) {
                      return typeOf(object) === REACT_PROVIDER_TYPE;
                    }
                    function isElement(object) {
                      return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
                    }
                    function isForwardRef(object) {
                      return typeOf(object) === REACT_FORWARD_REF_TYPE;
                    }
                    function isFragment(object) {
                      return typeOf(object) === REACT_FRAGMENT_TYPE;
                    }
                    function isLazy(object) {
                      return typeOf(object) === REACT_LAZY_TYPE;
                    }
                    function isMemo(object) {
                      return typeOf(object) === REACT_MEMO_TYPE;
                    }
                    function isPortal(object) {
                      return typeOf(object) === REACT_PORTAL_TYPE;
                    }
                    function isProfiler(object) {
                      return typeOf(object) === REACT_PROFILER_TYPE;
                    }
                    function isStrictMode(object) {
                      return typeOf(object) === REACT_STRICT_MODE_TYPE;
                    }
                    function isSuspense(object) {
                      return typeOf(object) === REACT_SUSPENSE_TYPE;
                    }
                    exports2.AsyncMode = AsyncMode;
                    exports2.ConcurrentMode = ConcurrentMode;
                    exports2.ContextConsumer = ContextConsumer;
                    exports2.ContextProvider = ContextProvider;
                    exports2.Element = Element;
                    exports2.ForwardRef = ForwardRef;
                    exports2.Fragment = Fragment;
                    exports2.Lazy = Lazy;
                    exports2.Memo = Memo;
                    exports2.Portal = Portal;
                    exports2.Profiler = Profiler;
                    exports2.StrictMode = StrictMode;
                    exports2.Suspense = Suspense;
                    exports2.isAsyncMode = isAsyncMode;
                    exports2.isConcurrentMode = isConcurrentMode;
                    exports2.isContextConsumer = isContextConsumer;
                    exports2.isContextProvider = isContextProvider;
                    exports2.isElement = isElement;
                    exports2.isForwardRef = isForwardRef;
                    exports2.isFragment = isFragment;
                    exports2.isLazy = isLazy;
                    exports2.isMemo = isMemo;
                    exports2.isPortal = isPortal;
                    exports2.isProfiler = isProfiler;
                    exports2.isStrictMode = isStrictMode;
                    exports2.isSuspense = isSuspense;
                    exports2.isValidElementType = isValidElementType;
                    exports2.typeOf = typeOf;
                  })();
                }
              }
            ),
            /***/
            "./node_modules/react-is/index.js": (
              /*!****************************************!*\
                !*** ./node_modules/react-is/index.js ***!
                \****************************************/
              /***/
              (module2, __unused_webpack_exports, __webpack_require__2) => {
                "use strict";
                if (false) {
                } else {
                  module2.exports = __webpack_require__2(
                    /*! ./cjs/react-is.development.js */
                    "./node_modules/react-is/cjs/react-is.development.js"
                  );
                }
              }
            ),
            /***/
            "./node_modules/shallow-equal/dist/index.esm.js": (
              /*!******************************************************!*\
                !*** ./node_modules/shallow-equal/dist/index.esm.js ***!
                \******************************************************/
              /***/
              (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
                "use strict";
                __webpack_require__2.r(__webpack_exports__2);
                __webpack_require__2.d(__webpack_exports__2, {
                  /* harmony export */
                  "shallowEqualArrays": () => (
                    /* binding */
                    shallowEqualArrays
                  ),
                  /* harmony export */
                  "shallowEqualObjects": () => (
                    /* binding */
                    shallowEqualObjects
                  )
                  /* harmony export */
                });
                function shallowEqualObjects(objA, objB) {
                  if (objA === objB) {
                    return true;
                  }
                  if (!objA || !objB) {
                    return false;
                  }
                  var aKeys = Object.keys(objA);
                  var bKeys = Object.keys(objB);
                  var len = aKeys.length;
                  if (bKeys.length !== len) {
                    return false;
                  }
                  for (var i = 0; i < len; i++) {
                    var key = aKeys[i];
                    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {
                      return false;
                    }
                  }
                  return true;
                }
                function shallowEqualArrays(arrA, arrB) {
                  if (arrA === arrB) {
                    return true;
                  }
                  if (!arrA || !arrB) {
                    return false;
                  }
                  var len = arrA.length;
                  if (arrB.length !== len) {
                    return false;
                  }
                  for (var i = 0; i < len; i++) {
                    if (arrA[i] !== arrB[i]) {
                      return false;
                    }
                  }
                  return true;
                }
              }
            ),
            /***/
            "./src/Component.ts": (
              /*!**************************!*\
                !*** ./src/Component.ts ***!
                \**************************/
              /***/
              function(__unused_webpack_module, exports2, __webpack_require__2) {
                "use strict";
                var __rest = this && this.__rest || function(s, e) {
                  var t = {};
                  for (var p2 in s)
                    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
                      t[p2] = s[p2];
                  if (s != null && typeof Object.getOwnPropertySymbols === "function")
                    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
                      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
                        t[p2[i]] = s[p2[i]];
                    }
                  return t;
                };
                var __importDefault = this && this.__importDefault || function(mod) {
                  return mod && mod.__esModule ? mod : { "default": mod };
                };
                Object.defineProperty(exports2, "__esModule", { value: true });
                var useMediaQuery_1 = __importDefault(__webpack_require__2(
                  /*! ./useMediaQuery */
                  "./src/useMediaQuery.ts"
                ));
                var MediaQuery = function(_a) {
                  var children = _a.children, device = _a.device, onChange2 = _a.onChange, settings = __rest(_a, ["children", "device", "onChange"]);
                  var matches = (0, useMediaQuery_1.default)(settings, device, onChange2);
                  if (typeof children === "function") {
                    return children(matches);
                  }
                  return matches ? children : null;
                };
                exports2["default"] = MediaQuery;
              }
            ),
            /***/
            "./src/Context.ts": (
              /*!************************!*\
                !*** ./src/Context.ts ***!
                \************************/
              /***/
              (__unused_webpack_module, exports2, __webpack_require__2) => {
                "use strict";
                Object.defineProperty(exports2, "__esModule", { value: true });
                var react_1 = __webpack_require__2(
                  /*! react */
                  "react"
                );
                var Context = (0, react_1.createContext)(void 0);
                exports2["default"] = Context;
              }
            ),
            /***/
            "./src/index.ts": (
              /*!**********************!*\
                !*** ./src/index.ts ***!
                \**********************/
              /***/
              function(__unused_webpack_module, exports2, __webpack_require__2) {
                "use strict";
                var __importDefault = this && this.__importDefault || function(mod) {
                  return mod && mod.__esModule ? mod : { "default": mod };
                };
                Object.defineProperty(exports2, "__esModule", { value: true });
                exports2.Context = exports2.toQuery = exports2.useMediaQuery = exports2["default"] = void 0;
                var useMediaQuery_1 = __importDefault(__webpack_require__2(
                  /*! ./useMediaQuery */
                  "./src/useMediaQuery.ts"
                ));
                exports2.useMediaQuery = useMediaQuery_1.default;
                var Component_1 = __importDefault(__webpack_require__2(
                  /*! ./Component */
                  "./src/Component.ts"
                ));
                exports2["default"] = Component_1.default;
                var toQuery_1 = __importDefault(__webpack_require__2(
                  /*! ./toQuery */
                  "./src/toQuery.ts"
                ));
                exports2.toQuery = toQuery_1.default;
                var Context_1 = __importDefault(__webpack_require__2(
                  /*! ./Context */
                  "./src/Context.ts"
                ));
                exports2.Context = Context_1.default;
              }
            ),
            /***/
            "./src/mediaQuery.ts": (
              /*!***************************!*\
                !*** ./src/mediaQuery.ts ***!
                \***************************/
              /***/
              function(__unused_webpack_module, exports2, __webpack_require__2) {
                "use strict";
                var __assign = this && this.__assign || function() {
                  __assign = Object.assign || function(t) {
                    for (var s, i = 1, n = arguments.length; i < n; i++) {
                      s = arguments[i];
                      for (var p2 in s)
                        if (Object.prototype.hasOwnProperty.call(s, p2))
                          t[p2] = s[p2];
                    }
                    return t;
                  };
                  return __assign.apply(this, arguments);
                };
                var __rest = this && this.__rest || function(s, e) {
                  var t = {};
                  for (var p2 in s)
                    if (Object.prototype.hasOwnProperty.call(s, p2) && e.indexOf(p2) < 0)
                      t[p2] = s[p2];
                  if (s != null && typeof Object.getOwnPropertySymbols === "function")
                    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {
                      if (e.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))
                        t[p2[i]] = s[p2[i]];
                    }
                  return t;
                };
                var __importDefault = this && this.__importDefault || function(mod) {
                  return mod && mod.__esModule ? mod : { "default": mod };
                };
                Object.defineProperty(exports2, "__esModule", { value: true });
                var prop_types_1 = __importDefault(__webpack_require__2(
                  /*! prop-types */
                  "./node_modules/prop-types/index.js"
                ));
                var stringOrNumber = prop_types_1.default.oneOfType([
                  prop_types_1.default.string,
                  prop_types_1.default.number
                ]);
                var types = {
                  all: prop_types_1.default.bool,
                  grid: prop_types_1.default.bool,
                  aural: prop_types_1.default.bool,
                  braille: prop_types_1.default.bool,
                  handheld: prop_types_1.default.bool,
                  print: prop_types_1.default.bool,
                  projection: prop_types_1.default.bool,
                  screen: prop_types_1.default.bool,
                  tty: prop_types_1.default.bool,
                  tv: prop_types_1.default.bool,
                  embossed: prop_types_1.default.bool
                };
                var matchers = {
                  orientation: prop_types_1.default.oneOf([
                    "portrait",
                    "landscape"
                  ]),
                  scan: prop_types_1.default.oneOf([
                    "progressive",
                    "interlace"
                  ]),
                  aspectRatio: prop_types_1.default.string,
                  deviceAspectRatio: prop_types_1.default.string,
                  height: stringOrNumber,
                  deviceHeight: stringOrNumber,
                  width: stringOrNumber,
                  deviceWidth: stringOrNumber,
                  color: prop_types_1.default.bool,
                  colorIndex: prop_types_1.default.bool,
                  monochrome: prop_types_1.default.bool,
                  resolution: stringOrNumber,
                  type: Object.keys(types)
                };
                var type = matchers.type, featureMatchers = __rest(
                  matchers,
                  ["type"]
                );
                var features = __assign({ minAspectRatio: prop_types_1.default.string, maxAspectRatio: prop_types_1.default.string, minDeviceAspectRatio: prop_types_1.default.string, maxDeviceAspectRatio: prop_types_1.default.string, minHeight: stringOrNumber, maxHeight: stringOrNumber, minDeviceHeight: stringOrNumber, maxDeviceHeight: stringOrNumber, minWidth: stringOrNumber, maxWidth: stringOrNumber, minDeviceWidth: stringOrNumber, maxDeviceWidth: stringOrNumber, minColor: prop_types_1.default.number, maxColor: prop_types_1.default.number, minColorIndex: prop_types_1.default.number, maxColorIndex: prop_types_1.default.number, minMonochrome: prop_types_1.default.number, maxMonochrome: prop_types_1.default.number, minResolution: stringOrNumber, maxResolution: stringOrNumber }, featureMatchers);
                var all = __assign(__assign({}, types), features);
                exports2["default"] = {
                  all,
                  types,
                  matchers,
                  features
                };
              }
            ),
            /***/
            "./src/toQuery.ts": (
              /*!************************!*\
                !*** ./src/toQuery.ts ***!
                \************************/
              /***/
              function(__unused_webpack_module, exports2, __webpack_require__2) {
                "use strict";
                var __importDefault = this && this.__importDefault || function(mod) {
                  return mod && mod.__esModule ? mod : { "default": mod };
                };
                Object.defineProperty(exports2, "__esModule", { value: true });
                var hyphenate_style_name_1 = __importDefault(__webpack_require__2(
                  /*! hyphenate-style-name */
                  "./node_modules/hyphenate-style-name/index.js"
                ));
                var mediaQuery_1 = __importDefault(__webpack_require__2(
                  /*! ./mediaQuery */
                  "./src/mediaQuery.ts"
                ));
                var negate = function(cond) {
                  return "not ".concat(cond);
                };
                var keyVal = function(k, v) {
                  var realKey = (0, hyphenate_style_name_1.default)(k);
                  if (typeof v === "number") {
                    v = "".concat(v, "px");
                  }
                  if (v === true) {
                    return realKey;
                  }
                  if (v === false) {
                    return negate(realKey);
                  }
                  return "(".concat(realKey, ": ").concat(v, ")");
                };
                var join = function(conds) {
                  return conds.join(" and ");
                };
                var toQuery = function(obj) {
                  var rules = [];
                  Object.keys(mediaQuery_1.default.all).forEach(function(k) {
                    var v = obj[k];
                    if (v != null) {
                      rules.push(keyVal(k, v));
                    }
                  });
                  return join(rules);
                };
                exports2["default"] = toQuery;
              }
            ),
            /***/
            "./src/useMediaQuery.ts": (
              /*!******************************!*\
                !*** ./src/useMediaQuery.ts ***!
                \******************************/
              /***/
              function(__unused_webpack_module, exports2, __webpack_require__2) {
                "use strict";
                var __importDefault = this && this.__importDefault || function(mod) {
                  return mod && mod.__esModule ? mod : { "default": mod };
                };
                Object.defineProperty(exports2, "__esModule", { value: true });
                var react_1 = __webpack_require__2(
                  /*! react */
                  "react"
                );
                var matchmediaquery_1 = __importDefault(__webpack_require__2(
                  /*! matchmediaquery */
                  "./node_modules/matchmediaquery/index.js"
                ));
                var hyphenate_style_name_1 = __importDefault(__webpack_require__2(
                  /*! hyphenate-style-name */
                  "./node_modules/hyphenate-style-name/index.js"
                ));
                var shallow_equal_1 = __webpack_require__2(
                  /*! shallow-equal */
                  "./node_modules/shallow-equal/dist/index.esm.js"
                );
                var toQuery_1 = __importDefault(__webpack_require__2(
                  /*! ./toQuery */
                  "./src/toQuery.ts"
                ));
                var Context_1 = __importDefault(__webpack_require__2(
                  /*! ./Context */
                  "./src/Context.ts"
                ));
                var makeQuery = function(settings) {
                  return settings.query || (0, toQuery_1.default)(settings);
                };
                var hyphenateKeys = function(obj) {
                  if (!obj)
                    return void 0;
                  var keys = Object.keys(obj);
                  return keys.reduce(function(result, key) {
                    result[(0, hyphenate_style_name_1.default)(key)] = obj[key];
                    return result;
                  }, {});
                };
                var useIsUpdate = function() {
                  var ref = (0, react_1.useRef)(false);
                  (0, react_1.useEffect)(function() {
                    ref.current = true;
                  }, []);
                  return ref.current;
                };
                var useDevice = function(deviceFromProps) {
                  var deviceFromContext = (0, react_1.useContext)(Context_1.default);
                  var getDevice = function() {
                    return hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext);
                  };
                  var _a = (0, react_1.useState)(getDevice), device = _a[0], setDevice = _a[1];
                  (0, react_1.useEffect)(function() {
                    var newDevice = getDevice();
                    if (!(0, shallow_equal_1.shallowEqualObjects)(device, newDevice)) {
                      setDevice(newDevice);
                    }
                  }, [deviceFromProps, deviceFromContext]);
                  return device;
                };
                var useQuery = function(settings) {
                  var getQuery = function() {
                    return makeQuery(settings);
                  };
                  var _a = (0, react_1.useState)(getQuery), query = _a[0], setQuery = _a[1];
                  (0, react_1.useEffect)(function() {
                    var newQuery = getQuery();
                    if (query !== newQuery) {
                      setQuery(newQuery);
                    }
                  }, [settings]);
                  return query;
                };
                var useMatchMedia = function(query, device) {
                  var getMatchMedia = function() {
                    return (0, matchmediaquery_1.default)(query, device || {}, !!device);
                  };
                  var _a = (0, react_1.useState)(getMatchMedia), mq = _a[0], setMq = _a[1];
                  var isUpdate = useIsUpdate();
                  (0, react_1.useEffect)(function() {
                    if (isUpdate) {
                      var newMq_1 = getMatchMedia();
                      setMq(newMq_1);
                      return function() {
                        if (newMq_1) {
                          newMq_1.dispose();
                        }
                      };
                    }
                  }, [query, device]);
                  return mq;
                };
                var useMatches = function(mediaQuery) {
                  var _a = (0, react_1.useState)(mediaQuery.matches), matches = _a[0], setMatches = _a[1];
                  (0, react_1.useEffect)(function() {
                    var updateMatches = function(ev) {
                      setMatches(ev.matches);
                    };
                    mediaQuery.addListener(updateMatches);
                    setMatches(mediaQuery.matches);
                    return function() {
                      mediaQuery.removeListener(updateMatches);
                    };
                  }, [mediaQuery]);
                  return matches;
                };
                var useMediaQuery2 = function(settings, device, onChange2) {
                  var deviceSettings = useDevice(device);
                  var query = useQuery(settings);
                  if (!query)
                    throw new Error("Invalid or missing MediaQuery!");
                  var mq = useMatchMedia(query, deviceSettings);
                  var matches = useMatches(mq);
                  var isUpdate = useIsUpdate();
                  (0, react_1.useEffect)(function() {
                    if (isUpdate && onChange2) {
                      onChange2(matches);
                    }
                  }, [matches]);
                  (0, react_1.useEffect)(function() {
                    return function() {
                      if (mq) {
                        mq.dispose();
                      }
                    };
                  }, []);
                  return matches;
                };
                exports2["default"] = useMediaQuery2;
              }
            ),
            /***/
            "react": (
              /*!**************************************************************************************!*\
                !*** external {"commonjs":"react","commonjs2":"react","amd":"react","root":"React"} ***!
                \**************************************************************************************/
              /***/
              (module2) => {
                "use strict";
                module2.exports = __WEBPACK_EXTERNAL_MODULE_react__;
              }
            )
            /******/
          };
          var __webpack_module_cache__ = {};
          function __webpack_require__(moduleId) {
            var cachedModule = __webpack_module_cache__[moduleId];
            if (cachedModule !== void 0) {
              return cachedModule.exports;
            }
            var module2 = __webpack_module_cache__[moduleId] = {
              /******/
              // no module.id needed
              /******/
              // no module.loaded needed
              /******/
              exports: {}
              /******/
            };
            __webpack_modules__[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
            return module2.exports;
          }
          (() => {
            __webpack_require__.d = (exports2, definition) => {
              for (var key in definition) {
                if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports2, key)) {
                  Object.defineProperty(exports2, key, { enumerable: true, get: definition[key] });
                }
              }
            };
          })();
          (() => {
            __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
          })();
          (() => {
            __webpack_require__.r = (exports2) => {
              if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
              }
              Object.defineProperty(exports2, "__esModule", { value: true });
            };
          })();
          var __webpack_exports__ = __webpack_require__("./src/index.ts");
          return __webpack_exports__;
        })()
      );
    });
  }
});

// node_modules/@fortawesome/free-solid-svg-icons/index.mjs
var faMicrophoneSlash = {
  prefix: "fas",
  iconName: "microphone-slash",
  icon: [640, 512, [], "f131", "M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L472.1 344.7c15.2-26 23.9-56.3 23.9-88.7V216c0-13.3-10.7-24-24-24s-24 10.7-24 24v40c0 21.2-5.1 41.1-14.2 58.7L416 300.8V96c0-53-43-96-96-96s-96 43-96 96v54.3L38.8 5.1zM344 430.4c20.4-2.8 39.7-9.1 57.3-18.2l-43.1-33.9C346.1 382 333.3 384 320 384c-70.7 0-128-57.3-128-128v-8.7L144.7 210c-.5 1.9-.7 3.9-.7 6v40c0 89.1 66.2 162.7 152 174.4V464H248c-13.3 0-24 10.7-24 24s10.7 24 24 24h72 72c13.3 0 24-10.7 24-24s-10.7-24-24-24H344V430.4z"]
};
var faMicrophone = {
  prefix: "fas",
  iconName: "microphone",
  icon: [384, 512, [], "f130", "M192 0C139 0 96 43 96 96V256c0 53 43 96 96 96s96-43 96-96V96c0-53-43-96-96-96zM64 216c0-13.3-10.7-24-24-24s-24 10.7-24 24v40c0 89.1 66.2 162.7 152 174.4V464H120c-13.3 0-24 10.7-24 24s10.7 24 24 24h72 72c13.3 0 24-10.7 24-24s-10.7-24-24-24H216V430.4c85.8-11.7 152-85.3 152-174.4V216c0-13.3-10.7-24-24-24s-24 10.7-24 24v40c0 70.7-57.3 128-128 128s-128-57.3-128-128V216z"]
};
var faStop = {
  prefix: "fas",
  iconName: "stop",
  icon: [384, 512, [9209], "f04d", "M0 128C0 92.7 28.7 64 64 64H320c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128z"]
};
var faChevronDown = {
  prefix: "fas",
  iconName: "chevron-down",
  icon: [512, 512, [], "f078", "M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"]
};
var faVolumeXmark = {
  prefix: "fas",
  iconName: "volume-xmark",
  icon: [576, 512, ["volume-mute", "volume-times"], "f6a9", "M301.1 34.8C312.6 40 320 51.4 320 64V448c0 12.6-7.4 24-18.9 29.2s-25 3.1-34.4-5.3L131.8 352H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h67.8L266.7 40.1c9.4-8.4 22.9-10.4 34.4-5.3zM425 167l55 55 55-55c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-55 55 55 55c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-55-55-55 55c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l55-55-55-55c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z"]
};
var faVolumeMute = faVolumeXmark;
var faVideoSlash = {
  prefix: "fas",
  iconName: "video-slash",
  icon: [640, 512, [], "f4e2", "M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7l-86.4-67.7 13.8 9.2c9.8 6.5 22.4 7.2 32.9 1.6s16.9-16.4 16.9-28.2V128c0-11.8-6.5-22.6-16.9-28.2s-23-5-32.9 1.6l-96 64L448 174.9V192 320v5.8l-32-25.1V128c0-35.3-28.7-64-64-64H113.9L38.8 5.1zM407 416.7L32.3 121.5c-.2 2.1-.3 4.3-.3 6.5V384c0 35.3 28.7 64 64 64H352c23.4 0 43.9-12.6 55-31.3z"]
};
var faDesktop = {
  prefix: "fas",
  iconName: "desktop",
  icon: [576, 512, [128421, 61704, "desktop-alt"], "f390", "M64 0C28.7 0 0 28.7 0 64V352c0 35.3 28.7 64 64 64H240l-10.7 32H160c-17.7 0-32 14.3-32 32s14.3 32 32 32H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H346.7L336 416H512c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H64zM512 64V288H64V64H512z"]
};
var faVideo = {
  prefix: "fas",
  iconName: "video",
  icon: [576, 512, ["video-camera"], "f03d", "M0 128C0 92.7 28.7 64 64 64H320c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128zM559.1 99.8c10.4 5.6 16.9 16.4 16.9 28.2V384c0 11.8-6.5 22.6-16.9 28.2s-23 5-32.9-1.6l-96-64L416 337.1V320 192 174.9l14.2-9.5 96-64c9.8-6.5 22.4-7.2 32.9-1.6z"]
};

// node_modules/@livekit/react-components/dist/index.modern.js
var import_react3 = __toESM(require_react());

// node_modules/@fortawesome/fontawesome-svg-core/index.mjs
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function _wrapRegExp() {
  _wrapRegExp = function(re, groups) {
    return new BabelRegExp(re, void 0, groups);
  };
  var _super = RegExp.prototype, _groups = /* @__PURE__ */ new WeakMap();
  function BabelRegExp(re, flags, groups) {
    var _this = new RegExp(re, flags);
    return _groups.set(_this, groups || _groups.get(re)), _setPrototypeOf(_this, BabelRegExp.prototype);
  }
  function buildGroups(result, re) {
    var g = _groups.get(re);
    return Object.keys(g).reduce(function(groups, name) {
      return groups[name] = result[g[name]], groups;
    }, /* @__PURE__ */ Object.create(null));
  }
  return _inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function(str) {
    var result = _super.exec.call(this, str);
    return result && (result.groups = buildGroups(result, this)), result;
  }, BabelRegExp.prototype[Symbol.replace] = function(str, substitution) {
    if ("string" == typeof substitution) {
      var groups = _groups.get(this);
      return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function(_, name) {
        return "$" + groups[name];
      }));
    }
    if ("function" == typeof substitution) {
      var _this = this;
      return _super[Symbol.replace].call(this, str, function() {
        var args = arguments;
        return "object" != typeof args[args.length - 1] && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);
      });
    }
    return _super[Symbol.replace].call(this, str, substitution);
  }, _wrapRegExp.apply(this, arguments);
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p2) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf(o, p2);
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var noop = function noop2() {
};
var _WINDOW = {};
var _DOCUMENT = {};
var _MUTATION_OBSERVER = null;
var _PERFORMANCE = {
  mark: noop,
  measure: noop
};
try {
  if (typeof window !== "undefined")
    _WINDOW = window;
  if (typeof document !== "undefined")
    _DOCUMENT = document;
  if (typeof MutationObserver !== "undefined")
    _MUTATION_OBSERVER = MutationObserver;
  if (typeof performance !== "undefined")
    _PERFORMANCE = performance;
} catch (e) {
}
var _ref = _WINDOW.navigator || {};
var _ref$userAgent = _ref.userAgent;
var userAgent = _ref$userAgent === void 0 ? "" : _ref$userAgent;
var WINDOW = _WINDOW;
var DOCUMENT = _DOCUMENT;
var MUTATION_OBSERVER = _MUTATION_OBSERVER;
var PERFORMANCE = _PERFORMANCE;
var IS_BROWSER = !!WINDOW.document;
var IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === "function" && typeof DOCUMENT.createElement === "function";
var IS_IE = ~userAgent.indexOf("MSIE") || ~userAgent.indexOf("Trident/");
var _familyProxy;
var _familyProxy2;
var _familyProxy3;
var _familyProxy4;
var _familyProxy5;
var NAMESPACE_IDENTIFIER = "___FONT_AWESOME___";
var UNITS_IN_GRID = 16;
var DEFAULT_CSS_PREFIX = "fa";
var DEFAULT_REPLACEMENT_CLASS = "svg-inline--fa";
var DATA_FA_I2SVG = "data-fa-i2svg";
var DATA_FA_PSEUDO_ELEMENT = "data-fa-pseudo-element";
var DATA_FA_PSEUDO_ELEMENT_PENDING = "data-fa-pseudo-element-pending";
var DATA_PREFIX = "data-prefix";
var DATA_ICON = "data-icon";
var HTML_CLASS_I2SVG_BASE_CLASS = "fontawesome-i2svg";
var MUTATION_APPROACH_ASYNC = "async";
var TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ["HTML", "HEAD", "STYLE", "SCRIPT"];
var PRODUCTION = function() {
  try {
    return false;
  } catch (e) {
    return false;
  }
}();
var FAMILY_CLASSIC = "classic";
var FAMILY_SHARP = "sharp";
var FAMILIES = [FAMILY_CLASSIC, FAMILY_SHARP];
function familyProxy(obj) {
  return new Proxy(obj, {
    get: function get2(target, prop) {
      return prop in target ? target[prop] : target[FAMILY_CLASSIC];
    }
  });
}
var PREFIX_TO_STYLE = familyProxy((_familyProxy = {}, _defineProperty(_familyProxy, FAMILY_CLASSIC, {
  "fa": "solid",
  "fas": "solid",
  "fa-solid": "solid",
  "far": "regular",
  "fa-regular": "regular",
  "fal": "light",
  "fa-light": "light",
  "fat": "thin",
  "fa-thin": "thin",
  "fad": "duotone",
  "fa-duotone": "duotone",
  "fab": "brands",
  "fa-brands": "brands",
  "fak": "kit",
  "fa-kit": "kit"
}), _defineProperty(_familyProxy, FAMILY_SHARP, {
  "fa": "solid",
  "fass": "solid",
  "fa-solid": "solid",
  "fasr": "regular",
  "fa-regular": "regular",
  "fasl": "light",
  "fa-light": "light"
}), _familyProxy));
var STYLE_TO_PREFIX = familyProxy((_familyProxy2 = {}, _defineProperty(_familyProxy2, FAMILY_CLASSIC, {
  "solid": "fas",
  "regular": "far",
  "light": "fal",
  "thin": "fat",
  "duotone": "fad",
  "brands": "fab",
  "kit": "fak"
}), _defineProperty(_familyProxy2, FAMILY_SHARP, {
  "solid": "fass",
  "regular": "fasr",
  "light": "fasl"
}), _familyProxy2));
var PREFIX_TO_LONG_STYLE = familyProxy((_familyProxy3 = {}, _defineProperty(_familyProxy3, FAMILY_CLASSIC, {
  "fab": "fa-brands",
  "fad": "fa-duotone",
  "fak": "fa-kit",
  "fal": "fa-light",
  "far": "fa-regular",
  "fas": "fa-solid",
  "fat": "fa-thin"
}), _defineProperty(_familyProxy3, FAMILY_SHARP, {
  "fass": "fa-solid",
  "fasr": "fa-regular",
  "fasl": "fa-light"
}), _familyProxy3));
var LONG_STYLE_TO_PREFIX = familyProxy((_familyProxy4 = {}, _defineProperty(_familyProxy4, FAMILY_CLASSIC, {
  "fa-brands": "fab",
  "fa-duotone": "fad",
  "fa-kit": "fak",
  "fa-light": "fal",
  "fa-regular": "far",
  "fa-solid": "fas",
  "fa-thin": "fat"
}), _defineProperty(_familyProxy4, FAMILY_SHARP, {
  "fa-solid": "fass",
  "fa-regular": "fasr",
  "fa-light": "fasl"
}), _familyProxy4));
var ICON_SELECTION_SYNTAX_PATTERN = /fa(s|r|l|t|d|b|k|ss|sr|sl)?[\-\ ]/;
var LAYERS_TEXT_CLASSNAME = "fa-layers-text";
var FONT_FAMILY_PATTERN = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i;
var FONT_WEIGHT_TO_PREFIX = familyProxy((_familyProxy5 = {}, _defineProperty(_familyProxy5, FAMILY_CLASSIC, {
  "900": "fas",
  "400": "far",
  "normal": "far",
  "300": "fal",
  "100": "fat"
}), _defineProperty(_familyProxy5, FAMILY_SHARP, {
  "900": "fass",
  "400": "fasr",
  "300": "fasl"
}), _familyProxy5));
var oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
var ATTRIBUTES_WATCHED_FOR_MUTATION = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"];
var DUOTONE_CLASSES = {
  GROUP: "duotone-group",
  SWAP_OPACITY: "swap-opacity",
  PRIMARY: "primary",
  SECONDARY: "secondary"
};
var prefixes = /* @__PURE__ */ new Set();
Object.keys(STYLE_TO_PREFIX[FAMILY_CLASSIC]).map(prefixes.add.bind(prefixes));
Object.keys(STYLE_TO_PREFIX[FAMILY_SHARP]).map(prefixes.add.bind(prefixes));
var RESERVED_CLASSES = [].concat(FAMILIES, _toConsumableArray(prefixes), ["2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", DUOTONE_CLASSES.GROUP, DUOTONE_CLASSES.SWAP_OPACITY, DUOTONE_CLASSES.PRIMARY, DUOTONE_CLASSES.SECONDARY]).concat(oneToTen.map(function(n) {
  return "".concat(n, "x");
})).concat(oneToTwenty.map(function(n) {
  return "w-".concat(n);
}));
var initial = WINDOW.FontAwesomeConfig || {};
function getAttrConfig(attr) {
  var element = DOCUMENT.querySelector("script[" + attr + "]");
  if (element) {
    return element.getAttribute(attr);
  }
}
function coerce(val) {
  if (val === "")
    return true;
  if (val === "false")
    return false;
  if (val === "true")
    return true;
  return val;
}
if (DOCUMENT && typeof DOCUMENT.querySelector === "function") {
  attrs = [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]];
  attrs.forEach(function(_ref2) {
    var _ref22 = _slicedToArray(_ref2, 2), attr = _ref22[0], key = _ref22[1];
    var val = coerce(getAttrConfig(attr));
    if (val !== void 0 && val !== null) {
      initial[key] = val;
    }
  });
}
var attrs;
var _default = {
  styleDefault: "solid",
  familyDefault: "classic",
  cssPrefix: DEFAULT_CSS_PREFIX,
  replacementClass: DEFAULT_REPLACEMENT_CLASS,
  autoReplaceSvg: true,
  autoAddCss: true,
  autoA11y: true,
  searchPseudoElements: false,
  observeMutations: true,
  mutateApproach: "async",
  keepOriginalSource: true,
  measurePerformance: false,
  showMissingIcons: true
};
if (initial.familyPrefix) {
  initial.cssPrefix = initial.familyPrefix;
}
var _config = _objectSpread2(_objectSpread2({}, _default), initial);
if (!_config.autoReplaceSvg)
  _config.observeMutations = false;
var config = {};
Object.keys(_default).forEach(function(key) {
  Object.defineProperty(config, key, {
    enumerable: true,
    set: function set2(val) {
      _config[key] = val;
      _onChangeCb.forEach(function(cb) {
        return cb(config);
      });
    },
    get: function get2() {
      return _config[key];
    }
  });
});
Object.defineProperty(config, "familyPrefix", {
  enumerable: true,
  set: function set(val) {
    _config.cssPrefix = val;
    _onChangeCb.forEach(function(cb) {
      return cb(config);
    });
  },
  get: function get() {
    return _config.cssPrefix;
  }
});
WINDOW.FontAwesomeConfig = config;
var _onChangeCb = [];
function onChange(cb) {
  _onChangeCb.push(cb);
  return function() {
    _onChangeCb.splice(_onChangeCb.indexOf(cb), 1);
  };
}
var d = UNITS_IN_GRID;
var meaninglessTransform = {
  size: 16,
  x: 0,
  y: 0,
  rotate: 0,
  flipX: false,
  flipY: false
};
function insertCss(css2) {
  if (!css2 || !IS_DOM) {
    return;
  }
  var style = DOCUMENT.createElement("style");
  style.setAttribute("type", "text/css");
  style.innerHTML = css2;
  var headChildren = DOCUMENT.head.childNodes;
  var beforeChild = null;
  for (var i = headChildren.length - 1; i > -1; i--) {
    var child = headChildren[i];
    var tagName = (child.tagName || "").toUpperCase();
    if (["STYLE", "LINK"].indexOf(tagName) > -1) {
      beforeChild = child;
    }
  }
  DOCUMENT.head.insertBefore(style, beforeChild);
  return css2;
}
var idPool = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
function nextUniqueId() {
  var size = 12;
  var id = "";
  while (size-- > 0) {
    id += idPool[Math.random() * 62 | 0];
  }
  return id;
}
function toArray(obj) {
  var array = [];
  for (var i = (obj || []).length >>> 0; i--; ) {
    array[i] = obj[i];
  }
  return array;
}
function classArray(node) {
  if (node.classList) {
    return toArray(node.classList);
  } else {
    return (node.getAttribute("class") || "").split(" ").filter(function(i) {
      return i;
    });
  }
}
function htmlEscape(str) {
  return "".concat(str).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function joinAttributes(attributes) {
  return Object.keys(attributes || {}).reduce(function(acc, attributeName) {
    return acc + "".concat(attributeName, '="').concat(htmlEscape(attributes[attributeName]), '" ');
  }, "").trim();
}
function joinStyles(styles3) {
  return Object.keys(styles3 || {}).reduce(function(acc, styleName) {
    return acc + "".concat(styleName, ": ").concat(styles3[styleName].trim(), ";");
  }, "");
}
function transformIsMeaningful(transform) {
  return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
}
function transformForSvg(_ref2) {
  var transform = _ref2.transform, containerWidth = _ref2.containerWidth, iconWidth = _ref2.iconWidth;
  var outer = {
    transform: "translate(".concat(containerWidth / 2, " 256)")
  };
  var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
  var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
  var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
  var inner = {
    transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
  };
  var path = {
    transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
  };
  return {
    outer,
    inner,
    path
  };
}
function transformForCss(_ref2) {
  var transform = _ref2.transform, _ref2$width = _ref2.width, width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width, _ref2$height = _ref2.height, height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height, _ref2$startCentered = _ref2.startCentered, startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;
  var val = "";
  if (startCentered && IS_IE) {
    val += "translate(".concat(transform.x / d - width / 2, "em, ").concat(transform.y / d - height / 2, "em) ");
  } else if (startCentered) {
    val += "translate(calc(-50% + ".concat(transform.x / d, "em), calc(-50% + ").concat(transform.y / d, "em)) ");
  } else {
    val += "translate(".concat(transform.x / d, "em, ").concat(transform.y / d, "em) ");
  }
  val += "scale(".concat(transform.size / d * (transform.flipX ? -1 : 1), ", ").concat(transform.size / d * (transform.flipY ? -1 : 1), ") ");
  val += "rotate(".concat(transform.rotate, "deg) ");
  return val;
}
var baseStyles = ':root, :host {\n  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";\n  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";\n  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";\n  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";\n  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";\n}\n\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\n  overflow: visible;\n  box-sizing: content-box;\n}\n\n.svg-inline--fa {\n  display: var(--fa-display, inline-block);\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-2xs {\n  vertical-align: 0.1em;\n}\n.svg-inline--fa.fa-xs {\n  vertical-align: 0em;\n}\n.svg-inline--fa.fa-sm {\n  vertical-align: -0.0714285705em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.2em;\n}\n.svg-inline--fa.fa-xl {\n  vertical-align: -0.25em;\n}\n.svg-inline--fa.fa-2xl {\n  vertical-align: -0.3125em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-li {\n  width: var(--fa-li-width, 2em);\n  top: 0.25em;\n}\n.svg-inline--fa.fa-fw {\n  width: var(--fa-fw-width, 1.25em);\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: var(--fa-counter-background-color, #ff253a);\n  border-radius: var(--fa-counter-border-radius, 1em);\n  box-sizing: border-box;\n  color: var(--fa-inverse, #fff);\n  line-height: var(--fa-counter-line-height, 1);\n  max-width: var(--fa-counter-max-width, 5em);\n  min-width: var(--fa-counter-min-width, 1.5em);\n  overflow: hidden;\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\n  right: var(--fa-right, 0);\n  text-overflow: ellipsis;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-counter-scale, 0.25));\n          transform: scale(var(--fa-counter-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: var(--fa-bottom, 0);\n  right: var(--fa-right, 0);\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: var(--fa-bottom, 0);\n  left: var(--fa-left, 0);\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  top: var(--fa-top, 0);\n  right: var(--fa-right, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: var(--fa-left, 0);\n  right: auto;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-2xs {\n  font-size: 0.625em;\n  line-height: 0.1em;\n  vertical-align: 0.225em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n  line-height: 0.0833333337em;\n  vertical-align: 0.125em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n  line-height: 0.0714285718em;\n  vertical-align: 0.0535714295em;\n}\n\n.fa-lg {\n  font-size: 1.25em;\n  line-height: 0.05em;\n  vertical-align: -0.075em;\n}\n\n.fa-xl {\n  font-size: 1.5em;\n  line-height: 0.0416666682em;\n  vertical-align: -0.125em;\n}\n\n.fa-2xl {\n  font-size: 2em;\n  line-height: 0.03125em;\n  vertical-align: -0.1875em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: var(--fa-li-margin, 2.5em);\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: calc(var(--fa-li-width, 2em) * -1);\n  position: absolute;\n  text-align: center;\n  width: var(--fa-li-width, 2em);\n  line-height: inherit;\n}\n\n.fa-border {\n  border-color: var(--fa-border-color, #eee);\n  border-radius: var(--fa-border-radius, 0.1em);\n  border-style: var(--fa-border-style, solid);\n  border-width: var(--fa-border-width, 0.08em);\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\n}\n\n.fa-pull-left {\n  float: left;\n  margin-right: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-pull-right {\n  float: right;\n  margin-left: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-beat {\n  -webkit-animation-name: fa-beat;\n          animation-name: fa-beat;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-bounce {\n  -webkit-animation-name: fa-bounce;\n          animation-name: fa-bounce;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n}\n\n.fa-fade {\n  -webkit-animation-name: fa-fade;\n          animation-name: fa-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-beat-fade {\n  -webkit-animation-name: fa-beat-fade;\n          animation-name: fa-beat-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-flip {\n  -webkit-animation-name: fa-flip;\n          animation-name: fa-flip;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-shake {\n  -webkit-animation-name: fa-shake;\n          animation-name: fa-shake;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 2s);\n          animation-duration: var(--fa-animation-duration, 2s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin-reverse {\n  --fa-animation-direction: reverse;\n}\n\n.fa-pulse,\n.fa-spin-pulse {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));\n          animation-timing-function: var(--fa-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .fa-beat,\n.fa-bounce,\n.fa-fade,\n.fa-beat-fade,\n.fa-flip,\n.fa-pulse,\n.fa-shake,\n.fa-spin,\n.fa-spin-pulse {\n    -webkit-animation-delay: -1ms;\n            animation-delay: -1ms;\n    -webkit-animation-duration: 1ms;\n            animation-duration: 1ms;\n    -webkit-animation-iteration-count: 1;\n            animation-iteration-count: 1;\n    -webkit-transition-delay: 0s;\n            transition-delay: 0s;\n    -webkit-transition-duration: 0s;\n            transition-duration: 0s;\n  }\n}\n@-webkit-keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@-webkit-keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@-webkit-keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@-webkit-keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@-webkit-keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@-webkit-keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both,\n.fa-flip-horizontal.fa-flip-vertical {\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n.fa-rotate-by {\n  -webkit-transform: rotate(var(--fa-rotate-angle, none));\n          transform: rotate(var(--fa-rotate-angle, none));\n}\n\n.fa-stack {\n  display: inline-block;\n  vertical-align: middle;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: var(--fa-stack-z-index, auto);\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}\n\n.sr-only,\n.fa-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.sr-only-focusable:not(:focus),\n.fa-sr-only-focusable:not(:focus) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse,\n.fa-duotone.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}';
function css() {
  var dcp = DEFAULT_CSS_PREFIX;
  var drc = DEFAULT_REPLACEMENT_CLASS;
  var fp = config.cssPrefix;
  var rc = config.replacementClass;
  var s = baseStyles;
  if (fp !== dcp || rc !== drc) {
    var dPatt = new RegExp("\\.".concat(dcp, "\\-"), "g");
    var customPropPatt = new RegExp("\\--".concat(dcp, "\\-"), "g");
    var rPatt = new RegExp("\\.".concat(drc), "g");
    s = s.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
  }
  return s;
}
var _cssInserted = false;
function ensureCss() {
  if (config.autoAddCss && !_cssInserted) {
    insertCss(css());
    _cssInserted = true;
  }
}
var InjectCSS = {
  mixout: function mixout() {
    return {
      dom: {
        css,
        insertCss: ensureCss
      }
    };
  },
  hooks: function hooks() {
    return {
      beforeDOMElementCreation: function beforeDOMElementCreation() {
        ensureCss();
      },
      beforeI2svg: function beforeI2svg() {
        ensureCss();
      }
    };
  }
};
var w = WINDOW || {};
if (!w[NAMESPACE_IDENTIFIER])
  w[NAMESPACE_IDENTIFIER] = {};
if (!w[NAMESPACE_IDENTIFIER].styles)
  w[NAMESPACE_IDENTIFIER].styles = {};
if (!w[NAMESPACE_IDENTIFIER].hooks)
  w[NAMESPACE_IDENTIFIER].hooks = {};
if (!w[NAMESPACE_IDENTIFIER].shims)
  w[NAMESPACE_IDENTIFIER].shims = [];
var namespace = w[NAMESPACE_IDENTIFIER];
var functions = [];
var listener = function listener2() {
  DOCUMENT.removeEventListener("DOMContentLoaded", listener2);
  loaded = 1;
  functions.map(function(fn) {
    return fn();
  });
};
var loaded = false;
if (IS_DOM) {
  loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);
  if (!loaded)
    DOCUMENT.addEventListener("DOMContentLoaded", listener);
}
function domready(fn) {
  if (!IS_DOM)
    return;
  loaded ? setTimeout(fn, 0) : functions.push(fn);
}
function toHtml(abstractNodes) {
  var tag = abstractNodes.tag, _abstractNodes$attrib = abstractNodes.attributes, attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib, _abstractNodes$childr = abstractNodes.children, children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;
  if (typeof abstractNodes === "string") {
    return htmlEscape(abstractNodes);
  } else {
    return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(""), "</").concat(tag, ">");
  }
}
function iconFromMapping(mapping, prefix, iconName) {
  if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
    return {
      prefix,
      iconName,
      icon: mapping[prefix][iconName]
    };
  }
}
var bindInternal4 = function bindInternal42(func, thisContext) {
  return function(a, b, c, d2) {
    return func.call(thisContext, a, b, c, d2);
  };
};
var reduce = function fastReduceObject(subject, fn, initialValue, thisContext) {
  var keys = Object.keys(subject), length = keys.length, iterator = thisContext !== void 0 ? bindInternal4(fn, thisContext) : fn, i, key, result;
  if (initialValue === void 0) {
    i = 1;
    result = subject[keys[0]];
  } else {
    i = 0;
    result = initialValue;
  }
  for (; i < length; i++) {
    key = keys[i];
    result = iterator(result, subject[key], key, subject);
  }
  return result;
};
function ucs2decode(string) {
  var output = [];
  var counter2 = 0;
  var length = string.length;
  while (counter2 < length) {
    var value = string.charCodeAt(counter2++);
    if (value >= 55296 && value <= 56319 && counter2 < length) {
      var extra = string.charCodeAt(counter2++);
      if ((extra & 64512) == 56320) {
        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
      } else {
        output.push(value);
        counter2--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
}
function toHex(unicode) {
  var decoded = ucs2decode(unicode);
  return decoded.length === 1 ? decoded[0].toString(16) : null;
}
function codePointAt(string, index) {
  var size = string.length;
  var first = string.charCodeAt(index);
  var second;
  if (first >= 55296 && first <= 56319 && size > index + 1) {
    second = string.charCodeAt(index + 1);
    if (second >= 56320 && second <= 57343) {
      return (first - 55296) * 1024 + second - 56320 + 65536;
    }
  }
  return first;
}
function normalizeIcons(icons) {
  return Object.keys(icons).reduce(function(acc, iconName) {
    var icon3 = icons[iconName];
    var expanded = !!icon3.icon;
    if (expanded) {
      acc[icon3.iconName] = icon3.icon;
    } else {
      acc[iconName] = icon3;
    }
    return acc;
  }, {});
}
function defineIcons(prefix, icons) {
  var params = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var _params$skipHooks = params.skipHooks, skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
  var normalized = normalizeIcons(icons);
  if (typeof namespace.hooks.addPack === "function" && !skipHooks) {
    namespace.hooks.addPack(prefix, normalizeIcons(icons));
  } else {
    namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
  }
  if (prefix === "fas") {
    defineIcons("fa", icons);
  }
}
var duotonePathRe = [_wrapRegExp(/path d="((?:(?!")[\s\S])+)".*path d="((?:(?!")[\s\S])+)"/, {
  d1: 1,
  d2: 2
}), _wrapRegExp(/path class="((?:(?!")[\s\S])+)".*d="((?:(?!")[\s\S])+)".*path class="((?:(?!")[\s\S])+)".*d="((?:(?!")[\s\S])+)"/, {
  cls1: 1,
  d1: 2,
  cls2: 3,
  d2: 4
}), _wrapRegExp(/path class="((?:(?!")[\s\S])+)".*d="((?:(?!")[\s\S])+)"/, {
  cls1: 1,
  d1: 2
})];
var _LONG_STYLE;
var _PREFIXES;
var _PREFIXES_FOR_FAMILY;
var styles = namespace.styles;
var shims = namespace.shims;
var LONG_STYLE = (_LONG_STYLE = {}, _defineProperty(_LONG_STYLE, FAMILY_CLASSIC, Object.values(PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC])), _defineProperty(_LONG_STYLE, FAMILY_SHARP, Object.values(PREFIX_TO_LONG_STYLE[FAMILY_SHARP])), _LONG_STYLE);
var _defaultUsablePrefix = null;
var _byUnicode = {};
var _byLigature = {};
var _byOldName = {};
var _byOldUnicode = {};
var _byAlias = {};
var PREFIXES = (_PREFIXES = {}, _defineProperty(_PREFIXES, FAMILY_CLASSIC, Object.keys(PREFIX_TO_STYLE[FAMILY_CLASSIC])), _defineProperty(_PREFIXES, FAMILY_SHARP, Object.keys(PREFIX_TO_STYLE[FAMILY_SHARP])), _PREFIXES);
function isReserved(name) {
  return ~RESERVED_CLASSES.indexOf(name);
}
function getIconName(cssPrefix, cls) {
  var parts = cls.split("-");
  var prefix = parts[0];
  var iconName = parts.slice(1).join("-");
  if (prefix === cssPrefix && iconName !== "" && !isReserved(iconName)) {
    return iconName;
  } else {
    return null;
  }
}
var build = function build2() {
  var lookup = function lookup2(reducer) {
    return reduce(styles, function(o, style, prefix) {
      o[prefix] = reduce(style, reducer, {});
      return o;
    }, {});
  };
  _byUnicode = lookup(function(acc, icon3, iconName) {
    if (icon3[3]) {
      acc[icon3[3]] = iconName;
    }
    if (icon3[2]) {
      var aliases = icon3[2].filter(function(a) {
        return typeof a === "number";
      });
      aliases.forEach(function(alias) {
        acc[alias.toString(16)] = iconName;
      });
    }
    return acc;
  });
  _byLigature = lookup(function(acc, icon3, iconName) {
    acc[iconName] = iconName;
    if (icon3[2]) {
      var aliases = icon3[2].filter(function(a) {
        return typeof a === "string";
      });
      aliases.forEach(function(alias) {
        acc[alias] = iconName;
      });
    }
    return acc;
  });
  _byAlias = lookup(function(acc, icon3, iconName) {
    var aliases = icon3[2];
    acc[iconName] = iconName;
    aliases.forEach(function(alias) {
      acc[alias] = iconName;
    });
    return acc;
  });
  var hasRegular = "far" in styles || config.autoFetchSvg;
  var shimLookups = reduce(shims, function(acc, shim) {
    var maybeNameMaybeUnicode = shim[0];
    var prefix = shim[1];
    var iconName = shim[2];
    if (prefix === "far" && !hasRegular) {
      prefix = "fas";
    }
    if (typeof maybeNameMaybeUnicode === "string") {
      acc.names[maybeNameMaybeUnicode] = {
        prefix,
        iconName
      };
    }
    if (typeof maybeNameMaybeUnicode === "number") {
      acc.unicodes[maybeNameMaybeUnicode.toString(16)] = {
        prefix,
        iconName
      };
    }
    return acc;
  }, {
    names: {},
    unicodes: {}
  });
  _byOldName = shimLookups.names;
  _byOldUnicode = shimLookups.unicodes;
  _defaultUsablePrefix = getCanonicalPrefix(config.styleDefault, {
    family: config.familyDefault
  });
};
onChange(function(c) {
  _defaultUsablePrefix = getCanonicalPrefix(c.styleDefault, {
    family: config.familyDefault
  });
});
build();
function byUnicode(prefix, unicode) {
  return (_byUnicode[prefix] || {})[unicode];
}
function byLigature(prefix, ligature) {
  return (_byLigature[prefix] || {})[ligature];
}
function byAlias(prefix, alias) {
  return (_byAlias[prefix] || {})[alias];
}
function byOldName(name) {
  return _byOldName[name] || {
    prefix: null,
    iconName: null
  };
}
function byOldUnicode(unicode) {
  var oldUnicode = _byOldUnicode[unicode];
  var newUnicode = byUnicode("fas", unicode);
  return oldUnicode || (newUnicode ? {
    prefix: "fas",
    iconName: newUnicode
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function getDefaultUsablePrefix() {
  return _defaultUsablePrefix;
}
var emptyCanonicalIcon = function emptyCanonicalIcon2() {
  return {
    prefix: null,
    iconName: null,
    rest: []
  };
};
function getCanonicalPrefix(styleOrPrefix) {
  var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _params$family = params.family, family = _params$family === void 0 ? FAMILY_CLASSIC : _params$family;
  var style = PREFIX_TO_STYLE[family][styleOrPrefix];
  var prefix = STYLE_TO_PREFIX[family][styleOrPrefix] || STYLE_TO_PREFIX[family][style];
  var defined = styleOrPrefix in namespace.styles ? styleOrPrefix : null;
  return prefix || defined || null;
}
var PREFIXES_FOR_FAMILY = (_PREFIXES_FOR_FAMILY = {}, _defineProperty(_PREFIXES_FOR_FAMILY, FAMILY_CLASSIC, Object.keys(PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC])), _defineProperty(_PREFIXES_FOR_FAMILY, FAMILY_SHARP, Object.keys(PREFIX_TO_LONG_STYLE[FAMILY_SHARP])), _PREFIXES_FOR_FAMILY);
function getCanonicalIcon(values) {
  var _famProps;
  var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _params$skipLookups = params.skipLookups, skipLookups = _params$skipLookups === void 0 ? false : _params$skipLookups;
  var famProps = (_famProps = {}, _defineProperty(_famProps, FAMILY_CLASSIC, "".concat(config.cssPrefix, "-").concat(FAMILY_CLASSIC)), _defineProperty(_famProps, FAMILY_SHARP, "".concat(config.cssPrefix, "-").concat(FAMILY_SHARP)), _famProps);
  var givenPrefix = null;
  var family = FAMILY_CLASSIC;
  if (values.includes(famProps[FAMILY_CLASSIC]) || values.some(function(v) {
    return PREFIXES_FOR_FAMILY[FAMILY_CLASSIC].includes(v);
  })) {
    family = FAMILY_CLASSIC;
  }
  if (values.includes(famProps[FAMILY_SHARP]) || values.some(function(v) {
    return PREFIXES_FOR_FAMILY[FAMILY_SHARP].includes(v);
  })) {
    family = FAMILY_SHARP;
  }
  var canonical = values.reduce(function(acc, cls) {
    var iconName = getIconName(config.cssPrefix, cls);
    if (styles[cls]) {
      cls = LONG_STYLE[family].includes(cls) ? LONG_STYLE_TO_PREFIX[family][cls] : cls;
      givenPrefix = cls;
      acc.prefix = cls;
    } else if (PREFIXES[family].indexOf(cls) > -1) {
      givenPrefix = cls;
      acc.prefix = getCanonicalPrefix(cls, {
        family
      });
    } else if (iconName) {
      acc.iconName = iconName;
    } else if (cls !== config.replacementClass && cls !== famProps[FAMILY_CLASSIC] && cls !== famProps[FAMILY_SHARP]) {
      acc.rest.push(cls);
    }
    if (!skipLookups && acc.prefix && acc.iconName) {
      var shim = givenPrefix === "fa" ? byOldName(acc.iconName) : {};
      var aliasIconName = byAlias(acc.prefix, acc.iconName);
      if (shim.prefix) {
        givenPrefix = null;
      }
      acc.iconName = shim.iconName || aliasIconName || acc.iconName;
      acc.prefix = shim.prefix || acc.prefix;
      if (acc.prefix === "far" && !styles["far"] && styles["fas"] && !config.autoFetchSvg) {
        acc.prefix = "fas";
      }
    }
    return acc;
  }, emptyCanonicalIcon());
  if (values.includes("fa-brands") || values.includes("fab")) {
    canonical.prefix = "fab";
  }
  if (values.includes("fa-duotone") || values.includes("fad")) {
    canonical.prefix = "fad";
  }
  if (!canonical.prefix && family === FAMILY_SHARP && (styles["fass"] || config.autoFetchSvg)) {
    canonical.prefix = "fass";
    canonical.iconName = byAlias(canonical.prefix, canonical.iconName) || canonical.iconName;
  }
  if (canonical.prefix === "fa" || givenPrefix === "fa") {
    canonical.prefix = getDefaultUsablePrefix() || "fas";
  }
  return canonical;
}
var Library = function() {
  function Library2() {
    _classCallCheck(this, Library2);
    this.definitions = {};
  }
  _createClass(Library2, [{
    key: "add",
    value: function add() {
      var _this = this;
      for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
        definitions[_key] = arguments[_key];
      }
      var additions = definitions.reduce(this._pullDefinitions, {});
      Object.keys(additions).forEach(function(key) {
        _this.definitions[key] = _objectSpread2(_objectSpread2({}, _this.definitions[key] || {}), additions[key]);
        defineIcons(key, additions[key]);
        var longPrefix = PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC][key];
        if (longPrefix)
          defineIcons(longPrefix, additions[key]);
        build();
      });
    }
  }, {
    key: "reset",
    value: function reset() {
      this.definitions = {};
    }
  }, {
    key: "_pullDefinitions",
    value: function _pullDefinitions(additions, definition) {
      var normalized = definition.prefix && definition.iconName && definition.icon ? {
        0: definition
      } : definition;
      Object.keys(normalized).map(function(key) {
        var _normalized$key = normalized[key], prefix = _normalized$key.prefix, iconName = _normalized$key.iconName, icon3 = _normalized$key.icon;
        var aliases = icon3[2];
        if (!additions[prefix])
          additions[prefix] = {};
        if (aliases.length > 0) {
          aliases.forEach(function(alias) {
            if (typeof alias === "string") {
              additions[prefix][alias] = icon3;
            }
          });
        }
        additions[prefix][iconName] = icon3;
      });
      return additions;
    }
  }]);
  return Library2;
}();
var _plugins = [];
var _hooks = {};
var providers = {};
var defaultProviderKeys = Object.keys(providers);
function registerPlugins(nextPlugins, _ref2) {
  var obj = _ref2.mixoutsTo;
  _plugins = nextPlugins;
  _hooks = {};
  Object.keys(providers).forEach(function(k) {
    if (defaultProviderKeys.indexOf(k) === -1) {
      delete providers[k];
    }
  });
  _plugins.forEach(function(plugin) {
    var mixout8 = plugin.mixout ? plugin.mixout() : {};
    Object.keys(mixout8).forEach(function(tk) {
      if (typeof mixout8[tk] === "function") {
        obj[tk] = mixout8[tk];
      }
      if (_typeof(mixout8[tk]) === "object") {
        Object.keys(mixout8[tk]).forEach(function(sk) {
          if (!obj[tk]) {
            obj[tk] = {};
          }
          obj[tk][sk] = mixout8[tk][sk];
        });
      }
    });
    if (plugin.hooks) {
      var hooks8 = plugin.hooks();
      Object.keys(hooks8).forEach(function(hook) {
        if (!_hooks[hook]) {
          _hooks[hook] = [];
        }
        _hooks[hook].push(hooks8[hook]);
      });
    }
    if (plugin.provides) {
      plugin.provides(providers);
    }
  });
  return obj;
}
function chainHooks(hook, accumulator) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
  var hookFns = _hooks[hook] || [];
  hookFns.forEach(function(hookFn) {
    accumulator = hookFn.apply(null, [accumulator].concat(args));
  });
  return accumulator;
}
function callHooks(hook) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }
  var hookFns = _hooks[hook] || [];
  hookFns.forEach(function(hookFn) {
    hookFn.apply(null, args);
  });
  return void 0;
}
function callProvided() {
  var hook = arguments[0];
  var args = Array.prototype.slice.call(arguments, 1);
  return providers[hook] ? providers[hook].apply(null, args) : void 0;
}
function findIconDefinition(iconLookup) {
  if (iconLookup.prefix === "fa") {
    iconLookup.prefix = "fas";
  }
  var iconName = iconLookup.iconName;
  var prefix = iconLookup.prefix || getDefaultUsablePrefix();
  if (!iconName)
    return;
  iconName = byAlias(prefix, iconName) || iconName;
  return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);
}
var library = new Library();
var noAuto = function noAuto2() {
  config.autoReplaceSvg = false;
  config.observeMutations = false;
  callHooks("noAuto");
};
var dom = {
  i2svg: function i2svg() {
    var params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (IS_DOM) {
      callHooks("beforeI2svg", params);
      callProvided("pseudoElements2svg", params);
      return callProvided("i2svg", params);
    } else {
      return Promise.reject("Operation requires a DOM of some kind.");
    }
  },
  watch: function watch() {
    var params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var autoReplaceSvgRoot = params.autoReplaceSvgRoot;
    if (config.autoReplaceSvg === false) {
      config.autoReplaceSvg = true;
    }
    config.observeMutations = true;
    domready(function() {
      autoReplace({
        autoReplaceSvgRoot
      });
      callHooks("watch", params);
    });
  }
};
var parse = {
  icon: function icon(_icon) {
    if (_icon === null) {
      return null;
    }
    if (_typeof(_icon) === "object" && _icon.prefix && _icon.iconName) {
      return {
        prefix: _icon.prefix,
        iconName: byAlias(_icon.prefix, _icon.iconName) || _icon.iconName
      };
    }
    if (Array.isArray(_icon) && _icon.length === 2) {
      var iconName = _icon[1].indexOf("fa-") === 0 ? _icon[1].slice(3) : _icon[1];
      var prefix = getCanonicalPrefix(_icon[0]);
      return {
        prefix,
        iconName: byAlias(prefix, iconName) || iconName
      };
    }
    if (typeof _icon === "string" && (_icon.indexOf("".concat(config.cssPrefix, "-")) > -1 || _icon.match(ICON_SELECTION_SYNTAX_PATTERN))) {
      var canonicalIcon = getCanonicalIcon(_icon.split(" "), {
        skipLookups: true
      });
      return {
        prefix: canonicalIcon.prefix || getDefaultUsablePrefix(),
        iconName: byAlias(canonicalIcon.prefix, canonicalIcon.iconName) || canonicalIcon.iconName
      };
    }
    if (typeof _icon === "string") {
      var _prefix = getDefaultUsablePrefix();
      return {
        prefix: _prefix,
        iconName: byAlias(_prefix, _icon) || _icon
      };
    }
  }
};
var api = {
  noAuto,
  config,
  dom,
  parse,
  library,
  findIconDefinition,
  toHtml
};
var autoReplace = function autoReplace2() {
  var params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _params$autoReplaceSv = params.autoReplaceSvgRoot, autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? DOCUMENT : _params$autoReplaceSv;
  if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg)
    api.dom.i2svg({
      node: autoReplaceSvgRoot
    });
};
function domVariants(val, abstractCreator) {
  Object.defineProperty(val, "abstract", {
    get: abstractCreator
  });
  Object.defineProperty(val, "html", {
    get: function get2() {
      return val.abstract.map(function(a) {
        return toHtml(a);
      });
    }
  });
  Object.defineProperty(val, "node", {
    get: function get2() {
      if (!IS_DOM)
        return;
      var container = DOCUMENT.createElement("div");
      container.innerHTML = val.html;
      return container.children;
    }
  });
  return val;
}
function asIcon(_ref2) {
  var children = _ref2.children, main = _ref2.main, mask = _ref2.mask, attributes = _ref2.attributes, styles3 = _ref2.styles, transform = _ref2.transform;
  if (transformIsMeaningful(transform) && main.found && !mask.found) {
    var width = main.width, height = main.height;
    var offset = {
      x: width / height / 2,
      y: 0.5
    };
    attributes["style"] = joinStyles(_objectSpread2(_objectSpread2({}, styles3), {}, {
      "transform-origin": "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes,
    children
  }];
}
function asSymbol(_ref2) {
  var prefix = _ref2.prefix, iconName = _ref2.iconName, children = _ref2.children, attributes = _ref2.attributes, symbol = _ref2.symbol;
  var id = symbol === true ? "".concat(prefix, "-").concat(config.cssPrefix, "-").concat(iconName) : symbol;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: _objectSpread2(_objectSpread2({}, attributes), {}, {
        id
      }),
      children
    }]
  }];
}
function makeInlineSvgAbstract(params) {
  var _params$icons = params.icons, main = _params$icons.main, mask = _params$icons.mask, prefix = params.prefix, iconName = params.iconName, transform = params.transform, symbol = params.symbol, title = params.title, maskId = params.maskId, titleId = params.titleId, extra = params.extra, _params$watchable = params.watchable, watchable = _params$watchable === void 0 ? false : _params$watchable;
  var _ref2 = mask.found ? mask : main, width = _ref2.width, height = _ref2.height;
  var isUploadedIcon = prefix === "fak";
  var attrClass = [config.replacementClass, iconName ? "".concat(config.cssPrefix, "-").concat(iconName) : ""].filter(function(c) {
    return extra.classes.indexOf(c) === -1;
  }).filter(function(c) {
    return c !== "" || !!c;
  }).concat(extra.classes).join(" ");
  var content = {
    children: [],
    attributes: _objectSpread2(_objectSpread2({}, extra.attributes), {}, {
      "data-prefix": prefix,
      "data-icon": iconName,
      "class": attrClass,
      "role": extra.attributes.role || "img",
      "xmlns": "http://www.w3.org/2000/svg",
      "viewBox": "0 0 ".concat(width, " ").concat(height)
    })
  };
  var uploadedIconWidthStyle = isUploadedIcon && !~extra.classes.indexOf("fa-fw") ? {
    width: "".concat(width / height * 16 * 0.0625, "em")
  } : {};
  if (watchable) {
    content.attributes[DATA_FA_I2SVG] = "";
  }
  if (title) {
    content.children.push({
      tag: "title",
      attributes: {
        id: content.attributes["aria-labelledby"] || "title-".concat(titleId || nextUniqueId())
      },
      children: [title]
    });
    delete content.attributes.title;
  }
  var args = _objectSpread2(_objectSpread2({}, content), {}, {
    prefix,
    iconName,
    main,
    mask,
    maskId,
    transform,
    symbol,
    styles: _objectSpread2(_objectSpread2({}, uploadedIconWidthStyle), extra.styles)
  });
  var _ref22 = mask.found && main.found ? callProvided("generateAbstractMask", args) || {
    children: [],
    attributes: {}
  } : callProvided("generateAbstractIcon", args) || {
    children: [],
    attributes: {}
  }, children = _ref22.children, attributes = _ref22.attributes;
  args.children = children;
  args.attributes = attributes;
  if (symbol) {
    return asSymbol(args);
  } else {
    return asIcon(args);
  }
}
function makeLayersTextAbstract(params) {
  var content = params.content, width = params.width, height = params.height, transform = params.transform, title = params.title, extra = params.extra, _params$watchable2 = params.watchable, watchable = _params$watchable2 === void 0 ? false : _params$watchable2;
  var attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
    "title": title
  } : {}), {}, {
    "class": extra.classes.join(" ")
  });
  if (watchable) {
    attributes[DATA_FA_I2SVG] = "";
  }
  var styles3 = _objectSpread2({}, extra.styles);
  if (transformIsMeaningful(transform)) {
    styles3["transform"] = transformForCss({
      transform,
      startCentered: true,
      width,
      height
    });
    styles3["-webkit-transform"] = styles3["transform"];
  }
  var styleString = joinStyles(styles3);
  if (styleString.length > 0) {
    attributes["style"] = styleString;
  }
  var val = [];
  val.push({
    tag: "span",
    attributes,
    children: [content]
  });
  if (title) {
    val.push({
      tag: "span",
      attributes: {
        class: "sr-only"
      },
      children: [title]
    });
  }
  return val;
}
function makeLayersCounterAbstract(params) {
  var content = params.content, title = params.title, extra = params.extra;
  var attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
    "title": title
  } : {}), {}, {
    "class": extra.classes.join(" ")
  });
  var styleString = joinStyles(extra.styles);
  if (styleString.length > 0) {
    attributes["style"] = styleString;
  }
  var val = [];
  val.push({
    tag: "span",
    attributes,
    children: [content]
  });
  if (title) {
    val.push({
      tag: "span",
      attributes: {
        class: "sr-only"
      },
      children: [title]
    });
  }
  return val;
}
var styles$1 = namespace.styles;
function asFoundIcon(icon3) {
  var width = icon3[0];
  var height = icon3[1];
  var _icon$slice = icon3.slice(4), _icon$slice2 = _slicedToArray(_icon$slice, 1), vectorData = _icon$slice2[0];
  var element = null;
  if (Array.isArray(vectorData)) {
    element = {
      tag: "g",
      attributes: {
        class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
      },
      children: [{
        tag: "path",
        attributes: {
          class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
          fill: "currentColor",
          d: vectorData[0]
        }
      }, {
        tag: "path",
        attributes: {
          class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
          fill: "currentColor",
          d: vectorData[1]
        }
      }]
    };
  } else {
    element = {
      tag: "path",
      attributes: {
        fill: "currentColor",
        d: vectorData
      }
    };
  }
  return {
    found: true,
    width,
    height,
    icon: element
  };
}
var missingIconResolutionMixin = {
  found: false,
  width: 512,
  height: 512
};
function maybeNotifyMissing(iconName, prefix) {
  if (!PRODUCTION && !config.showMissingIcons && iconName) {
    console.error('Icon with name "'.concat(iconName, '" and prefix "').concat(prefix, '" is missing.'));
  }
}
function findIcon(iconName, prefix) {
  var givenPrefix = prefix;
  if (prefix === "fa" && config.styleDefault !== null) {
    prefix = getDefaultUsablePrefix();
  }
  return new Promise(function(resolve, reject) {
    var val = {
      found: false,
      width: 512,
      height: 512,
      icon: callProvided("missingIconAbstract") || {}
    };
    if (givenPrefix === "fa") {
      var shim = byOldName(iconName) || {};
      iconName = shim.iconName || iconName;
      prefix = shim.prefix || prefix;
    }
    if (iconName && prefix && styles$1[prefix] && styles$1[prefix][iconName]) {
      var icon3 = styles$1[prefix][iconName];
      return resolve(asFoundIcon(icon3));
    }
    maybeNotifyMissing(iconName, prefix);
    resolve(_objectSpread2(_objectSpread2({}, missingIconResolutionMixin), {}, {
      icon: config.showMissingIcons && iconName ? callProvided("missingIconAbstract") || {} : {}
    }));
  });
}
var noop$1 = function noop3() {
};
var p = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
  mark: noop$1,
  measure: noop$1
};
var preamble = 'FA "6.4.0"';
var begin = function begin2(name) {
  p.mark("".concat(preamble, " ").concat(name, " begins"));
  return function() {
    return end(name);
  };
};
var end = function end2(name) {
  p.mark("".concat(preamble, " ").concat(name, " ends"));
  p.measure("".concat(preamble, " ").concat(name), "".concat(preamble, " ").concat(name, " begins"), "".concat(preamble, " ").concat(name, " ends"));
};
var perf = {
  begin,
  end
};
var noop$2 = function noop4() {
};
function isWatched(node) {
  var i2svg2 = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;
  return typeof i2svg2 === "string";
}
function hasPrefixAndIcon(node) {
  var prefix = node.getAttribute ? node.getAttribute(DATA_PREFIX) : null;
  var icon3 = node.getAttribute ? node.getAttribute(DATA_ICON) : null;
  return prefix && icon3;
}
function hasBeenReplaced(node) {
  return node && node.classList && node.classList.contains && node.classList.contains(config.replacementClass);
}
function getMutator() {
  if (config.autoReplaceSvg === true) {
    return mutators.replace;
  }
  var mutator = mutators[config.autoReplaceSvg];
  return mutator || mutators.replace;
}
function createElementNS(tag) {
  return DOCUMENT.createElementNS("http://www.w3.org/2000/svg", tag);
}
function createElement(tag) {
  return DOCUMENT.createElement(tag);
}
function convertSVG(abstractObj) {
  var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _params$ceFn = params.ceFn, ceFn = _params$ceFn === void 0 ? abstractObj.tag === "svg" ? createElementNS : createElement : _params$ceFn;
  if (typeof abstractObj === "string") {
    return DOCUMENT.createTextNode(abstractObj);
  }
  var tag = ceFn(abstractObj.tag);
  Object.keys(abstractObj.attributes || []).forEach(function(key) {
    tag.setAttribute(key, abstractObj.attributes[key]);
  });
  var children = abstractObj.children || [];
  children.forEach(function(child) {
    tag.appendChild(convertSVG(child, {
      ceFn
    }));
  });
  return tag;
}
function nodeAsComment(node) {
  var comment = " ".concat(node.outerHTML, " ");
  comment = "".concat(comment, "Font Awesome fontawesome.com ");
  return comment;
}
var mutators = {
  replace: function replace(mutation) {
    var node = mutation[0];
    if (node.parentNode) {
      mutation[1].forEach(function(_abstract) {
        node.parentNode.insertBefore(convertSVG(_abstract), node);
      });
      if (node.getAttribute(DATA_FA_I2SVG) === null && config.keepOriginalSource) {
        var comment = DOCUMENT.createComment(nodeAsComment(node));
        node.parentNode.replaceChild(comment, node);
      } else {
        node.remove();
      }
    }
  },
  nest: function nest(mutation) {
    var node = mutation[0];
    var _abstract2 = mutation[1];
    if (~classArray(node).indexOf(config.replacementClass)) {
      return mutators.replace(mutation);
    }
    var forSvg = new RegExp("".concat(config.cssPrefix, "-.*"));
    delete _abstract2[0].attributes.id;
    if (_abstract2[0].attributes.class) {
      var splitClasses = _abstract2[0].attributes.class.split(" ").reduce(function(acc, cls) {
        if (cls === config.replacementClass || cls.match(forSvg)) {
          acc.toSvg.push(cls);
        } else {
          acc.toNode.push(cls);
        }
        return acc;
      }, {
        toNode: [],
        toSvg: []
      });
      _abstract2[0].attributes.class = splitClasses.toSvg.join(" ");
      if (splitClasses.toNode.length === 0) {
        node.removeAttribute("class");
      } else {
        node.setAttribute("class", splitClasses.toNode.join(" "));
      }
    }
    var newInnerHTML = _abstract2.map(function(a) {
      return toHtml(a);
    }).join("\n");
    node.setAttribute(DATA_FA_I2SVG, "");
    node.innerHTML = newInnerHTML;
  }
};
function performOperationSync(op) {
  op();
}
function perform(mutations, callback) {
  var callbackFunction = typeof callback === "function" ? callback : noop$2;
  if (mutations.length === 0) {
    callbackFunction();
  } else {
    var frame = performOperationSync;
    if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {
      frame = WINDOW.requestAnimationFrame || performOperationSync;
    }
    frame(function() {
      var mutator = getMutator();
      var mark = perf.begin("mutate");
      mutations.map(mutator);
      mark();
      callbackFunction();
    });
  }
}
var disabled = false;
function disableObservation() {
  disabled = true;
}
function enableObservation() {
  disabled = false;
}
var mo = null;
function observe(options) {
  if (!MUTATION_OBSERVER) {
    return;
  }
  if (!config.observeMutations) {
    return;
  }
  var _options$treeCallback = options.treeCallback, treeCallback = _options$treeCallback === void 0 ? noop$2 : _options$treeCallback, _options$nodeCallback = options.nodeCallback, nodeCallback = _options$nodeCallback === void 0 ? noop$2 : _options$nodeCallback, _options$pseudoElemen = options.pseudoElementsCallback, pseudoElementsCallback = _options$pseudoElemen === void 0 ? noop$2 : _options$pseudoElemen, _options$observeMutat = options.observeMutationsRoot, observeMutationsRoot = _options$observeMutat === void 0 ? DOCUMENT : _options$observeMutat;
  mo = new MUTATION_OBSERVER(function(objects) {
    if (disabled)
      return;
    var defaultPrefix = getDefaultUsablePrefix();
    toArray(objects).forEach(function(mutationRecord) {
      if (mutationRecord.type === "childList" && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {
        if (config.searchPseudoElements) {
          pseudoElementsCallback(mutationRecord.target);
        }
        treeCallback(mutationRecord.target);
      }
      if (mutationRecord.type === "attributes" && mutationRecord.target.parentNode && config.searchPseudoElements) {
        pseudoElementsCallback(mutationRecord.target.parentNode);
      }
      if (mutationRecord.type === "attributes" && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {
        if (mutationRecord.attributeName === "class" && hasPrefixAndIcon(mutationRecord.target)) {
          var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)), prefix = _getCanonicalIcon.prefix, iconName = _getCanonicalIcon.iconName;
          mutationRecord.target.setAttribute(DATA_PREFIX, prefix || defaultPrefix);
          if (iconName)
            mutationRecord.target.setAttribute(DATA_ICON, iconName);
        } else if (hasBeenReplaced(mutationRecord.target)) {
          nodeCallback(mutationRecord.target);
        }
      }
    });
  });
  if (!IS_DOM)
    return;
  mo.observe(observeMutationsRoot, {
    childList: true,
    attributes: true,
    characterData: true,
    subtree: true
  });
}
function disconnect() {
  if (!mo)
    return;
  mo.disconnect();
}
function styleParser(node) {
  var style = node.getAttribute("style");
  var val = [];
  if (style) {
    val = style.split(";").reduce(function(acc, style2) {
      var styles3 = style2.split(":");
      var prop = styles3[0];
      var value = styles3.slice(1);
      if (prop && value.length > 0) {
        acc[prop] = value.join(":").trim();
      }
      return acc;
    }, {});
  }
  return val;
}
function classParser(node) {
  var existingPrefix = node.getAttribute("data-prefix");
  var existingIconName = node.getAttribute("data-icon");
  var innerText = node.innerText !== void 0 ? node.innerText.trim() : "";
  var val = getCanonicalIcon(classArray(node));
  if (!val.prefix) {
    val.prefix = getDefaultUsablePrefix();
  }
  if (existingPrefix && existingIconName) {
    val.prefix = existingPrefix;
    val.iconName = existingIconName;
  }
  if (val.iconName && val.prefix) {
    return val;
  }
  if (val.prefix && innerText.length > 0) {
    val.iconName = byLigature(val.prefix, node.innerText) || byUnicode(val.prefix, toHex(node.innerText));
  }
  if (!val.iconName && config.autoFetchSvg && node.firstChild && node.firstChild.nodeType === Node.TEXT_NODE) {
    val.iconName = node.firstChild.data;
  }
  return val;
}
function attributesParser(node) {
  var extraAttributes = toArray(node.attributes).reduce(function(acc, attr) {
    if (acc.name !== "class" && acc.name !== "style") {
      acc[attr.name] = attr.value;
    }
    return acc;
  }, {});
  var title = node.getAttribute("title");
  var titleId = node.getAttribute("data-fa-title-id");
  if (config.autoA11y) {
    if (title) {
      extraAttributes["aria-labelledby"] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
    } else {
      extraAttributes["aria-hidden"] = "true";
      extraAttributes["focusable"] = "false";
    }
  }
  return extraAttributes;
}
function blankMeta() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: meaninglessTransform,
    symbol: false,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function parseMeta(node) {
  var parser = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: true
  };
  var _classParser = classParser(node), iconName = _classParser.iconName, prefix = _classParser.prefix, extraClasses = _classParser.rest;
  var extraAttributes = attributesParser(node);
  var pluginMeta = chainHooks("parseNodeAttributes", {}, node);
  var extraStyles = parser.styleParser ? styleParser(node) : [];
  return _objectSpread2({
    iconName,
    title: node.getAttribute("title"),
    titleId: node.getAttribute("data-fa-title-id"),
    prefix,
    transform: meaninglessTransform,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: false,
    extra: {
      classes: extraClasses,
      styles: extraStyles,
      attributes: extraAttributes
    }
  }, pluginMeta);
}
var styles$2 = namespace.styles;
function generateMutation(node) {
  var nodeMeta = config.autoReplaceSvg === "nest" ? parseMeta(node, {
    styleParser: false
  }) : parseMeta(node);
  if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {
    return callProvided("generateLayersText", node, nodeMeta);
  } else {
    return callProvided("generateSvgReplacementMutation", node, nodeMeta);
  }
}
var knownPrefixes = /* @__PURE__ */ new Set();
FAMILIES.map(function(family) {
  knownPrefixes.add("fa-".concat(family));
});
Object.keys(PREFIX_TO_STYLE[FAMILY_CLASSIC]).map(knownPrefixes.add.bind(knownPrefixes));
Object.keys(PREFIX_TO_STYLE[FAMILY_SHARP]).map(knownPrefixes.add.bind(knownPrefixes));
knownPrefixes = _toConsumableArray(knownPrefixes);
function onTree(root) {
  var callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!IS_DOM)
    return Promise.resolve();
  var htmlClassList = DOCUMENT.documentElement.classList;
  var hclAdd = function hclAdd2(suffix) {
    return htmlClassList.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
  };
  var hclRemove = function hclRemove2(suffix) {
    return htmlClassList.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
  };
  var prefixes2 = config.autoFetchSvg ? knownPrefixes : FAMILIES.map(function(f) {
    return "fa-".concat(f);
  }).concat(Object.keys(styles$2));
  if (!prefixes2.includes("fa")) {
    prefixes2.push("fa");
  }
  var prefixesDomQuery = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(prefixes2.map(function(p2) {
    return ".".concat(p2, ":not([").concat(DATA_FA_I2SVG, "])");
  })).join(", ");
  if (prefixesDomQuery.length === 0) {
    return Promise.resolve();
  }
  var candidates = [];
  try {
    candidates = toArray(root.querySelectorAll(prefixesDomQuery));
  } catch (e) {
  }
  if (candidates.length > 0) {
    hclAdd("pending");
    hclRemove("complete");
  } else {
    return Promise.resolve();
  }
  var mark = perf.begin("onTree");
  var mutations = candidates.reduce(function(acc, node) {
    try {
      var mutation = generateMutation(node);
      if (mutation) {
        acc.push(mutation);
      }
    } catch (e) {
      if (!PRODUCTION) {
        if (e.name === "MissingIcon") {
          console.error(e);
        }
      }
    }
    return acc;
  }, []);
  return new Promise(function(resolve, reject) {
    Promise.all(mutations).then(function(resolvedMutations) {
      perform(resolvedMutations, function() {
        hclAdd("active");
        hclAdd("complete");
        hclRemove("pending");
        if (typeof callback === "function")
          callback();
        mark();
        resolve();
      });
    }).catch(function(e) {
      mark();
      reject(e);
    });
  });
}
function onNode(node) {
  var callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  generateMutation(node).then(function(mutation) {
    if (mutation) {
      perform([mutation], callback);
    }
  });
}
function resolveIcons(next) {
  return function(maybeIconDefinition) {
    var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
    var mask = params.mask;
    if (mask) {
      mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
    }
    return next(iconDefinition, _objectSpread2(_objectSpread2({}, params), {}, {
      mask
    }));
  };
}
var render = function render2(iconDefinition) {
  var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _params$transform = params.transform, transform = _params$transform === void 0 ? meaninglessTransform : _params$transform, _params$symbol = params.symbol, symbol = _params$symbol === void 0 ? false : _params$symbol, _params$mask = params.mask, mask = _params$mask === void 0 ? null : _params$mask, _params$maskId = params.maskId, maskId = _params$maskId === void 0 ? null : _params$maskId, _params$title = params.title, title = _params$title === void 0 ? null : _params$title, _params$titleId = params.titleId, titleId = _params$titleId === void 0 ? null : _params$titleId, _params$classes = params.classes, classes = _params$classes === void 0 ? [] : _params$classes, _params$attributes = params.attributes, attributes = _params$attributes === void 0 ? {} : _params$attributes, _params$styles = params.styles, styles3 = _params$styles === void 0 ? {} : _params$styles;
  if (!iconDefinition)
    return;
  var prefix = iconDefinition.prefix, iconName = iconDefinition.iconName, icon3 = iconDefinition.icon;
  return domVariants(_objectSpread2({
    type: "icon"
  }, iconDefinition), function() {
    callHooks("beforeDOMElementCreation", {
      iconDefinition,
      params
    });
    if (config.autoA11y) {
      if (title) {
        attributes["aria-labelledby"] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
      } else {
        attributes["aria-hidden"] = "true";
        attributes["focusable"] = "false";
      }
    }
    return makeInlineSvgAbstract({
      icons: {
        main: asFoundIcon(icon3),
        mask: mask ? asFoundIcon(mask.icon) : {
          found: false,
          width: null,
          height: null,
          icon: {}
        }
      },
      prefix,
      iconName,
      transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
      symbol,
      title,
      maskId,
      titleId,
      extra: {
        attributes,
        styles: styles3,
        classes
      }
    });
  });
};
var ReplaceElements = {
  mixout: function mixout2() {
    return {
      icon: resolveIcons(render)
    };
  },
  hooks: function hooks2() {
    return {
      mutationObserverCallbacks: function mutationObserverCallbacks(accumulator) {
        accumulator.treeCallback = onTree;
        accumulator.nodeCallback = onNode;
        return accumulator;
      }
    };
  },
  provides: function provides(providers$$1) {
    providers$$1.i2svg = function(params) {
      var _params$node = params.node, node = _params$node === void 0 ? DOCUMENT : _params$node, _params$callback = params.callback, callback = _params$callback === void 0 ? function() {
      } : _params$callback;
      return onTree(node, callback);
    };
    providers$$1.generateSvgReplacementMutation = function(node, nodeMeta) {
      var iconName = nodeMeta.iconName, title = nodeMeta.title, titleId = nodeMeta.titleId, prefix = nodeMeta.prefix, transform = nodeMeta.transform, symbol = nodeMeta.symbol, mask = nodeMeta.mask, maskId = nodeMeta.maskId, extra = nodeMeta.extra;
      return new Promise(function(resolve, reject) {
        Promise.all([findIcon(iconName, prefix), mask.iconName ? findIcon(mask.iconName, mask.prefix) : Promise.resolve({
          found: false,
          width: 512,
          height: 512,
          icon: {}
        })]).then(function(_ref2) {
          var _ref22 = _slicedToArray(_ref2, 2), main = _ref22[0], mask2 = _ref22[1];
          resolve([node, makeInlineSvgAbstract({
            icons: {
              main,
              mask: mask2
            },
            prefix,
            iconName,
            transform,
            symbol,
            maskId,
            title,
            titleId,
            extra,
            watchable: true
          })]);
        }).catch(reject);
      });
    };
    providers$$1.generateAbstractIcon = function(_ref3) {
      var children = _ref3.children, attributes = _ref3.attributes, main = _ref3.main, transform = _ref3.transform, styles3 = _ref3.styles;
      var styleString = joinStyles(styles3);
      if (styleString.length > 0) {
        attributes["style"] = styleString;
      }
      var nextChild;
      if (transformIsMeaningful(transform)) {
        nextChild = callProvided("generateAbstractTransformGrouping", {
          main,
          transform,
          containerWidth: main.width,
          iconWidth: main.width
        });
      }
      children.push(nextChild || main.icon);
      return {
        children,
        attributes
      };
    };
  }
};
var Layers = {
  mixout: function mixout3() {
    return {
      layer: function layer2(assembler) {
        var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var _params$classes = params.classes, classes = _params$classes === void 0 ? [] : _params$classes;
        return domVariants({
          type: "layer"
        }, function() {
          callHooks("beforeDOMElementCreation", {
            assembler,
            params
          });
          var children = [];
          assembler(function(args) {
            Array.isArray(args) ? args.map(function(a) {
              children = children.concat(a.abstract);
            }) : children = children.concat(args.abstract);
          });
          return [{
            tag: "span",
            attributes: {
              class: ["".concat(config.cssPrefix, "-layers")].concat(_toConsumableArray(classes)).join(" ")
            },
            children
          }];
        });
      }
    };
  }
};
var LayersCounter = {
  mixout: function mixout4() {
    return {
      counter: function counter2(content) {
        var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var _params$title = params.title, title = _params$title === void 0 ? null : _params$title, _params$classes = params.classes, classes = _params$classes === void 0 ? [] : _params$classes, _params$attributes = params.attributes, attributes = _params$attributes === void 0 ? {} : _params$attributes, _params$styles = params.styles, styles3 = _params$styles === void 0 ? {} : _params$styles;
        return domVariants({
          type: "counter",
          content
        }, function() {
          callHooks("beforeDOMElementCreation", {
            content,
            params
          });
          return makeLayersCounterAbstract({
            content: content.toString(),
            title,
            extra: {
              attributes,
              styles: styles3,
              classes: ["".concat(config.cssPrefix, "-layers-counter")].concat(_toConsumableArray(classes))
            }
          });
        });
      }
    };
  }
};
var LayersText = {
  mixout: function mixout5() {
    return {
      text: function text2(content) {
        var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        var _params$transform = params.transform, transform = _params$transform === void 0 ? meaninglessTransform : _params$transform, _params$title = params.title, title = _params$title === void 0 ? null : _params$title, _params$classes = params.classes, classes = _params$classes === void 0 ? [] : _params$classes, _params$attributes = params.attributes, attributes = _params$attributes === void 0 ? {} : _params$attributes, _params$styles = params.styles, styles3 = _params$styles === void 0 ? {} : _params$styles;
        return domVariants({
          type: "text",
          content
        }, function() {
          callHooks("beforeDOMElementCreation", {
            content,
            params
          });
          return makeLayersTextAbstract({
            content,
            transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
            title,
            extra: {
              attributes,
              styles: styles3,
              classes: ["".concat(config.cssPrefix, "-layers-text")].concat(_toConsumableArray(classes))
            }
          });
        });
      }
    };
  },
  provides: function provides2(providers$$1) {
    providers$$1.generateLayersText = function(node, nodeMeta) {
      var title = nodeMeta.title, transform = nodeMeta.transform, extra = nodeMeta.extra;
      var width = null;
      var height = null;
      if (IS_IE) {
        var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);
        var boundingClientRect = node.getBoundingClientRect();
        width = boundingClientRect.width / computedFontSize;
        height = boundingClientRect.height / computedFontSize;
      }
      if (config.autoA11y && !title) {
        extra.attributes["aria-hidden"] = "true";
      }
      return Promise.resolve([node, makeLayersTextAbstract({
        content: node.innerHTML,
        width,
        height,
        transform,
        title,
        extra,
        watchable: true
      })]);
    };
  }
};
var CLEAN_CONTENT_PATTERN = new RegExp('"', "ug");
var SECONDARY_UNICODE_RANGE = [1105920, 1112319];
function hexValueFromContent(content) {
  var cleaned = content.replace(CLEAN_CONTENT_PATTERN, "");
  var codePoint = codePointAt(cleaned, 0);
  var isPrependTen = codePoint >= SECONDARY_UNICODE_RANGE[0] && codePoint <= SECONDARY_UNICODE_RANGE[1];
  var isDoubled = cleaned.length === 2 ? cleaned[0] === cleaned[1] : false;
  return {
    value: isDoubled ? toHex(cleaned[0]) : toHex(cleaned),
    isSecondary: isPrependTen || isDoubled
  };
}
function replaceForPosition(node, position) {
  var pendingAttribute = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(":", "-"));
  return new Promise(function(resolve, reject) {
    if (node.getAttribute(pendingAttribute) !== null) {
      return resolve();
    }
    var children = toArray(node.children);
    var alreadyProcessedPseudoElement = children.filter(function(c) {
      return c.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;
    })[0];
    var styles3 = WINDOW.getComputedStyle(node, position);
    var fontFamily = styles3.getPropertyValue("font-family").match(FONT_FAMILY_PATTERN);
    var fontWeight = styles3.getPropertyValue("font-weight");
    var content = styles3.getPropertyValue("content");
    if (alreadyProcessedPseudoElement && !fontFamily) {
      node.removeChild(alreadyProcessedPseudoElement);
      return resolve();
    } else if (fontFamily && content !== "none" && content !== "") {
      var _content = styles3.getPropertyValue("content");
      var family = ~["Sharp"].indexOf(fontFamily[2]) ? FAMILY_SHARP : FAMILY_CLASSIC;
      var prefix = ~["Solid", "Regular", "Light", "Thin", "Duotone", "Brands", "Kit"].indexOf(fontFamily[2]) ? STYLE_TO_PREFIX[family][fontFamily[2].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[family][fontWeight];
      var _hexValueFromContent = hexValueFromContent(_content), hexValue = _hexValueFromContent.value, isSecondary = _hexValueFromContent.isSecondary;
      var isV4 = fontFamily[0].startsWith("FontAwesome");
      var iconName = byUnicode(prefix, hexValue);
      var iconIdentifier = iconName;
      if (isV4) {
        var iconName4 = byOldUnicode(hexValue);
        if (iconName4.iconName && iconName4.prefix) {
          iconName = iconName4.iconName;
          prefix = iconName4.prefix;
        }
      }
      if (iconName && !isSecondary && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {
        node.setAttribute(pendingAttribute, iconIdentifier);
        if (alreadyProcessedPseudoElement) {
          node.removeChild(alreadyProcessedPseudoElement);
        }
        var meta = blankMeta();
        var extra = meta.extra;
        extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;
        findIcon(iconName, prefix).then(function(main) {
          var _abstract = makeInlineSvgAbstract(_objectSpread2(_objectSpread2({}, meta), {}, {
            icons: {
              main,
              mask: emptyCanonicalIcon()
            },
            prefix,
            iconName: iconIdentifier,
            extra,
            watchable: true
          }));
          var element = DOCUMENT.createElement("svg");
          if (position === "::before") {
            node.insertBefore(element, node.firstChild);
          } else {
            node.appendChild(element);
          }
          element.outerHTML = _abstract.map(function(a) {
            return toHtml(a);
          }).join("\n");
          node.removeAttribute(pendingAttribute);
          resolve();
        }).catch(reject);
      } else {
        resolve();
      }
    } else {
      resolve();
    }
  });
}
function replace2(node) {
  return Promise.all([replaceForPosition(node, "::before"), replaceForPosition(node, "::after")]);
}
function processable(node) {
  return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== "svg");
}
function searchPseudoElements(root) {
  if (!IS_DOM)
    return;
  return new Promise(function(resolve, reject) {
    var operations = toArray(root.querySelectorAll("*")).filter(processable).map(replace2);
    var end3 = perf.begin("searchPseudoElements");
    disableObservation();
    Promise.all(operations).then(function() {
      end3();
      enableObservation();
      resolve();
    }).catch(function() {
      end3();
      enableObservation();
      reject();
    });
  });
}
var PseudoElements = {
  hooks: function hooks3() {
    return {
      mutationObserverCallbacks: function mutationObserverCallbacks(accumulator) {
        accumulator.pseudoElementsCallback = searchPseudoElements;
        return accumulator;
      }
    };
  },
  provides: function provides3(providers$$1) {
    providers$$1.pseudoElements2svg = function(params) {
      var _params$node = params.node, node = _params$node === void 0 ? DOCUMENT : _params$node;
      if (config.searchPseudoElements) {
        searchPseudoElements(node);
      }
    };
  }
};
var _unwatched = false;
var MutationObserver$1 = {
  mixout: function mixout6() {
    return {
      dom: {
        unwatch: function unwatch() {
          disableObservation();
          _unwatched = true;
        }
      }
    };
  },
  hooks: function hooks4() {
    return {
      bootstrap: function bootstrap() {
        observe(chainHooks("mutationObserverCallbacks", {}));
      },
      noAuto: function noAuto3() {
        disconnect();
      },
      watch: function watch2(params) {
        var observeMutationsRoot = params.observeMutationsRoot;
        if (_unwatched) {
          enableObservation();
        } else {
          observe(chainHooks("mutationObserverCallbacks", {
            observeMutationsRoot
          }));
        }
      }
    };
  }
};
var parseTransformString = function parseTransformString2(transformString) {
  var transform = {
    size: 16,
    x: 0,
    y: 0,
    flipX: false,
    flipY: false,
    rotate: 0
  };
  return transformString.toLowerCase().split(" ").reduce(function(acc, n) {
    var parts = n.toLowerCase().split("-");
    var first = parts[0];
    var rest = parts.slice(1).join("-");
    if (first && rest === "h") {
      acc.flipX = true;
      return acc;
    }
    if (first && rest === "v") {
      acc.flipY = true;
      return acc;
    }
    rest = parseFloat(rest);
    if (isNaN(rest)) {
      return acc;
    }
    switch (first) {
      case "grow":
        acc.size = acc.size + rest;
        break;
      case "shrink":
        acc.size = acc.size - rest;
        break;
      case "left":
        acc.x = acc.x - rest;
        break;
      case "right":
        acc.x = acc.x + rest;
        break;
      case "up":
        acc.y = acc.y - rest;
        break;
      case "down":
        acc.y = acc.y + rest;
        break;
      case "rotate":
        acc.rotate = acc.rotate + rest;
        break;
    }
    return acc;
  }, transform);
};
var PowerTransforms = {
  mixout: function mixout7() {
    return {
      parse: {
        transform: function transform(transformString) {
          return parseTransformString(transformString);
        }
      }
    };
  },
  hooks: function hooks5() {
    return {
      parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
        var transformString = node.getAttribute("data-fa-transform");
        if (transformString) {
          accumulator.transform = parseTransformString(transformString);
        }
        return accumulator;
      }
    };
  },
  provides: function provides4(providers2) {
    providers2.generateAbstractTransformGrouping = function(_ref2) {
      var main = _ref2.main, transform = _ref2.transform, containerWidth = _ref2.containerWidth, iconWidth = _ref2.iconWidth;
      var outer = {
        transform: "translate(".concat(containerWidth / 2, " 256)")
      };
      var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
      var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
      var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
      var inner = {
        transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
      };
      var path = {
        transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
      };
      var operations = {
        outer,
        inner,
        path
      };
      return {
        tag: "g",
        attributes: _objectSpread2({}, operations.outer),
        children: [{
          tag: "g",
          attributes: _objectSpread2({}, operations.inner),
          children: [{
            tag: main.icon.tag,
            children: main.icon.children,
            attributes: _objectSpread2(_objectSpread2({}, main.icon.attributes), operations.path)
          }]
        }]
      };
    };
  }
};
var ALL_SPACE = {
  x: 0,
  y: 0,
  width: "100%",
  height: "100%"
};
function fillBlack(_abstract) {
  var force = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  if (_abstract.attributes && (_abstract.attributes.fill || force)) {
    _abstract.attributes.fill = "black";
  }
  return _abstract;
}
function deGroup(_abstract2) {
  if (_abstract2.tag === "g") {
    return _abstract2.children;
  } else {
    return [_abstract2];
  }
}
var Masks = {
  hooks: function hooks6() {
    return {
      parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
        var maskData = node.getAttribute("data-fa-mask");
        var mask = !maskData ? emptyCanonicalIcon() : getCanonicalIcon(maskData.split(" ").map(function(i) {
          return i.trim();
        }));
        if (!mask.prefix) {
          mask.prefix = getDefaultUsablePrefix();
        }
        accumulator.mask = mask;
        accumulator.maskId = node.getAttribute("data-fa-mask-id");
        return accumulator;
      }
    };
  },
  provides: function provides5(providers2) {
    providers2.generateAbstractMask = function(_ref2) {
      var children = _ref2.children, attributes = _ref2.attributes, main = _ref2.main, mask = _ref2.mask, explicitMaskId = _ref2.maskId, transform = _ref2.transform;
      var mainWidth = main.width, mainPath = main.icon;
      var maskWidth = mask.width, maskPath = mask.icon;
      var trans = transformForSvg({
        transform,
        containerWidth: maskWidth,
        iconWidth: mainWidth
      });
      var maskRect = {
        tag: "rect",
        attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
          fill: "white"
        })
      };
      var maskInnerGroupChildrenMixin = mainPath.children ? {
        children: mainPath.children.map(fillBlack)
      } : {};
      var maskInnerGroup = {
        tag: "g",
        attributes: _objectSpread2({}, trans.inner),
        children: [fillBlack(_objectSpread2({
          tag: mainPath.tag,
          attributes: _objectSpread2(_objectSpread2({}, mainPath.attributes), trans.path)
        }, maskInnerGroupChildrenMixin))]
      };
      var maskOuterGroup = {
        tag: "g",
        attributes: _objectSpread2({}, trans.outer),
        children: [maskInnerGroup]
      };
      var maskId = "mask-".concat(explicitMaskId || nextUniqueId());
      var clipId = "clip-".concat(explicitMaskId || nextUniqueId());
      var maskTag = {
        tag: "mask",
        attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
          id: maskId,
          maskUnits: "userSpaceOnUse",
          maskContentUnits: "userSpaceOnUse"
        }),
        children: [maskRect, maskOuterGroup]
      };
      var defs = {
        tag: "defs",
        children: [{
          tag: "clipPath",
          attributes: {
            id: clipId
          },
          children: deGroup(maskPath)
        }, maskTag]
      };
      children.push(defs, {
        tag: "rect",
        attributes: _objectSpread2({
          fill: "currentColor",
          "clip-path": "url(#".concat(clipId, ")"),
          mask: "url(#".concat(maskId, ")")
        }, ALL_SPACE)
      });
      return {
        children,
        attributes
      };
    };
  }
};
var MissingIconIndicator = {
  provides: function provides6(providers2) {
    var reduceMotion = false;
    if (WINDOW.matchMedia) {
      reduceMotion = WINDOW.matchMedia("(prefers-reduced-motion: reduce)").matches;
    }
    providers2.missingIconAbstract = function() {
      var gChildren = [];
      var FILL = {
        fill: "currentColor"
      };
      var ANIMATION_BASE = {
        attributeType: "XML",
        repeatCount: "indefinite",
        dur: "2s"
      };
      gChildren.push({
        tag: "path",
        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
          d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
        })
      });
      var OPACITY_ANIMATE = _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
        attributeName: "opacity"
      });
      var dot = {
        tag: "circle",
        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
          cx: "256",
          cy: "364",
          r: "28"
        }),
        children: []
      };
      if (!reduceMotion) {
        dot.children.push({
          tag: "animate",
          attributes: _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
            attributeName: "r",
            values: "28;14;28;28;14;28;"
          })
        }, {
          tag: "animate",
          attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
            values: "1;0;1;1;0;1;"
          })
        });
      }
      gChildren.push(dot);
      gChildren.push({
        tag: "path",
        attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
          opacity: "1",
          d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
        }),
        children: reduceMotion ? [] : [{
          tag: "animate",
          attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
            values: "1;0;0;0;0;1;"
          })
        }]
      });
      if (!reduceMotion) {
        gChildren.push({
          tag: "path",
          attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
            opacity: "0",
            d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
          }),
          children: [{
            tag: "animate",
            attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
              values: "0;0;1;1;0;0;"
            })
          }]
        });
      }
      return {
        tag: "g",
        attributes: {
          "class": "missing"
        },
        children: gChildren
      };
    };
  }
};
var SvgSymbols = {
  hooks: function hooks7() {
    return {
      parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
        var symbolData = node.getAttribute("data-fa-symbol");
        var symbol = symbolData === null ? false : symbolData === "" ? true : symbolData;
        accumulator["symbol"] = symbol;
        return accumulator;
      }
    };
  }
};
var plugins = [InjectCSS, ReplaceElements, Layers, LayersCounter, LayersText, PseudoElements, MutationObserver$1, PowerTransforms, Masks, MissingIconIndicator, SvgSymbols];
registerPlugins(plugins, {
  mixoutsTo: api
});
var noAuto$1 = api.noAuto;
var config$1 = api.config;
var library$1 = api.library;
var dom$1 = api.dom;
var parse$1 = api.parse;
var findIconDefinition$1 = api.findIconDefinition;
var toHtml$1 = api.toHtml;
var icon2 = api.icon;
var layer = api.layer;
var text = api.text;
var counter = api.counter;

// node_modules/@fortawesome/react-fontawesome/index.es.js
var import_prop_types = __toESM(require_prop_types());
var import_react = __toESM(require_react());
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread22(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function classList(props) {
  var _classes;
  var beat = props.beat, fade = props.fade, beatFade = props.beatFade, bounce = props.bounce, shake = props.shake, flash = props.flash, spin = props.spin, spinPulse = props.spinPulse, spinReverse = props.spinReverse, pulse = props.pulse, fixedWidth = props.fixedWidth, inverse = props.inverse, border = props.border, listItem = props.listItem, flip = props.flip, size = props.size, rotation = props.rotation, pull = props.pull;
  var classes = (_classes = {
    "fa-beat": beat,
    "fa-fade": fade,
    "fa-beat-fade": beatFade,
    "fa-bounce": bounce,
    "fa-shake": shake,
    "fa-flash": flash,
    "fa-spin": spin,
    "fa-spin-reverse": spinReverse,
    "fa-spin-pulse": spinPulse,
    "fa-pulse": pulse,
    "fa-fw": fixedWidth,
    "fa-inverse": inverse,
    "fa-border": border,
    "fa-li": listItem,
    "fa-flip": flip === true,
    "fa-flip-horizontal": flip === "horizontal" || flip === "both",
    "fa-flip-vertical": flip === "vertical" || flip === "both"
  }, _defineProperty2(_classes, "fa-".concat(size), typeof size !== "undefined" && size !== null), _defineProperty2(_classes, "fa-rotate-".concat(rotation), typeof rotation !== "undefined" && rotation !== null && rotation !== 0), _defineProperty2(_classes, "fa-pull-".concat(pull), typeof pull !== "undefined" && pull !== null), _defineProperty2(_classes, "fa-swap-opacity", props.swapOpacity), _classes);
  return Object.keys(classes).map(function(key) {
    return classes[key] ? key : null;
  }).filter(function(key) {
    return key;
  });
}
function _isNumerical(obj) {
  obj = obj - 0;
  return obj === obj;
}
function camelize(string) {
  if (_isNumerical(string)) {
    return string;
  }
  string = string.replace(/[\-_\s]+(.)?/g, function(match, chr) {
    return chr ? chr.toUpperCase() : "";
  });
  return string.substr(0, 1).toLowerCase() + string.substr(1);
}
var _excluded$1 = ["style"];
function capitalize(val) {
  return val.charAt(0).toUpperCase() + val.slice(1);
}
function styleToObject(style) {
  return style.split(";").map(function(s) {
    return s.trim();
  }).filter(function(s) {
    return s;
  }).reduce(function(acc, pair) {
    var i = pair.indexOf(":");
    var prop = camelize(pair.slice(0, i));
    var value = pair.slice(i + 1).trim();
    prop.startsWith("webkit") ? acc[capitalize(prop)] = value : acc[prop] = value;
    return acc;
  }, {});
}
function convert(createElement3, element) {
  var extraProps = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof element === "string") {
    return element;
  }
  var children = (element.children || []).map(function(child) {
    return convert(createElement3, child);
  });
  var mixins = Object.keys(element.attributes || {}).reduce(function(acc, key) {
    var val = element.attributes[key];
    switch (key) {
      case "class":
        acc.attrs["className"] = val;
        delete element.attributes["class"];
        break;
      case "style":
        acc.attrs["style"] = styleToObject(val);
        break;
      default:
        if (key.indexOf("aria-") === 0 || key.indexOf("data-") === 0) {
          acc.attrs[key.toLowerCase()] = val;
        } else {
          acc.attrs[camelize(key)] = val;
        }
    }
    return acc;
  }, {
    attrs: {}
  });
  var _extraProps$style = extraProps.style, existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style, remaining = _objectWithoutProperties(extraProps, _excluded$1);
  mixins.attrs["style"] = _objectSpread22(_objectSpread22({}, mixins.attrs["style"]), existingStyle);
  return createElement3.apply(void 0, [element.tag, _objectSpread22(_objectSpread22({}, mixins.attrs), remaining)].concat(_toConsumableArray2(children)));
}
var PRODUCTION2 = false;
try {
  PRODUCTION2 = false;
} catch (e) {
}
function log() {
  if (!PRODUCTION2 && console && typeof console.error === "function") {
    var _console;
    (_console = console).error.apply(_console, arguments);
  }
}
function normalizeIconArgs(icon3) {
  if (icon3 && _typeof2(icon3) === "object" && icon3.prefix && icon3.iconName && icon3.icon) {
    return icon3;
  }
  if (parse$1.icon) {
    return parse$1.icon(icon3);
  }
  if (icon3 === null) {
    return null;
  }
  if (icon3 && _typeof2(icon3) === "object" && icon3.prefix && icon3.iconName) {
    return icon3;
  }
  if (Array.isArray(icon3) && icon3.length === 2) {
    return {
      prefix: icon3[0],
      iconName: icon3[1]
    };
  }
  if (typeof icon3 === "string") {
    return {
      prefix: "fas",
      iconName: icon3
    };
  }
}
function objectWithKey(key, value) {
  return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty2({}, key, value) : {};
}
var _excluded = ["forwardedRef"];
function FontAwesomeIcon(_ref2) {
  var forwardedRef = _ref2.forwardedRef, props = _objectWithoutProperties(_ref2, _excluded);
  var iconArgs = props.icon, maskArgs = props.mask, symbol = props.symbol, className = props.className, title = props.title, titleId = props.titleId, maskId = props.maskId;
  var iconLookup = normalizeIconArgs(iconArgs);
  var classes = objectWithKey("classes", [].concat(_toConsumableArray2(classList(props)), _toConsumableArray2(className.split(" "))));
  var transform = objectWithKey("transform", typeof props.transform === "string" ? parse$1.transform(props.transform) : props.transform);
  var mask = objectWithKey("mask", normalizeIconArgs(maskArgs));
  var renderedIcon = icon2(iconLookup, _objectSpread22(_objectSpread22(_objectSpread22(_objectSpread22({}, classes), transform), mask), {}, {
    symbol,
    title,
    titleId,
    maskId
  }));
  if (!renderedIcon) {
    log("Could not find icon", iconLookup);
    return null;
  }
  var abstract = renderedIcon.abstract;
  var extraProps = {
    ref: forwardedRef
  };
  Object.keys(props).forEach(function(key) {
    if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {
      extraProps[key] = props[key];
    }
  });
  return convertCurry(abstract[0], extraProps);
}
FontAwesomeIcon.displayName = "FontAwesomeIcon";
FontAwesomeIcon.propTypes = {
  beat: import_prop_types.default.bool,
  border: import_prop_types.default.bool,
  beatFade: import_prop_types.default.bool,
  bounce: import_prop_types.default.bool,
  className: import_prop_types.default.string,
  fade: import_prop_types.default.bool,
  flash: import_prop_types.default.bool,
  mask: import_prop_types.default.oneOfType([import_prop_types.default.object, import_prop_types.default.array, import_prop_types.default.string]),
  maskId: import_prop_types.default.string,
  fixedWidth: import_prop_types.default.bool,
  inverse: import_prop_types.default.bool,
  flip: import_prop_types.default.oneOf([true, false, "horizontal", "vertical", "both"]),
  icon: import_prop_types.default.oneOfType([import_prop_types.default.object, import_prop_types.default.array, import_prop_types.default.string]),
  listItem: import_prop_types.default.bool,
  pull: import_prop_types.default.oneOf(["right", "left"]),
  pulse: import_prop_types.default.bool,
  rotation: import_prop_types.default.oneOf([0, 90, 180, 270]),
  shake: import_prop_types.default.bool,
  size: import_prop_types.default.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
  spin: import_prop_types.default.bool,
  spinPulse: import_prop_types.default.bool,
  spinReverse: import_prop_types.default.bool,
  symbol: import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.string]),
  title: import_prop_types.default.string,
  titleId: import_prop_types.default.string,
  transform: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.object]),
  swapOpacity: import_prop_types.default.bool
};
FontAwesomeIcon.defaultProps = {
  border: false,
  className: "",
  mask: null,
  maskId: null,
  fixedWidth: false,
  inverse: false,
  flip: false,
  icon: null,
  listItem: false,
  pull: null,
  pulse: false,
  rotation: null,
  size: null,
  spin: false,
  spinPulse: false,
  spinReverse: false,
  beat: false,
  fade: false,
  beatFade: false,
  bounce: false,
  shake: false,
  symbol: false,
  title: "",
  titleId: null,
  transform: null,
  swapOpacity: false
};
var convertCurry = convert.bind(null, import_react.default.createElement);

// node_modules/@livekit/react-components/dist/index.modern.js
var import_react_tiny_popover = __toESM(require_Popover());

// node_modules/@livekit/react-core/dist/index.modern.js
var import_react2 = __toESM(require_react());
function useParticipant(participant) {
  var _useState = (0, import_react2.useState)(false), isAudioMuted = _useState[0], setAudioMuted = _useState[1];
  var _useState2 = (0, import_react2.useState)(false), setVideoMuted = _useState2[1];
  var _useState3 = (0, import_react2.useState)(participant.connectionQuality), connectionQuality = _useState3[0], setConnectionQuality = _useState3[1];
  var _useState4 = (0, import_react2.useState)(false), isSpeaking = _useState4[0], setSpeaking = _useState4[1];
  var _useState5 = (0, import_react2.useState)(), metadata = _useState5[0], setMetadata = _useState5[1];
  var _useState6 = (0, import_react2.useState)([]), publications = _useState6[0], setPublications = _useState6[1];
  var _useState7 = (0, import_react2.useState)([]), subscribedTracks = _useState7[0], setSubscribedTracks = _useState7[1];
  var onPublicationsChanged = function onPublicationsChanged2() {
    setPublications(Array.from(participant.tracks.values()));
    setSubscribedTracks(Array.from(participant.tracks.values()).filter(function(pub) {
      return pub.isSubscribed && pub.track !== void 0;
    }));
  };
  (0, import_react2.useEffect)(function() {
    var onMuted = function onMuted2(pub) {
      if (pub.kind === Track.Kind.Audio) {
        setAudioMuted(true);
      } else if (pub.kind === Track.Kind.Video) {
        setVideoMuted(true);
      }
    };
    var onUnmuted = function onUnmuted2(pub) {
      if (pub.kind === Track.Kind.Audio) {
        setAudioMuted(false);
      } else if (pub.kind === Track.Kind.Video) {
        setVideoMuted(false);
      }
    };
    var onMetadataChanged = function onMetadataChanged2() {
      if (participant.metadata) {
        setMetadata(participant.metadata);
      }
    };
    var onIsSpeakingChanged = function onIsSpeakingChanged2() {
      setSpeaking(participant.isSpeaking);
    };
    var onConnectionQualityUpdate = function onConnectionQualityUpdate2() {
      setConnectionQuality(participant.connectionQuality);
    };
    participant.on(ParticipantEvent.TrackMuted, onMuted).on(ParticipantEvent.TrackUnmuted, onUnmuted).on(ParticipantEvent.ParticipantMetadataChanged, onMetadataChanged).on(ParticipantEvent.IsSpeakingChanged, onIsSpeakingChanged).on(ParticipantEvent.TrackPublished, onPublicationsChanged).on(ParticipantEvent.TrackUnpublished, onPublicationsChanged).on(ParticipantEvent.TrackSubscribed, onPublicationsChanged).on(ParticipantEvent.TrackUnsubscribed, onPublicationsChanged).on(ParticipantEvent.LocalTrackPublished, onPublicationsChanged).on(ParticipantEvent.LocalTrackUnpublished, onPublicationsChanged).on(ParticipantEvent.ConnectionQualityChanged, onConnectionQualityUpdate);
    onMetadataChanged();
    onIsSpeakingChanged();
    onPublicationsChanged();
    return function() {
      participant.off(ParticipantEvent.TrackMuted, onMuted).off(ParticipantEvent.TrackUnmuted, onUnmuted).off(ParticipantEvent.ParticipantMetadataChanged, onMetadataChanged).off(ParticipantEvent.IsSpeakingChanged, onIsSpeakingChanged).off(ParticipantEvent.TrackPublished, onPublicationsChanged).off(ParticipantEvent.TrackUnpublished, onPublicationsChanged).off(ParticipantEvent.TrackSubscribed, onPublicationsChanged).off(ParticipantEvent.TrackUnsubscribed, onPublicationsChanged).off(ParticipantEvent.LocalTrackPublished, onPublicationsChanged).off(ParticipantEvent.LocalTrackUnpublished, onPublicationsChanged).off(ParticipantEvent.ConnectionQualityChanged, onConnectionQualityUpdate);
    };
  }, [participant]);
  var muted;
  participant.audioTracks.forEach(function(pub) {
    muted = pub.isMuted;
  });
  if (muted === void 0) {
    muted = true;
  }
  if (isAudioMuted !== muted) {
    setAudioMuted(muted);
  }
  return {
    isLocal: participant instanceof LocalParticipant,
    isSpeaking,
    connectionQuality,
    publications,
    subscribedTracks,
    cameraPublication: participant.getTrack(Track.Source.Camera),
    microphonePublication: participant.getTrack(Track.Source.Microphone),
    screenSharePublication: participant.getTrack(Track.Source.ScreenShare),
    metadata
  };
}
var _iteratorSymbol = typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
var _asyncIteratorSymbol = typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")) : "@@asyncIterator";
function _catch(body, recover) {
  try {
    var result = body();
  } catch (e) {
    return recover(e);
  }
  if (result && result.then) {
    return result.then(void 0, recover);
  }
  return result;
}
function useRoom(roomOptions) {
  var _useState = (0, import_react2.useState)(), room = _useState[0], setRoom = _useState[1];
  var _useState2 = (0, import_react2.useState)(false), isConnecting = _useState2[0], setIsConnecting = _useState2[1];
  var _useState3 = (0, import_react2.useState)(), error = _useState3[0], setError = _useState3[1];
  var _useState4 = (0, import_react2.useState)([]), participants = _useState4[0], setParticipants = _useState4[1];
  var _useState5 = (0, import_react2.useState)([]), audioTracks = _useState5[0], setAudioTracks = _useState5[1];
  var _useState6 = (0, import_react2.useState)(ConnectionState.Disconnected), connectionState = _useState6[0], setConnectionState = _useState6[1];
  (0, import_react2.useEffect)(function() {
    setRoom(new Room(roomOptions));
  }, []);
  var connectFn = (0, import_react2.useCallback)(function(url, token, options) {
    try {
      setIsConnecting(true);
      return Promise.resolve(_catch(function() {
        var onParticipantsChanged = function onParticipantsChanged2() {
          if (!room)
            return;
          var remotes = Array.from(room.participants.values());
          var participants2 = [room.localParticipant];
          participants2.push.apply(participants2, remotes);
          setParticipants(participants2);
        };
        var onSubscribedTrackChanged = function onSubscribedTrackChanged2(track) {
          onParticipantsChanged();
          if (track && track.kind !== Track.Kind.Audio || !room) {
            return;
          }
          var tracks = [];
          room.participants.forEach(function(p2) {
            p2.audioTracks.forEach(function(pub) {
              if (pub.audioTrack) {
                tracks.push(pub.audioTrack);
              }
            });
          });
          setAudioTracks(tracks);
        };
        var onConnectionStateChanged = function onConnectionStateChanged2(state) {
          setConnectionState(state);
        };
        if (!room) {
          setError(new Error("room is not ready yet"));
          return;
        }
        room.once(RoomEvent.Disconnected, function() {
          room.off(RoomEvent.ParticipantConnected, onParticipantsChanged).off(RoomEvent.ParticipantDisconnected, onParticipantsChanged).off(RoomEvent.ActiveSpeakersChanged, onParticipantsChanged).off(RoomEvent.TrackSubscribed, onSubscribedTrackChanged).off(RoomEvent.TrackUnsubscribed, onSubscribedTrackChanged).off(RoomEvent.LocalTrackPublished, onParticipantsChanged).off(RoomEvent.LocalTrackUnpublished, onParticipantsChanged).off(RoomEvent.AudioPlaybackStatusChanged, onParticipantsChanged).off(RoomEvent.ConnectionStateChanged, onConnectionStateChanged);
        });
        room.on(RoomEvent.ParticipantConnected, onParticipantsChanged).on(RoomEvent.ParticipantDisconnected, onParticipantsChanged).on(RoomEvent.ActiveSpeakersChanged, onParticipantsChanged).on(RoomEvent.TrackSubscribed, onSubscribedTrackChanged).on(RoomEvent.TrackUnsubscribed, onSubscribedTrackChanged).on(RoomEvent.LocalTrackPublished, onParticipantsChanged).on(RoomEvent.LocalTrackUnpublished, onParticipantsChanged).on(RoomEvent.AudioPlaybackStatusChanged, onParticipantsChanged).on(RoomEvent.ConnectionStateChanged, onConnectionStateChanged);
        return Promise.resolve(room.connect(url, token, options)).then(function() {
          setIsConnecting(false);
          onSubscribedTrackChanged();
          setError(void 0);
          return room;
        });
      }, function(error2) {
        setIsConnecting(false);
        if (error2 instanceof Error) {
          setError(error2);
        } else {
          setError(new Error("an error has occured"));
        }
        return void 0;
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  }, [room]);
  return {
    connect: connectFn,
    isConnecting,
    room,
    error,
    participants,
    audioTracks,
    connectionState
  };
}
var VideoRenderer = function VideoRenderer2(_ref2) {
  var _track$mediaStreamTra;
  var track = _ref2.track, isLocal = _ref2.isLocal, isMirrored = _ref2.isMirrored, objectFit = _ref2.objectFit, className = _ref2.className, onSizeChanged = _ref2.onSizeChanged, width = _ref2.width, height = _ref2.height;
  var ref = (0, import_react2.useRef)(null);
  (0, import_react2.useEffect)(function() {
    var el = ref.current;
    if (!el) {
      return;
    }
    el.muted = true;
    track.attach(el);
    return function() {
      track.detach(el);
    };
  }, [track, ref]);
  var handleResize = (0, import_react2.useCallback)(function(ev) {
    if (ev.target instanceof HTMLVideoElement) {
      if (onSizeChanged) {
        onSizeChanged(ev.target.videoWidth, ev.target.videoHeight);
      }
    }
  }, []);
  (0, import_react2.useEffect)(function() {
    var el = ref.current;
    if (el) {
      el.addEventListener("resize", handleResize);
    }
    return function() {
      el === null || el === void 0 ? void 0 : el.removeEventListener("resize", handleResize);
    };
  }, [ref]);
  var style = {
    width,
    height
  };
  var isFrontFacingOrUnknown = ((_track$mediaStreamTra = track.mediaStreamTrack) === null || _track$mediaStreamTra === void 0 ? void 0 : _track$mediaStreamTra.getSettings().facingMode) !== "environment";
  if (isMirrored || isMirrored === void 0 && isLocal && isFrontFacingOrUnknown) {
    style.transform = "rotateY(180deg)";
  }
  if (objectFit) {
    style.objectFit = objectFit;
  }
  return import_react2.default.createElement("video", {
    ref,
    className,
    style
  });
};
var AudioRenderer = function AudioRenderer2(_ref2) {
  var track = _ref2.track, isLocal = _ref2.isLocal;
  var audioEl = (0, import_react2.useRef)();
  (0, import_react2.useEffect)(function() {
    if (isLocal) {
      return;
    }
    audioEl.current = track.attach();
    if (track.sid) {
      audioEl.current.setAttribute("data-audio-track-id", track.sid);
    }
    return function() {
      return track.detach().forEach(function(el) {
        return el.remove();
      });
    };
  }, [track, isLocal]);
  return null;
};

// node_modules/@livekit/react-components/dist/index.modern.js
var import_react_aspect_ratio = __toESM(require_es());
var import_react_responsive = __toESM(require_react_responsive());
var styles2 = { "video": "_2WNzJ", "participant": "_34YL4", "speaker": "_1y2fW", "placeholder": "_30KSQ", "participantBar": "_2LCHl", "name": "_55u8f", "center": "_213aF", "stats": "_te685", "screenShare": "_1FIqv", "iconRed": "_3LzZj", "controlsWrapper": "_2kKks", "buttonWrapper": "_3w3nM", "button": "_hRq5k", "icon": "_1Nxni", "dangerButton": "_Rt0RH", "dropdown": "_3Lz0y", "hasDropdown": "_3Bgvz", "separator": "_1VLMM", "popoverMenu": "_3XXS4", "list": "_dKNN7", "container": "_14898", "overlay": "_17KXW", "unmuteButton": "_3QhLc" };
var ControlButton = function ControlButton2(_ref2) {
  var label = _ref2.label, disabled2 = _ref2.disabled, _onClick = _ref2.onClick, icon3 = _ref2.icon, className = _ref2.className, menuItems = _ref2.menuItems, popoverContainerClassName = _ref2.popoverContainerClassName, popoverTriggerBtnClassName = _ref2.popoverTriggerBtnClassName, popoverTriggerBtnSeparatorClassName = _ref2.popoverTriggerBtnSeparatorClassName, onMenuItemClick = _ref2.onMenuItemClick;
  var _useState = (0, import_react3.useState)(false), menuVisible = _useState[0], setMenuVisible = _useState[1];
  var classes = styles2.button;
  if (className) {
    classes += " " + className;
  }
  var handleMenuClick = function handleMenuClick2(item) {
    setMenuVisible(false);
    if (onMenuItemClick) {
      onMenuItemClick(item);
    }
  };
  var menuTrigger;
  var menu = import_react3.default.createElement("div", null);
  if (menuItems && menuItems.length > 0) {
    classes += " " + styles2.hasDropdown;
    menuTrigger = import_react3.default.createElement("button", {
      disabled: disabled2,
      className: styles2.button + " " + popoverTriggerBtnClassName + "  " + styles2.dropdown,
      onClick: function onClick() {
        return setMenuVisible(!menuVisible);
      }
    }, import_react3.default.createElement("div", {
      className: styles2.separator + " " + popoverTriggerBtnSeparatorClassName
    }), import_react3.default.createElement(FontAwesomeIcon, {
      height: 32,
      icon: faChevronDown
    }));
    menu = import_react3.default.createElement("div", {
      className: styles2.popoverMenu + " " + popoverContainerClassName
    }, import_react3.default.createElement("ul", {
      className: styles2.list
    }, menuItems === null || menuItems === void 0 ? void 0 : menuItems.map(function(item, i) {
      return import_react3.default.createElement("li", {
        key: i,
        onClick: function onClick() {
          return handleMenuClick(item);
        }
      }, item.label);
    })));
  }
  var mainContent = import_react3.default.createElement("button", {
    disabled: disabled2,
    className: classes,
    onClick: function onClick() {
      setMenuVisible(false);
      if (_onClick)
        _onClick();
    }
  }, icon3 && import_react3.default.createElement(FontAwesomeIcon, {
    className: styles2.icon,
    height: 32,
    icon: icon3
  }), label);
  if (!menuTrigger) {
    return mainContent;
  }
  return import_react3.default.createElement(import_react_tiny_popover.Popover, {
    isOpen: menuVisible,
    positions: ["top"],
    content: menu
  }, import_react3.default.createElement("div", {
    className: styles2.buttonWrapper
  }, mainContent, menuTrigger));
};
var AudioSelectButton = function AudioSelectButton2(_ref2) {
  var isMuted = _ref2.isMuted, onClick = _ref2.onClick, onSourceSelected = _ref2.onSourceSelected, isButtonDisabled = _ref2.isButtonDisabled, _ref$muteText = _ref2.muteText, muteText = _ref$muteText === void 0 ? "Mute" : _ref$muteText, _ref$unmuteText = _ref2.unmuteText, unmuteText = _ref$unmuteText === void 0 ? "Unmute" : _ref$unmuteText, _ref$requestPermissio = _ref2.requestPermissions, requestPermissions = _ref$requestPermissio === void 0 ? true : _ref$requestPermissio, className = _ref2.className, popoverContainerClassName = _ref2.popoverContainerClassName, popoverTriggerBtnClassName = _ref2.popoverTriggerBtnClassName, popoverTriggerBtnSeparatorClassName = _ref2.popoverTriggerBtnSeparatorClassName;
  var _useState = (0, import_react3.useState)([]), sources = _useState[0], setSources = _useState[1];
  var _useState2 = (0, import_react3.useState)([]), menuItems = _useState2[0], setMenuItems = _useState2[1];
  var listAudioDevices = (0, import_react3.useCallback)(function() {
    try {
      return Promise.resolve(Room.getLocalDevices("audioinput", requestPermissions)).then(function(devices) {
        setSources(devices);
        setMenuItems(devices.map(function(item) {
          return {
            label: item.label
          };
        }));
      });
    } catch (e) {
      return Promise.reject(e);
    }
  }, []);
  (0, import_react3.useEffect)(function() {
    listAudioDevices();
    navigator.mediaDevices.addEventListener("devicechange", listAudioDevices);
    return function() {
      navigator.mediaDevices.removeEventListener("devicechange", listAudioDevices);
    };
  }, []);
  var handleMenuItem = function handleMenuItem2(item) {
    var device = sources.find(function(d2) {
      return d2.label === item.label;
    });
    if (device && onSourceSelected) {
      onSourceSelected(device);
    }
  };
  return import_react3.default.createElement(ControlButton, {
    label: isMuted ? unmuteText : muteText,
    icon: isMuted ? faMicrophoneSlash : faMicrophone,
    disabled: isButtonDisabled,
    onClick,
    menuItems,
    onMenuItemClick: handleMenuItem,
    className,
    popoverContainerClassName,
    popoverTriggerBtnClassName,
    popoverTriggerBtnSeparatorClassName
  });
};
var VideoSelectButton = function VideoSelectButton2(_ref2) {
  var isEnabled = _ref2.isEnabled, onClick = _ref2.onClick, onSourceSelected = _ref2.onSourceSelected, _ref$disableText = _ref2.disableText, disableText = _ref$disableText === void 0 ? "Disable Video" : _ref$disableText, _ref$enableText = _ref2.enableText, enableText = _ref$enableText === void 0 ? "Enable Video" : _ref$enableText, _ref$requestPermissio = _ref2.requestPermissions, requestPermissions = _ref$requestPermissio === void 0 ? true : _ref$requestPermissio, className = _ref2.className, isButtonDisabled = _ref2.isButtonDisabled, popoverContainerClassName = _ref2.popoverContainerClassName, popoverTriggerBtnClassName = _ref2.popoverTriggerBtnClassName, popoverTriggerBtnSeparatorClassName = _ref2.popoverTriggerBtnSeparatorClassName;
  var _useState = (0, import_react3.useState)([]), sources = _useState[0], setSources = _useState[1];
  var _useState2 = (0, import_react3.useState)([]), menuItems = _useState2[0], setMenuItems = _useState2[1];
  var listVideoDevices = (0, import_react3.useCallback)(function() {
    try {
      return Promise.resolve(Room.getLocalDevices("videoinput", requestPermissions)).then(function(devices) {
        setSources(devices);
        setMenuItems(devices.map(function(item) {
          return {
            label: item.label
          };
        }));
      });
    } catch (e) {
      return Promise.reject(e);
    }
  }, []);
  (0, import_react3.useEffect)(function() {
    listVideoDevices();
    navigator.mediaDevices.addEventListener("devicechange", listVideoDevices);
    return function() {
      navigator.mediaDevices.removeEventListener("devicechange", listVideoDevices);
    };
  }, []);
  var handleMenuItem = function handleMenuItem2(item) {
    var device = sources.find(function(d2) {
      return d2.label === item.label;
    });
    if (device && onSourceSelected) {
      onSourceSelected(device);
    }
  };
  return import_react3.default.createElement(ControlButton, {
    label: isEnabled ? disableText : enableText,
    icon: isEnabled ? faVideo : faVideoSlash,
    disabled: isButtonDisabled,
    onClick,
    menuItems,
    onMenuItemClick: handleMenuItem,
    className,
    popoverContainerClassName,
    popoverTriggerBtnClassName,
    popoverTriggerBtnSeparatorClassName
  });
};
var ControlsView = function ControlsView2(_ref2) {
  var room = _ref2.room, enableScreenShare = _ref2.enableScreenShare, enableAudio = _ref2.enableAudio, enableVideo = _ref2.enableVideo, onLeave = _ref2.onLeave;
  var _useParticipant = useParticipant(room.localParticipant), camPub = _useParticipant.cameraPublication, micPub = _useParticipant.microphonePublication;
  if (enableScreenShare === void 0) {
    enableScreenShare = true;
  }
  if (enableVideo === void 0) {
    enableVideo = true;
  }
  if (enableAudio === void 0) {
    enableAudio = true;
  }
  var _React$useState = import_react3.default.useState(false), audioButtonDisabled = _React$useState[0], setAudioButtonDisabled = _React$useState[1];
  var muteButton;
  if (enableAudio) {
    var _micPub$isMuted;
    var enabled = !((_micPub$isMuted = micPub === null || micPub === void 0 ? void 0 : micPub.isMuted) != null ? _micPub$isMuted : true);
    muteButton = import_react3.default.createElement(AudioSelectButton, {
      isMuted: !enabled,
      isButtonDisabled: audioButtonDisabled,
      onClick: function() {
        try {
          setAudioButtonDisabled(true);
          room.localParticipant.setMicrophoneEnabled(!enabled)["finally"](function() {
            return setAudioButtonDisabled(false);
          });
          return Promise.resolve();
        } catch (e) {
          return Promise.reject(e);
        }
      },
      onSourceSelected: function onSourceSelected(device) {
        setAudioButtonDisabled(true);
        room.switchActiveDevice("audioinput", device.deviceId)["finally"](function() {
          return setAudioButtonDisabled(false);
        });
      }
    });
  }
  var _React$useState2 = import_react3.default.useState(false), videoButtonDisabled = _React$useState2[0], setVideoButtonDisabled = _React$useState2[1];
  var videoButton;
  if (enableVideo) {
    var _camPub$isMuted;
    var _enabled = !((_camPub$isMuted = camPub === null || camPub === void 0 ? void 0 : camPub.isMuted) != null ? _camPub$isMuted : true);
    videoButton = import_react3.default.createElement(VideoSelectButton, {
      isEnabled: _enabled,
      isButtonDisabled: videoButtonDisabled,
      onClick: function onClick() {
        setVideoButtonDisabled(true);
        room.localParticipant.setCameraEnabled(!_enabled)["finally"](function() {
          return setVideoButtonDisabled(false);
        });
      },
      onSourceSelected: function onSourceSelected(device) {
        setVideoButtonDisabled(true);
        room.switchActiveDevice("videoinput", device.deviceId)["finally"](function() {
          return setVideoButtonDisabled(false);
        });
      }
    });
  }
  var _React$useState3 = import_react3.default.useState(false), screenButtonDisabled = _React$useState3[0], setScreenButtonDisabled = _React$useState3[1];
  var screenButton;
  if (enableScreenShare) {
    var _enabled2 = room.localParticipant.isScreenShareEnabled;
    screenButton = import_react3.default.createElement(ControlButton, {
      label: _enabled2 ? "Stop sharing" : "Share screen",
      icon: _enabled2 ? faStop : faDesktop,
      disabled: screenButtonDisabled,
      onClick: function onClick() {
        setScreenButtonDisabled(true);
        room.localParticipant.setScreenShareEnabled(!_enabled2)["finally"](function() {
          return setScreenButtonDisabled(false);
        });
      }
    });
  }
  return import_react3.default.createElement("div", {
    className: styles2.controlsWrapper
  }, muteButton, videoButton, screenButton, onLeave && import_react3.default.createElement(ControlButton, {
    label: "End",
    className: styles2.dangerButton,
    onClick: function onClick() {
      room.disconnect();
      onLeave(room);
    }
  }));
};
var DisplayContext = import_react3.default.createContext({
  stageLayout: "grid",
  showStats: false
});
var _path;
var _path2;
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function SvgConnectionQuality1(props) {
  return (0, import_react3.createElement)("svg", _extends({
    width: 9,
    height: 9,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = (0, import_react3.createElement)("path", {
    d: "M0 6h2v3H0V6z",
    fill: "#981010"
  })), _path2 || (_path2 = (0, import_react3.createElement)("path", {
    d: "M3.5 3h2v6h-2V3zM7 0h2v9H7V0z",
    fill: "#1A1B1D"
  })));
}
var _path$1;
var _path2$1;
function _extends$1() {
  _extends$1 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
function SvgConnectionQuality2(props) {
  return (0, import_react3.createElement)("svg", _extends$1({
    width: 9,
    height: 9,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path$1 || (_path$1 = (0, import_react3.createElement)("path", {
    d: "M0 6h2v3H0V6zM3.5 3h2v6h-2V3z",
    fill: "#F89C13"
  })), _path2$1 || (_path2$1 = (0, import_react3.createElement)("path", {
    d: "M7 0h2v9H7V0z",
    fill: "#1A1B1D"
  })));
}
var _path$2;
function _extends$2() {
  _extends$2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$2.apply(this, arguments);
}
function SvgConnectionQuality3(props) {
  return (0, import_react3.createElement)("svg", _extends$2({
    width: 9,
    height: 9,
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path$2 || (_path$2 = (0, import_react3.createElement)("path", {
    d: "M0 6h2v3H0V6zM3.5 3h2v6h-2V3zM7 0h2v9H7V0z",
    fill: "#28994E"
  })));
}
var ParticipantView = function ParticipantView2(_ref2) {
  var participant = _ref2.participant, width = _ref2.width, height = _ref2.height, className = _ref2.className, speakerClassName = _ref2.speakerClassName, aspectWidth = _ref2.aspectWidth, aspectHeight = _ref2.aspectHeight, orientation = _ref2.orientation, displayName = _ref2.displayName, showOverlay = _ref2.showOverlay, showConnectionQuality = _ref2.showConnectionQuality, onMouseEnter = _ref2.onMouseEnter, onMouseLeave = _ref2.onMouseLeave, onClick = _ref2.onClick;
  var _useParticipant = useParticipant(participant), cameraPublication = _useParticipant.cameraPublication, isLocal = _useParticipant.isLocal, connectionQuality = _useParticipant.connectionQuality, isSpeaking = _useParticipant.isSpeaking;
  var _useState = (0, import_react3.useState)(), videoSize = _useState[0], setVideoSize = _useState[1];
  var _useState2 = (0, import_react3.useState)(), currentBitrate = _useState2[0], setCurrentBitrate = _useState2[1];
  var context = (0, import_react3.useContext)(DisplayContext);
  var handleResize = (0, import_react3.useCallback)(function(width2, height2) {
    setVideoSize(width2 + "x" + height2);
  }, []);
  (0, import_react3.useEffect)(function() {
    var interval = setInterval(function() {
      var total = 0;
      participant.tracks.forEach(function(pub) {
        if (pub.track instanceof LocalTrack || pub.track instanceof RemoteTrack) {
          total += pub.track.currentBitrate;
        }
      });
      setCurrentBitrate(total);
    }, 1e3);
    return function() {
      clearInterval(interval);
    };
  }, []);
  var containerStyles = {
    width,
    height
  };
  var objectFit = "contain";
  var videoOrientation;
  if (!orientation && aspectWidth && aspectHeight) {
    orientation = aspectWidth > aspectHeight ? "landscape" : "portrait";
  }
  if (cameraPublication !== null && cameraPublication !== void 0 && cameraPublication.dimensions) {
    videoOrientation = cameraPublication.dimensions.width > cameraPublication.dimensions.height ? "landscape" : "portrait";
  }
  if (videoOrientation === orientation) {
    objectFit = "cover";
  }
  if (!displayName) {
    displayName = participant.name || participant.identity;
    if (isLocal) {
      displayName += " (You)";
    }
  }
  var mainElement;
  if (cameraPublication !== null && cameraPublication !== void 0 && cameraPublication.isSubscribed && cameraPublication !== null && cameraPublication !== void 0 && cameraPublication.track && !(cameraPublication !== null && cameraPublication !== void 0 && cameraPublication.isMuted)) {
    mainElement = import_react3.default.createElement(VideoRenderer, {
      track: cameraPublication.track,
      isLocal,
      objectFit,
      width: "100%",
      height: "100%",
      className: styles2.video,
      onSizeChanged: handleResize
    });
  } else {
    mainElement = import_react3.default.createElement("div", {
      className: styles2.placeholder
    });
  }
  var classes = [styles2.participant];
  if (className) {
    classes.push(className);
  }
  if (isSpeaking) {
    classes.push(speakerClassName != null ? speakerClassName : styles2.speaker);
  }
  var isAudioMuted = !participant.isMicrophoneEnabled;
  var statsContent;
  if (context.showStats) {
    statsContent = import_react3.default.createElement("div", {
      className: styles2.stats
    }, import_react3.default.createElement("span", null, videoSize), currentBitrate !== void 0 && currentBitrate > 0 && import_react3.default.createElement("span", null, " ", Math.round(currentBitrate / 1024), " kbps"));
  }
  var ConnectionQualityIndicator;
  if (showConnectionQuality) {
    switch (connectionQuality) {
      case ConnectionQuality.Excellent:
        ConnectionQualityIndicator = SvgConnectionQuality3;
        break;
      case ConnectionQuality.Good:
        ConnectionQualityIndicator = SvgConnectionQuality2;
        break;
      case ConnectionQuality.Poor:
        ConnectionQualityIndicator = SvgConnectionQuality1;
        break;
    }
  }
  return import_react3.default.createElement("div", {
    className: classes.join(" "),
    style: containerStyles,
    onMouseEnter,
    onMouseLeave,
    onClick
  }, aspectWidth && aspectHeight && import_react3.default.createElement(import_react_aspect_ratio.AspectRatio, {
    ratio: aspectWidth / aspectHeight
  }, mainElement), (!aspectWidth || !aspectHeight) && mainElement, (showOverlay || context.showStats) && import_react3.default.createElement("div", {
    className: styles2.participantBar
  }, import_react3.default.createElement("div", {
    className: styles2.name
  }, displayName), import_react3.default.createElement("div", {
    className: styles2.center
  }, statsContent), import_react3.default.createElement("div", null, ConnectionQualityIndicator && import_react3.default.createElement(ConnectionQualityIndicator, null)), import_react3.default.createElement("div", null, import_react3.default.createElement(FontAwesomeIcon, {
    icon: isAudioMuted ? faMicrophoneSlash : faMicrophone,
    height: 24,
    className: isAudioMuted ? styles2.iconRed : styles2.iconNormal
  }))));
};
var ScreenShareView = function ScreenShareView2(_ref2) {
  var track = _ref2.track, width = _ref2.width, height = _ref2.height;
  return import_react3.default.createElement("div", {
    className: styles2.screenShare
  }, import_react3.default.createElement(VideoRenderer, {
    track,
    isLocal: false,
    width,
    height,
    className: styles2.video
  }));
};
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (it)
    return (it = it.call(o)).next.bind(it);
  if (Array.isArray(o) || (it = _unsupportedIterableToArray3(o)) || allowArrayLike && o && typeof o.length === "number") {
    if (it)
      o = it;
    var i = 0;
    return function() {
      if (i >= o.length)
        return {
          done: true
        };
      return {
        done: false,
        value: o[i++]
      };
    };
  }
  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var styles$12 = { "container": "_2sm4e", "stage": "_2VE66", "stageCenter": "_2kKDi", "sidebar": "_gA0MQ", "controlsArea": "_1smc2", "gridStage": "_2HbZ0", "grid1x1": "_2ltyS", "grid2x1": "_2vumQ", "grid2x2": "_X-1Rk", "grid3x3": "_3rLR0", "grid4x4": "_3qF9s", "grid5x5": "_mDdNR" };
var GridStage = function GridStage2(_ref2) {
  var roomState = _ref2.roomState, participantRenderer = _ref2.participantRenderer, controlRenderer = _ref2.controlRenderer, onLeave = _ref2.onLeave;
  var isConnecting = roomState.isConnecting, error = roomState.error, participants = roomState.participants, room = roomState.room;
  var _useState = (0, import_react3.useState)([]), visibleParticipants = _useState[0], setVisibleParticipants = _useState[1];
  var _useState2 = (0, import_react3.useState)(false), showOverlay = _useState2[0], setShowOverlay = _useState2[1];
  var _React$useState = import_react3.default.useState(styles$12.grid1x1), gridClass = _React$useState[0], setGridClass = _React$useState[1];
  (0, import_react3.useEffect)(function() {
    var _room$activeSpeakers;
    var numVisible = 1;
    if (participants.length === 1) {
      setGridClass(styles$12.grid1x1);
    } else if (participants.length === 2) {
      setGridClass(styles$12.grid2x1);
      numVisible = 2;
    } else if (participants.length <= 4) {
      setGridClass(styles$12.grid2x2);
      numVisible = Math.min(participants.length, 4);
    } else if (participants.length <= 9) {
      setGridClass(styles$12.grid3x3);
      numVisible = Math.min(participants.length, 9);
    } else if (participants.length <= 16) {
      setGridClass(styles$12.grid4x4);
      numVisible = Math.min(participants.length, 16);
    } else {
      setGridClass(styles$12.grid5x5);
      numVisible = Math.min(participants.length, 25);
    }
    var newParticipants = [];
    visibleParticipants.forEach(function(p3) {
      if (room !== null && room !== void 0 && room.participants.has(p3.sid) || (room === null || room === void 0 ? void 0 : room.localParticipant.sid) === p3.sid) {
        newParticipants.push(p3);
      }
    });
    room === null || room === void 0 ? void 0 : (_room$activeSpeakers = room.activeSpeakers) === null || _room$activeSpeakers === void 0 ? void 0 : _room$activeSpeakers.forEach(function(speaker) {
      if (newParticipants.includes(speaker) || speaker !== (room === null || room === void 0 ? void 0 : room.localParticipant) && !(room !== null && room !== void 0 && room.participants.has(speaker.sid))) {
        return;
      }
      var idx = newParticipants.findIndex(function(p3) {
        return !p3.isSpeaking;
      });
      if (idx >= 0) {
        newParticipants[idx] = speaker;
      } else {
        newParticipants.push(speaker);
      }
    });
    for (var _iterator = _createForOfIteratorHelperLoose(participants), _step; !(_step = _iterator()).done; ) {
      var p2 = _step.value;
      if (newParticipants.length >= numVisible) {
        break;
      }
      if (newParticipants.includes(p2) || p2.isSpeaking) {
        continue;
      }
      newParticipants.push(p2);
    }
    if (newParticipants.length > numVisible) {
      newParticipants.splice(numVisible, newParticipants.length - numVisible);
    }
    setVisibleParticipants(newParticipants);
  }, [participants]);
  if (error) {
    return import_react3.default.createElement("div", null, "error ", error.message);
  }
  if (isConnecting) {
    return import_react3.default.createElement("div", null, "connecting");
  }
  if (!room) {
    return import_react3.default.createElement("div", null, "room closed");
  }
  if (participants.length === 0) {
    return import_react3.default.createElement("div", null, "no one is in the room");
  }
  var ParticipantRenderer = participantRenderer != null ? participantRenderer : ParticipantView;
  var ControlRenderer = controlRenderer != null ? controlRenderer : ControlsView;
  return import_react3.default.createElement("div", {
    className: styles$12.container
  }, import_react3.default.createElement("div", {
    className: styles$12.gridStage + " " + gridClass
  }, visibleParticipants.map(function(participant) {
    return import_react3.default.createElement(ParticipantRenderer, {
      key: participant.identity,
      participant,
      orientation: "landscape",
      width: "100%",
      height: "100%",
      showOverlay,
      showConnectionQuality: true,
      onMouseEnter: function onMouseEnter() {
        return setShowOverlay(true);
      },
      onMouseLeave: function onMouseLeave() {
        return setShowOverlay(false);
      }
    });
  })), import_react3.default.createElement("div", {
    className: styles$12.controlsArea
  }, import_react3.default.createElement(ControlRenderer, {
    room,
    onLeave
  })));
};
function defaultSortParticipants(participants) {
  var sortedParticipants = [].concat(participants);
  sortedParticipants.sort(function(a, b) {
    var _a$joinedAt$getTime, _a$joinedAt, _b$joinedAt$getTime, _b$joinedAt;
    if (a.isSpeaking && b.isSpeaking) {
      return b.audioLevel - a.audioLevel;
    }
    if (a.isSpeaking !== b.isSpeaking) {
      if (a.isSpeaking) {
        return -1;
      } else {
        return 1;
      }
    }
    if (a.lastSpokeAt !== b.lastSpokeAt) {
      var _a$lastSpokeAt$getTim, _a$lastSpokeAt, _b$lastSpokeAt$getTim, _b$lastSpokeAt;
      var aLast = (_a$lastSpokeAt$getTim = (_a$lastSpokeAt = a.lastSpokeAt) === null || _a$lastSpokeAt === void 0 ? void 0 : _a$lastSpokeAt.getTime()) != null ? _a$lastSpokeAt$getTim : 0;
      var bLast = (_b$lastSpokeAt$getTim = (_b$lastSpokeAt = b.lastSpokeAt) === null || _b$lastSpokeAt === void 0 ? void 0 : _b$lastSpokeAt.getTime()) != null ? _b$lastSpokeAt$getTim : 0;
      return bLast - aLast;
    }
    var aVideo = a.videoTracks.size > 0;
    var bVideo = b.videoTracks.size > 0;
    if (aVideo !== bVideo) {
      if (aVideo) {
        return -1;
      } else {
        return 1;
      }
    }
    return ((_a$joinedAt$getTime = (_a$joinedAt = a.joinedAt) === null || _a$joinedAt === void 0 ? void 0 : _a$joinedAt.getTime()) != null ? _a$joinedAt$getTime : 0) - ((_b$joinedAt$getTime = (_b$joinedAt = b.joinedAt) === null || _b$joinedAt === void 0 ? void 0 : _b$joinedAt.getTime()) != null ? _b$joinedAt$getTime : 0);
  });
  var localParticipant = sortedParticipants.find(function(p2) {
    return p2 instanceof LocalParticipant;
  });
  if (localParticipant) {
    var localIdx = sortedParticipants.indexOf(localParticipant);
    if (localIdx >= 0) {
      sortedParticipants.splice(localIdx, 1);
      if (sortedParticipants.length > 0) {
        sortedParticipants.splice(1, 0, localParticipant);
      } else {
        sortedParticipants.push(localParticipant);
      }
    }
  }
  return sortedParticipants;
}
var SpeakerStage = function SpeakerStage2(_ref2) {
  var roomState = _ref2.roomState, participantRenderer = _ref2.participantRenderer, controlRenderer = _ref2.controlRenderer, onLeave = _ref2.onLeave, sortParticipants = _ref2.sortParticipants;
  var isConnecting = roomState.isConnecting, error = roomState.error, participants = roomState.participants, room = roomState.room;
  var _useState = (0, import_react3.useState)(false), showOverlay = _useState[0], setShowOverlay = _useState[1];
  var sortFn = sortParticipants != null ? sortParticipants : defaultSortParticipants;
  var _useState2 = (0, import_react3.useState)(sortFn(participants)), sortedParticipants = _useState2[0], setSortedParticipants = _useState2[1];
  (0, import_react3.useEffect)(function() {
    setSortedParticipants(sortFn(participants));
  }, [participants, sortFn]);
  if (error) {
    return import_react3.default.createElement("div", null, "error ", error.message);
  }
  if (isConnecting) {
    return import_react3.default.createElement("div", null, "connecting");
  }
  if (!room) {
    return import_react3.default.createElement("div", null, "room closed");
  }
  if (sortedParticipants.length === 0) {
    return import_react3.default.createElement("div", null, "no one is in the room");
  }
  var ParticipantRenderer = participantRenderer != null ? participantRenderer : ParticipantView;
  var ControlRenderer = controlRenderer != null ? controlRenderer : ControlsView;
  var screenTrack;
  sortedParticipants.forEach(function(p2) {
    if (screenTrack) {
      return;
    }
    var track = p2.getTrack(Track.Source.ScreenShare);
    if (track !== null && track !== void 0 && track.isSubscribed && track.videoTrack) {
      screenTrack = track.videoTrack;
    }
  });
  var otherParticipants = sortedParticipants;
  var participantInFocus;
  var mainView;
  if (screenTrack) {
    mainView = import_react3.default.createElement(ScreenShareView, {
      track: screenTrack,
      height: "100%",
      width: "100%"
    });
  } else {
    participantInFocus = sortedParticipants[0];
    otherParticipants = sortedParticipants.slice(1);
    mainView = import_react3.default.createElement(ParticipantRenderer, {
      key: participantInFocus.identity,
      participant: participantInFocus,
      width: "100%",
      height: "100%",
      orientation: "landscape",
      showOverlay,
      showConnectionQuality: true,
      onMouseEnter: function onMouseEnter() {
        return setShowOverlay(true);
      },
      onMouseLeave: function onMouseLeave() {
        return setShowOverlay(false);
      }
    });
  }
  return import_react3.default.createElement("div", {
    className: styles$12.container
  }, import_react3.default.createElement("div", {
    className: styles$12.stage
  }, import_react3.default.createElement("div", {
    className: styles$12.stageCenter
  }, mainView), import_react3.default.createElement("div", {
    className: styles$12.sidebar
  }, otherParticipants.map(function(participant) {
    return import_react3.default.createElement(ParticipantRenderer, {
      key: participant.identity,
      participant,
      width: "100%",
      aspectWidth: 16,
      aspectHeight: 9,
      showOverlay,
      onMouseEnter: function onMouseEnter() {
        return setShowOverlay(true);
      },
      onMouseLeave: function onMouseLeave() {
        return setShowOverlay(false);
      }
    });
  }))), import_react3.default.createElement("div", {
    className: styles$12.controlsArea
  }, import_react3.default.createElement(ControlRenderer, {
    room,
    onLeave
  })));
};
var styles$22 = { "container": "_2zM8F", "stage": "_9PXrI", "participantsArea": "_Tl5ht", "participant": "_jGXiG", "controlsArea": "_3MB5b" };
var MobileStage = function MobileStage2(_ref2) {
  var roomState = _ref2.roomState, participantRenderer = _ref2.participantRenderer, controlRenderer = _ref2.controlRenderer, onLeave = _ref2.onLeave, sortParticipants = _ref2.sortParticipants;
  var isConnecting = roomState.isConnecting, error = roomState.error, participants = roomState.participants, room = roomState.room;
  var _useState = (0, import_react3.useState)(false), showOverlay = _useState[0], setShowOverlay = _useState[1];
  var sortFn = sortParticipants != null ? sortParticipants : defaultSortParticipants;
  var _useState2 = (0, import_react3.useState)(sortFn(participants)), sortedParticipants = _useState2[0], setSortedParticipants = _useState2[1];
  (0, import_react3.useEffect)(function() {
    setSortedParticipants(sortFn(participants));
  }, [participants, sortFn]);
  if (error) {
    return import_react3.default.createElement("div", null, "error ", error.message);
  }
  if (isConnecting) {
    return import_react3.default.createElement("div", null, "connecting");
  }
  if (!room) {
    return import_react3.default.createElement("div", null, "room closed");
  }
  if (sortedParticipants.length === 0) {
    return import_react3.default.createElement("div", null, "no one is in the room");
  }
  var ParticipantRenderer = participantRenderer != null ? participantRenderer : ParticipantView;
  var ControlRenderer = controlRenderer != null ? controlRenderer : ControlsView;
  var screenTrack;
  sortedParticipants.forEach(function(p2) {
    if (screenTrack) {
      return;
    }
    var track = p2.getTrack(Track.Source.ScreenShare);
    if (track !== null && track !== void 0 && track.isSubscribed && track.videoTrack) {
      screenTrack = track.videoTrack;
    }
  });
  var otherParticipants = sortedParticipants;
  var participantInFocus;
  var mainView;
  if (screenTrack) {
    mainView = import_react3.default.createElement(ScreenShareView, {
      track: screenTrack,
      height: "100%",
      width: "100%"
    });
  } else if (otherParticipants.length === 0) {
    mainView = import_react3.default.createElement("div", null, "no one is in the room");
  } else {
    var _otherParticipants = otherParticipants;
    participantInFocus = _otherParticipants[0];
    otherParticipants = _otherParticipants.slice(1);
    mainView = import_react3.default.createElement(ParticipantRenderer, {
      key: participantInFocus.identity,
      participant: participantInFocus,
      showOverlay,
      width: "100%",
      height: "100%",
      orientation: "portrait",
      showConnectionQuality: true,
      onMouseEnter: function onMouseEnter() {
        return setShowOverlay(true);
      },
      onMouseLeave: function onMouseLeave() {
        return setShowOverlay(false);
      }
    });
  }
  return import_react3.default.createElement("div", {
    className: styles$22.container
  }, import_react3.default.createElement("div", {
    className: styles$22.stage
  }, mainView), import_react3.default.createElement("div", {
    className: styles$22.participantsArea
  }, otherParticipants.map(function(participant) {
    return import_react3.default.createElement(ParticipantRenderer, {
      key: participant.identity,
      participant,
      className: styles$22.participant,
      aspectWidth: 4,
      aspectHeight: 3,
      showOverlay,
      onMouseEnter: function onMouseEnter() {
        return setShowOverlay(true);
      },
      onMouseLeave: function onMouseLeave() {
        return setShowOverlay(false);
      }
    });
  })), import_react3.default.createElement("div", {
    className: styles$22.controlsArea
  }, import_react3.default.createElement(ControlRenderer, {
    room,
    enableScreenShare: false,
    onLeave
  })));
};
var StageView = function StageView2(stageProps) {
  var isMobile = (0, import_react_responsive.useMediaQuery)({
    query: "(max-width: 800px)"
  });
  var _stageProps$roomState = stageProps.roomState, room = _stageProps$roomState.room, participants = _stageProps$roomState.participants;
  var context = (0, import_react3.useContext)(DisplayContext);
  var mainElement;
  if (isMobile) {
    mainElement = import_react3.default.createElement(MobileStage, Object.assign({}, stageProps));
  } else {
    var screenTrack;
    participants.forEach(function(p2) {
      if (screenTrack) {
        return;
      }
      var track = p2.getTrack(Track.Source.ScreenShare);
      if (track !== null && track !== void 0 && track.isSubscribed && track.videoTrack) {
        screenTrack = track.videoTrack;
      }
    });
    if (context.stageLayout === "grid" && screenTrack === void 0) {
      mainElement = import_react3.default.createElement(GridStage, Object.assign({}, stageProps));
    } else {
      mainElement = import_react3.default.createElement(SpeakerStage, Object.assign({}, stageProps));
    }
  }
  return import_react3.default.createElement("div", {
    className: styles2.container
  }, mainElement, stageProps.roomState.audioTracks.map(function(track) {
    return import_react3.default.createElement(AudioRenderer, {
      key: track.sid,
      track,
      isLocal: false
    });
  }), (room === null || room === void 0 ? void 0 : room.canPlaybackAudio) === false && import_react3.default.createElement("div", {
    className: styles2.overlay
  }, import_react3.default.createElement("button", {
    className: styles2.unmuteButton,
    onClick: function onClick() {
      room.startAudio();
    }
  }, import_react3.default.createElement(FontAwesomeIcon, {
    className: styles2.icon,
    size: "1x",
    icon: faVolumeMute
  }), "Click to Unmute")));
};
var LiveKitRoom = function LiveKitRoom2(_ref2) {
  var url = _ref2.url, token = _ref2.token, roomOptions = _ref2.roomOptions, connectOptions = _ref2.connectOptions, stageRenderer = _ref2.stageRenderer, participantRenderer = _ref2.participantRenderer, controlRenderer = _ref2.controlRenderer, onConnected = _ref2.onConnected, onLeave = _ref2.onLeave;
  var roomState = useRoom(roomOptions);
  (0, import_react3.useEffect)(function() {
    if (roomState.room) {
      roomState.connect(url, token, connectOptions).then(function(room) {
        if (!room) {
          return;
        }
        if (onConnected && room.state === ConnectionState.Connected) {
          onConnected(room);
        }
      });
    }
    return function() {
      var _roomState$room;
      if (((_roomState$room = roomState.room) === null || _roomState$room === void 0 ? void 0 : _roomState$room.state) !== ConnectionState.Disconnected) {
        var _roomState$room2;
        (_roomState$room2 = roomState.room) === null || _roomState$room2 === void 0 ? void 0 : _roomState$room2.disconnect();
      }
    };
  }, [roomState.room]);
  var selectedStageRenderer = stageRenderer != null ? stageRenderer : StageView;
  return selectedStageRenderer({
    roomState,
    participantRenderer,
    controlRenderer,
    onLeave
  });
};
export {
  AudioRenderer,
  AudioSelectButton,
  ControlButton,
  ControlsView,
  DisplayContext,
  LiveKitRoom,
  ParticipantView,
  ScreenShareView,
  StageView,
  VideoRenderer,
  VideoSelectButton,
  useParticipant,
  useRoom
};
/*! Bundled license information:

react-responsive/dist/react-responsive.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=@livekit_react-components.js.map
